{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.structured-clone.js\";\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport Vue from \"vue\";\nimport loadingCSS from \"../components/static/loadingCSS.vue\";\nimport { VTextField, VRadioGroup, VRadio, VSlider, VCheckbox, VSwitch, VSelect } from \"vuetify/lib\";\n// All components that are used in the form need to be globally registered.\nVue.component(\"VTextField\", VTextField);\nVue.component(\"VRadioGroup\", VRadioGroup);\nVue.component(\"VRadio\", VRadio);\nVue.component(\"VSlider\", VSlider);\nVue.component(\"VCheckbox\", VCheckbox);\nVue.component(\"VSwitch\", VSwitch);\nVue.component(\"VSelect\", VSelect);\nimport { getServicio, getSubServicioSpecificUser, getServicioEspecifico, getServicioEspecificoEspecifico, getDepartamento, getCiudad, getDocumento, newForm, getClientes, getServicioSpecificUser } from \"@/api\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport searchUserVue from \"../components/searchUser.vue\";\nconst valuesServiciodef = {\n  servicio: \"\",\n  subservicio: \"\"\n};\nconst valuesUbicaciondef = {\n  departamento: \"\",\n  ciudad: \"\"\n};\nconst valuesCandidatodef = {\n  nombreCandidato: \"\",\n  tipodocumento: \"\",\n  documento: \"\",\n  numeroCandidato: \"\",\n  correo: \"\",\n  direccion: \"\",\n  observaciones: \"\"\n};\nconst defaultResponsive = \" @media (max-width: 600px) { width: 98%; max-width: 98%; margin: 1% }\";\nconst thirtyPercent = \"width: 28%;max-width: 28%;margin: 1%;\";\nconst thirtyPercentWFloat = \"width: 28%;max-width: 28%;margin: 1%; float: left;\";\nconst fourtyPercent = \"width: 38%;max-width: 38%;margin: 1%;\";\nconst fourtyPercentWFloat = \"width: 38%;max-width: 38%;margin: 1%; float: left;\";\nconst fiftyPercent = \"width: 48%;max-width: 48%;margin: 1%;\";\nconst fiftyPercentWFloat = \"width: 48%;max-width: 48%;margin: 1%; float: left;\";\nconst sixtyPercent = \"width: 58%;max-width: 58%;margin: 1%;\";\nconst sixtyPercentWFloat = \"width: 58%;max-width: 58%;margin: 1%; float: left;\";\nconst seventyPercent = \"width: 68%;max-width: 68%;margin: 1%;\";\nconst seventyPercentWFloat = \"width: 68%;max-width: 68%;margin: 1%; float: left;\";\nconst hundredPercent = \"width: 98%;max-width: 98%;margin: 1%;\";\nconst hundredPercentWFloat = \"width: 98%;max-width: 98%;margin: 1%; float: left;\";\nexport default {\n  data() {\n    return {\n      valuesServicio: [],\n      CentroCostos: \"\",\n      schemaServicio: [],\n      valuesUbicacion: {\n        departamento: \"\",\n        ciudad: \"\"\n      },\n      schemaUbicacion: [],\n      componentKey: 0,\n      componentKeyUbicacion: -1,\n      valuesCandidato: {\n        nombreCandidato: \"\",\n        tipodocumento: \"\",\n        documento: \"\",\n        numeroCandidato: \"\",\n        correo: \"\",\n        direccion: \"\",\n        observaciones: \"\"\n      },\n      schemaCandidato: [],\n      Images: null,\n      datosUser: {},\n      userSearch: [],\n      userSearchSelected: [],\n      serviciosDefault: [],\n      loading: false,\n      errorRequeridos: \"\",\n      mensajesEnvioForm: []\n    };\n  },\n  methods: {\n    myEventHandler(e) {\n      if (e.currentTarget.innerWidth <= 600) {\n        let classNames = document.getElementsByClassName(\"blitz-field\");\n        for (let i = 0; i < classNames.length; i++) {\n          document.getElementsByClassName(\"blitz-field\")[i].style = \"\";\n        }\n      }\n    },\n    getobservaciones(id, arraySubservicios) {\n      for (let i in arraySubservicios) {\n        if (arraySubservicios[i].id == id) {\n          if (arraySubservicios[i].observaciones != \"\") {\n            return arraySubservicios[i].observaciones;\n          }\n          return \"No hay observaciones\";\n        }\n      }\n    },\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n    recargarFormulario() {\n      this.componentKey += 1;\n      this.componentKeyUbicacion -= 1;\n    },\n    validarForm(schema, values) {\n      let returnValue = true;\n      for (let i = 0; i < schema.length; i++) {\n        let element = schema[i];\n        if (element.isRequired) {\n          if (values[element.id] == \"\" || values[element.id] === null || values[element.id].length === 0) {\n            if (this.errorRequeridos == \"\") {\n              this.errorRequeridos = \" El campo \" + element.placeholder + \" es requerido <br>\";\n            } else {\n              this.errorRequeridos += \" El campo \" + element.placeholder + \" es requerido <br>\";\n            }\n            returnValue = false;\n          }\n        }\n      }\n      return returnValue;\n    },\n    validarServicios() {\n      let values = this.valuesServicio;\n      let returnValue = true;\n      for (let i = 0; i < values.length; i++) {\n        if (values[i].servicio == \"\" || values[i].servicio === null || values[i].servicio.length === 0 || values[i].subservicio == \"\" || values[i].subservicio === null || values[i].subservicio.length === 0) {\n          if (this.errorRequeridos == \"\") {\n            this.errorRequeridos = \" Campos del servicio \" + (i + 1) + \" están incompletos <br>\";\n          } else {\n            this.errorRequeridos += \" Campos del servicio \" + (i + 1) + \" están incompletos <br>\";\n          }\n          returnValue = false;\n        }\n      }\n      return returnValue;\n    },\n    validarFormularios() {\n      this.errorRequeridos = \"\";\n    },\n    uploadFile() {\n      this.Images = this.$refs.file.files[0];\n    },\n    enviarFormulario() {\n      this.loading = true;\n      const formData = new FormData();\n      formData.append(\"file\", this.Images);\n      formData.append(\"CentroCostos\", this.CentroCostos);\n      formData.append(\"InfoServicio\", JSON.stringify(this.valuesServicio));\n      formData.append(\"Ubicacion\", JSON.stringify(this.valuesUbicacion));\n      formData.append(\"Candidato\", JSON.stringify(this.valuesCandidato));\n      if (this.$dataUser[0].rol == \"Admin\") {\n        formData.append(\"Usuario\", JSON.stringify(this.userSearchSelected));\n      }\n      newForm(formData).then(function (response) {\n        const separarString = value => value.split(/\\r\\n|\\r|\\n/, -1);\n        let stringSeparada = separarString(response.data);\n        this.mensajesEnvioForm = [];\n        for (let msg in stringSeparada) {\n          if (stringSeparada[msg] != \"\") {\n            if (stringSeparada[msg].search(\"Error\") == -1) {\n              this.mensajesEnvioForm.push({\n                icon: \"success\",\n                title: stringSeparada[msg]\n              });\n              //this.valuesServicio = valuesServiciodef;\n              //this.valuesUbicacion = valuesUbicaciondef;\n              //this.valuesCandidato = valuesCandidatodef;\n              this.loading = false;\n              this.recargarFormulario();\n              //setTimeout('document.location.reload()',1000);\n            } else {\n              this.mensajesEnvioForm.push({\n                icon: \"error\",\n                title: stringSeparada[msg]\n              });\n              this.loading = false;\n              this.recargarFormulario();\n            }\n          }\n        }\n      }.bind(this));\n    },\n    agregarServicios() {\n      this.schemaServicio.push(structuredClone({\n        servicio: this.serviciosDefault,\n        subservicio: []\n      }));\n      this.valuesServicio.push(structuredClone(valuesServiciodef));\n    },\n    consultaServicio(idEmpresa) {\n      getServicioSpecificUser(idEmpresa).then(function (response) {\n        this.preServicios = response.data;\n        this.serviciosDefault = [];\n        for (let i = 0; i < this.preServicios.length; i++) {\n          this.serviciosDefault.push({\n            id: this.preServicios[i].ID_SERVICIO,\n            nombre: this.preServicios[i].NOMBRE_SERVICIO\n          });\n        }\n        this.schemaServicio = [];\n        this.schemaServicio.push(structuredClone({\n          servicio: this.serviciosDefault,\n          subservicio: []\n        }));\n        this.valuesServicio = [];\n        this.valuesServicio.push(structuredClone(valuesServiciodef));\n\n        //this.agregarServicios();\n        this.recargarFormulario();\n      }.bind(this));\n    },\n    buscarSubservicio(id, indice) {\n      this.valuesServicio[indice].subservicio = \"\";\n      let idUser = this.userSearchSelected;\n      if (this.$dataUser[0].idRol == 8 || this.$dataUser[0].idRol == 2) {\n        idUser = this.$dataUser[0].id;\n      }\n      getSubServicioSpecificUser(id, idUser).then(function (response) {\n        if (response.data.length > 0) {\n          let preSubServicios = response.data;\n          let subserviciosDefault = [];\n          for (let i = 0; i < preSubServicios.length; i++) {\n            subserviciosDefault.push({\n              id: preSubServicios[i].ID_SUBSERVICIO,\n              nombre: preSubServicios[i].NOMBRE_SUBSERVICIO,\n              observaciones: preSubServicios[i].observaciones\n            });\n          }\n          this.schemaServicio[indice].subservicio = subserviciosDefault;\n          this.recargarFormulario();\n        }\n      }.bind(this));\n    },\n    consultaCiudad(id) {\n      getCiudad(id).then(function (response) {\n        const indice = 1;\n        if (response.data.length > 0) {\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"Seleccione la ciudad\",\n            disabled: true\n          };\n          const options = [itemsOptionsTemplate];\n          for (let i = 0; i < response.data.length; i++) {\n            // Solución planteada así por un error de referencia de memoria\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"\"\n            };\n            const subTemplate = itemsOptionsTemplate;\n            itemsOptionsTemplate.value = response.data[i].ID_CIUDAD;\n            subTemplate.text = response.data[i].NOMBRE_CIUDAD;\n            options.push(subTemplate);\n          }\n          if (this.schemaUbicacion[indice] == null) {\n            this.schemaUbicacion.splice(indice, 0, {\n              id: \"ciudad\",\n              span: true,\n              component: \"VSelect\",\n              placeholder: \"Ciudad*\",\n              items: options,\n              style: fiftyPercentWFloat,\n              isRequired: true\n            });\n          } else {\n            this.schemaUbicacion[indice] = {\n              id: \"ciudad\",\n              span: true,\n              component: \"VSelect\",\n              placeholder: \"Ciudad*\",\n              items: options,\n              style: fiftyPercentWFloat,\n              isRequired: true\n            };\n          }\n        } else {\n          this.schemaUbicacion.splice(indice, 1);\n        }\n        this.recargarFormulario();\n        this.validarFormularios();\n      }.bind(this));\n    }\n  },\n  mounted() {\n    if (this.$dataUser[0].idRol == 8 || this.$dataUser[0].idRol == 2) {\n      this.consultaServicio(this.$dataUser[0].id);\n    }\n    const {\n      offsetWidth,\n      offsetHeight\n    } = document.querySelector(\"#app\");\n    if (offsetWidth <= 600) {\n      setTimeout(function () {\n        let classNames = document.getElementsByClassName(\"blitz-field\");\n        for (let i = 0; i < classNames.length; i++) {\n          document.getElementsByClassName(\"blitz-field\")[i].style = \"\";\n        }\n      }, 200);\n    }\n    let classNames = document.getElementsByClassName(\"blitz-form__form\");\n    for (let i = 0; i < classNames.length; i++) {\n      document.getElementsByClassName(\"blitz-form__form\")[i].style = \"display: block\";\n    }\n    getClientes().then(function (response) {\n      this.userSearch = response.data;\n    }.bind(this));\n    getDepartamento().then(function (response) {\n      const indice = 0;\n      const totalForms = 5;\n      const itemsOptionsTemplate = {\n        value: \"\",\n        text: \"Seleccione el departamento\",\n        disabled: true\n      };\n      const options = [itemsOptionsTemplate];\n      for (let i = 0; i < response.data.length; i++) {\n        // Solución planteada así por un error de referencia de memoria\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"\"\n        };\n        const subTemplate = itemsOptionsTemplate;\n        itemsOptionsTemplate.value = response.data[i].ID_DEPARTAMENTO;\n        subTemplate.text = response.data[i].NOMBRE_DEPARTAMENTO;\n        options.push(subTemplate);\n      }\n      if (this.schemaUbicacion[indice] == null) {\n        this.schemaUbicacion.splice(indice, 0, {\n          id: \"departamento\",\n          span: true,\n          component: \"VSelect\",\n          placeholder: \"Departamento*\",\n          items: options,\n          style: fiftyPercentWFloat,\n          isRequired: true\n        });\n      } else {\n        this.schemaUbicacion[indice] = {\n          id: \"departamento\",\n          span: true,\n          component: \"VSelect\",\n          placeholder: \"Departamento*\",\n          items: options,\n          style: fiftyPercentWFloat,\n          isRequired: true\n        };\n      }\n      this.recargarFormulario();\n    }.bind(this));\n    getDocumento().then(function (response) {\n      const indice = 0;\n      const totalForms = 5;\n      const itemsOptionsTemplate = {\n        value: \"\",\n        text: \"Tipo documento\",\n        disabled: true\n      };\n      const options = [itemsOptionsTemplate];\n      for (let i = 0; i < response.data.length; i++) {\n        // Solución planteada así por un error de referencia de memoria\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"\"\n        };\n        const subTemplate = itemsOptionsTemplate;\n        itemsOptionsTemplate.value = response.data[i].ID_TIPO_DOCUMENTO;\n        subTemplate.text = response.data[i].DESC_TIPO_DOCUMENTO;\n        options.push(subTemplate);\n      }\n      const opcionesDocumentos = {\n        id: \"tipodocumento\",\n        span: true,\n        component: \"VSelect\",\n        placeholder: \"Tipo de documento*\",\n        items: options,\n        style: fourtyPercentWFloat,\n        isRequired: true\n      };\n      this.schemaCandidato = [{\n        id: \"nombreCandidato\",\n        component: \"VTextField\",\n        placeholder: \"Nombre del candidato*\",\n        isRequired: true\n      }, opcionesDocumentos, {\n        id: \"documento\",\n        component: \"VTextField\",\n        placeholder: \"Número de documento*\",\n        style: sixtyPercent,\n        isRequired: true\n      }, {\n        id: \"numeroCandidato\",\n        component: \"VTextField\",\n        placeholder: \"Número telefónico*\",\n        style: fiftyPercentWFloat,\n        isRequired: true\n      }, {\n        id: \"correo\",\n        component: \"VTextField\",\n        placeholder: \"Correo*\",\n        style: fiftyPercentWFloat,\n        isRequired: true\n      }, {\n        id: \"direccion\",\n        component: \"VTextField\",\n        placeholder: \"Dirección*\",\n        style: hundredPercentWFloat,\n        isRequired: true\n      }, {\n        id: \"observaciones\",\n        component: \"VTextField\",\n        style: hundredPercentWFloat,\n        placeholder: \"Observaciones\"\n      }];\n      this.recargarFormulario();\n    }.bind(this));\n  },\n  created() {\n    window.addEventListener(\"resize\", this.myEventHandler);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.myEventHandler);\n  },\n  watch: {\n    valuesUbicacion(newValue, oldValue) {\n      if (newValue.departamento && newValue.departamento != oldValue.departamento) {\n        this.valuesUbicacion.ciudad = \"\";\n        this.consultaCiudad(newValue.departamento);\n      }\n      this.validarFormularios();\n    },\n    valuesServicio: {\n      handler(val) {\n        this.validarFormularios();\n      },\n      deep: true\n    },\n    valuesCandidato(newValue, oldValue) {\n      this.validarFormularios();\n    },\n    userSearchSelected(newValue, oldValue) {\n      this.consultaServicio(newValue);\n    }\n  },\n  components: {\n    FullBoxVue,\n    BlitzForm,\n    MiddleBox,\n    searchUserVue,\n    loadingCSS\n  }\n};","map":{"version":3,"mappings":";;;AAgHA;AACA;AACA;AACA;AAEA,SACAA,YACAC,aACAC,QACAC,SACAC,WACAC,SACAC,eACA;AACA;AACAC;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AAEA,SACAC,aACAC,4BACAC,uBACAC,iCACAC,iBACAC,WACAC,cACAC,SACAC,aACAC,+BACA;AACA;AACA;AAEA;EACAC;EACAC;AACA;AAEA;EACAC;EACAC;AACA;AAEA;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;AACA;AAEA,0BACA;AAEA;AACA,4BACA;AAEA;AACA,4BACA;AAEA;AACA;AAEA;AACA;AAEA;AACA,6BACA;AAEA;AACA,6BACA;AAEA;EACAC;IACA;MACAC;MACAC;MACAC;MAEAC;QACAb;QACAC;MACA;MACAa;MACAC;MACAC;MAEAC;QACAf;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAU;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;QACA;QACA;UACAC;QACA;MACA;IACA;IAEAC;MACA;QACA;UACA;YACA;UACA;UACA;QACA;MACA;IACA;IAEAC;MACA;IACA;IACAC;MACA;MACA;IACA;IAEAC;MACA;MACA;QACA;QACA;UACA,IACAC,4BACAA,+BACAA,iCACA;YACA;cACA,uBACA;YACA;cACA,wBACA;YACA;YACAC;UACA;QACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;QACA,IACAF,4BACAA,+BACAA,mCACAA,+BACAA,kCACAA,oCACA;UACA;YACA,uBACA;UACA;YACA,wBACA;UACA;UACAC;QACA;MACA;MACA;IACA;IAEAE;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;MACA;MACAC;MACAA;MACAA;MACAA;MACAA;MACA;QACAA;MACA;MACA7C,uBACA;QACA;QACA;QACA;QAEA;UACA;YACA;cACA;gBACA8C;gBACAC;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YACA;cACA;gBACAD;gBACAC;cACA;cACA;cACA;YACA;UACA;QACA;MACA,aACA;IACA;IAEAC;MACA,yBACAC;QACA9C;QACAC;MACA,GACA;MACA;IACA;IAEA8C;MACAhD,wCACA;QACA;QACA;QACA;UACA;YACAiD;YACAC;UACA;QACA;QACA;QACA,yBACAH;UACA9C;UACAC;QACA,GACA;QACA;QACA;;QAEA;QACA;MACA,aACA;IACA;IAEAiD;MACA;MACA;MACA;QACAC;MACA;MACA5D,4CACA;QACA;UACA;UACA;UACA;YACA6D;cACAJ;cACAC;cACAvC;YACA;UACA;UACA;UACA;QACA;MACA,aACA;IACA;IAEA2C;MACA1D,mBACA;QACA;QACA;UACA;YACA2D;YACAC;YACAC;UACA;UAEA;UAEA;YACA;YACA;cACAF;cACAC;YACA;YACA;YACAE;YACAC;YACAC;UACA;UAEA;YACA;cACAX;cACAY;cACAC;cACAC;cACAC;cACAC;cACAC;YACA;UACA;YACA;cACAjB;cACAY;cACAC;cACAC;cACAC;cACAC;cACAC;YACA;UACA;QACA;UACA;QACA;QACA;QACA;MACA,aACA;IACA;EACA;EAEAC;IAEA;MACA;IACA;IAEA;MAAAC;MAAAC;IAAA;IACA;MACAC;QACA;QACA;UACAtC;QACA;MACA;IACA;IAEA;IACA;MACAA,+DACA;IACA;IAEAjC,mBACA;MACA;IACA,aACA;IAEAJ,uBACA;MACA;MACA;MACA;QACA4D;QACAC;QACAC;MACA;MAEA;MAEA;QACA;QACA;UACAF;UACAC;QACA;QACA;QACAE;QACAC;QACAC;MACA;MAEA;QACA;UACAX;UACAY;UACAC;UACAC;UACAC;UACAC;UACAC;QACA;MACA;QACA;UACAjB;UACAY;UACAC;UACAC;UACAC;UACAC;UACAC;QACA;MACA;MACA;IACA,aACA;IAEArE,oBACA;MACA;MACA;MACA;QACA0D;QACAC;QACAC;MACA;MAEA;MAEA;QACA;QACA;UACAF;UACAC;QACA;QACA;QACAE;QACAC;QACAC;MACA;MAEA;QACAX;QACAY;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEA,wBACA;QACAjB;QACAa;QACAC;QACAG;MACA,GACAK,oBACA;QACAtB;QACAa;QACAC;QACAE;QACAC;MACA,GACA;QACAjB;QACAa;QACAC;QACAE;QACAC;MACA,GACA;QACAjB;QACAa;QACAC;QACAE;QACAC;MACA,GACA;QACAjB;QACAa;QACAC;QACAE;QACAC;MACA,GACA;QACAjB;QACAa;QACAG;QACAF;MACA,EACA;MAEA;IACA,aACA;EACA;EAEAS;IACAC;EACA;EACAC;IACAD;EACA;EAEAE;IACA3D;MACA,IACA4D,yBACAA,gDACA;QACA;QACA;MACA;MACA;IACA;IAEA/D;MACAgE;QACA;MACA;MACAC;IACA;IACA1D;MACA;IACA;IAEAK;MACA;IACA;EACA;EAEAsD;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;AACA","names":["VTextField","VRadioGroup","VRadio","VSlider","VCheckbox","VSwitch","VSelect","Vue","getServicio","getSubServicioSpecificUser","getServicioEspecifico","getServicioEspecificoEspecifico","getDepartamento","getCiudad","getDocumento","newForm","getClientes","getServicioSpecificUser","servicio","subservicio","departamento","ciudad","nombreCandidato","tipodocumento","documento","numeroCandidato","correo","direccion","observaciones","data","valuesServicio","CentroCostos","schemaServicio","valuesUbicacion","schemaUbicacion","componentKey","componentKeyUbicacion","valuesCandidato","schemaCandidato","Images","datosUser","userSearch","userSearchSelected","serviciosDefault","loading","errorRequeridos","mensajesEnvioForm","methods","myEventHandler","document","getobservaciones","userSearchSelectedFunc","recargarFormulario","validarForm","values","returnValue","validarServicios","validarFormularios","uploadFile","enviarFormulario","formData","icon","title","agregarServicios","structuredClone","consultaServicio","id","nombre","buscarSubservicio","idUser","subserviciosDefault","consultaCiudad","value","text","disabled","itemsOptionsTemplate","subTemplate","options","span","component","placeholder","items","style","isRequired","mounted","offsetWidth","offsetHeight","setTimeout","opcionesDocumentos","created","window","destroyed","watch","newValue","handler","deep","components","FullBoxVue","BlitzForm","MiddleBox","searchUserVue","loadingCSS"],"sourceRoot":"src/views","sources":["FormBuilderView.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"\n      $dataUser[0].rol == 'Cliente' ||\n      $dataUser[0].rol == 'Admin' ||\n      $dataUser[0].idRol == 8\n    \"\n  >\n    <FullBoxVue class=\"shadowHover\">\n      <h1>Nueva solicitud</h1>\n      Los campos con un * son obligatorios\n      <br>\n      <v-alert\n        :type=\"data.icon\"\n        v-for=\"(data, index) in mensajesEnvioForm\"\n        :key=\"index\"\n        closable\n      >\n        <span v-html=\"data.title\"></span\n      ></v-alert>\n    </FullBoxVue>\n\n    <FullBoxVue class=\"shadowHover\" v-if=\"$dataUser[0].rol == 'Admin'\">\n      <h2>Seleccionar usuario</h2>\n      <searchUserVue\n        v-bind:people=\"userSearch\"\n        @selected=\"userSearchSelectedFunc\"\n      ></searchUserVue>\n    </FullBoxVue>\n    <MiddleBox class=\"shadowHover\">\n      <v-text-field\n        v-model=\"CentroCostos\"\n        placeholder=\"Centro de costos\"\n      ></v-text-field>\n      <div class=\"formContent\">\n        <div v-for=\"(data, index) in schemaServicio\" :key=\"index\">\n          <p>Servicio: {{ index + 1 }}</p>\n\n          <v-select\n            @change=\"buscarSubservicio(valuesServicio[index].servicio, index)\"\n            v-model=\"valuesServicio[index].servicio\"\n            :items=\"data.servicio\"\n            item-text=\"nombre\"\n            item-value=\"id\"\n            placeholder=\"Servicio*\"\n            class=\"fiftyPercent\"\n          ></v-select>\n          <v-select\n            v-model=\"valuesServicio[index].subservicio\"\n            :items=\"data.subservicio\"\n            item-text=\"nombre\"\n            item-value=\"id\"\n            placeholder=\"SubServicio*\"\n            class=\"fiftyPercent\"\n          ></v-select>\n          <p><b>Observación: </b>{{ getobservaciones(valuesServicio[index].subservicio, data.subservicio) }}</p>\n        </div>\n\n        <v-btn color=\"success\" @click=\"agregarServicios()\"\n          >Agregar servicio</v-btn\n        >\n\n        <br /><br />\n        <BlitzForm\n          :schema=\"schemaUbicacion\"\n          v-model=\"valuesUbicacion\"\n          :key=\"componentKeyUbicacion\"\n          gridGap=\"0\"\n          placeholderPosition=\"left\"\n        />\n      </div>\n    </MiddleBox>\n    <MiddleBox class=\"shadowHover\">\n      <h2>Datos del candidato</h2>\n      <BlitzForm\n        class=\"BlitzForm\"\n        :schema=\"schemaCandidato\"\n        v-model=\"valuesCandidato\"\n        gridGap=\"0\"\n        placeholderPosition=\"left\"\n      />\n      <input type=\"file\" @change=\"uploadFile\" ref=\"file\" />\n      <br /><br />\n    </MiddleBox>\n    <FullBoxVue class=\"shadowHover\">\n      <v-alert\n        v-if=\"errorRequeridos != ''\"\n        title=\"Hay errores en su formulario\"\n        type=\"error\"\n      >\n        <span v-html=\"errorRequeridos\"></span\n      ></v-alert>\n      <div v-if=\"!loading\">\n        <v-btn\n          color=\"primary\"\n          @click=\"enviarFormulario\"\n          :disabled=\"errorRequeridos != ''\"\n        >\n          Enviar Solicitud\n        </v-btn>\n      </div>\n      <div v-else>\n        <loadingCSS>\n          Se están creando las solicitudes... <br />\n          Esto puede tomar unos momentos\n        </loadingCSS>\n      </div>\n    </FullBoxVue>\n  </div>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport Vue from \"vue\";\nimport loadingCSS from \"../components/static/loadingCSS.vue\";\n\nimport {\n  VTextField,\n  VRadioGroup,\n  VRadio,\n  VSlider,\n  VCheckbox,\n  VSwitch,\n  VSelect,\n} from \"vuetify/lib\";\n// All components that are used in the form need to be globally registered.\nVue.component(\"VTextField\", VTextField);\nVue.component(\"VRadioGroup\", VRadioGroup);\nVue.component(\"VRadio\", VRadio);\nVue.component(\"VSlider\", VSlider);\nVue.component(\"VCheckbox\", VCheckbox);\nVue.component(\"VSwitch\", VSwitch);\nVue.component(\"VSelect\", VSelect);\n\nimport {\n  getServicio,\n  getSubServicioSpecificUser,\n  getServicioEspecifico,\n  getServicioEspecificoEspecifico,\n  getDepartamento,\n  getCiudad,\n  getDocumento,\n  newForm,\n  getClientes,\n  getServicioSpecificUser,\n} from \"@/api\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport searchUserVue from \"../components/searchUser.vue\";\n\nconst valuesServiciodef = {\n  servicio: \"\",\n  subservicio: \"\",\n};\n\nconst valuesUbicaciondef = {\n  departamento: \"\",\n  ciudad: \"\",\n};\n\nconst valuesCandidatodef = {\n  nombreCandidato: \"\",\n  tipodocumento: \"\",\n  documento: \"\",\n  numeroCandidato: \"\",\n  correo: \"\",\n  direccion: \"\",\n  observaciones: \"\",\n};\n\nconst defaultResponsive =\n  \" @media (max-width: 600px) { width: 98%; max-width: 98%; margin: 1% }\";\n\nconst thirtyPercent = \"width: 28%;max-width: 28%;margin: 1%;\";\nconst thirtyPercentWFloat =\n  \"width: 28%;max-width: 28%;margin: 1%; float: left;\";\n\nconst fourtyPercent = \"width: 38%;max-width: 38%;margin: 1%;\";\nconst fourtyPercentWFloat =\n  \"width: 38%;max-width: 38%;margin: 1%; float: left;\";\n\nconst fiftyPercent = \"width: 48%;max-width: 48%;margin: 1%;\";\nconst fiftyPercentWFloat = \"width: 48%;max-width: 48%;margin: 1%; float: left;\";\n\nconst sixtyPercent = \"width: 58%;max-width: 58%;margin: 1%;\";\nconst sixtyPercentWFloat = \"width: 58%;max-width: 58%;margin: 1%; float: left;\";\n\nconst seventyPercent = \"width: 68%;max-width: 68%;margin: 1%;\";\nconst seventyPercentWFloat =\n  \"width: 68%;max-width: 68%;margin: 1%; float: left;\";\n\nconst hundredPercent = \"width: 98%;max-width: 98%;margin: 1%;\";\nconst hundredPercentWFloat =\n  \"width: 98%;max-width: 98%;margin: 1%; float: left;\";\n\nexport default {\n  data() {\n    return {\n      valuesServicio: [],\n      CentroCostos: \"\",\n      schemaServicio: [],\n\n      valuesUbicacion: {\n        departamento: \"\",\n        ciudad: \"\",\n      },\n      schemaUbicacion: [],\n      componentKey: 0,\n      componentKeyUbicacion: -1,\n\n      valuesCandidato: {\n        nombreCandidato: \"\",\n        tipodocumento: \"\",\n        documento: \"\",\n        numeroCandidato: \"\",\n        correo: \"\",\n        direccion: \"\",\n        observaciones: \"\",\n      },\n      schemaCandidato: [],\n      Images: null,\n      datosUser: {},\n      userSearch: [],\n      userSearchSelected: [],\n      serviciosDefault: [],\n      loading: false,\n      errorRequeridos: \"\",\n      mensajesEnvioForm: [],\n    };\n  },\n\n  methods: {\n    myEventHandler(e) {\n      if (e.currentTarget.innerWidth <= 600) {\n        let classNames = document.getElementsByClassName(\"blitz-field\");\n        for (let i = 0; i < classNames.length; i++) {\n          document.getElementsByClassName(\"blitz-field\")[i].style = \"\";\n        }\n      }\n    },\n\n    getobservaciones(id, arraySubservicios){\n      for (let i in arraySubservicios) {\n        if (arraySubservicios[i].id == id) {\n          if(arraySubservicios[i].observaciones != \"\"){\n            return arraySubservicios[i].observaciones;\n          }\n          return \"No hay observaciones\";\n        }\n      }\n    },\n\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n    recargarFormulario() {\n      this.componentKey += 1;\n      this.componentKeyUbicacion -= 1;\n    },\n\n    validarForm(schema, values) {\n      let returnValue = true;\n      for (let i = 0; i < schema.length; i++) {\n        let element = schema[i];\n        if (element.isRequired) {\n          if (\n            values[element.id] == \"\" ||\n            values[element.id] === null ||\n            values[element.id].length === 0\n          ) {\n            if (this.errorRequeridos == \"\") {\n              this.errorRequeridos =\n                \" El campo \" + element.placeholder + \" es requerido <br>\";\n            } else {\n              this.errorRequeridos +=\n                \" El campo \" + element.placeholder + \" es requerido <br>\";\n            }\n            returnValue = false;\n          }\n        }\n      }\n      return returnValue;\n    },\n\n    validarServicios() {\n      let values = this.valuesServicio;\n      let returnValue = true;\n      for (let i = 0; i < values.length; i++) {\n        if (\n          values[i].servicio == \"\" ||\n          values[i].servicio === null ||\n          values[i].servicio.length === 0 ||\n          values[i].subservicio == \"\" ||\n          values[i].subservicio === null ||\n          values[i].subservicio.length === 0\n        ) {\n          if (this.errorRequeridos == \"\") {\n            this.errorRequeridos =\n              \" Campos del servicio \" + (i + 1) + \" están incompletos <br>\";\n          } else {\n            this.errorRequeridos +=\n              \" Campos del servicio \" + (i + 1) + \" están incompletos <br>\";\n          }\n          returnValue = false;\n        }\n      }\n      return returnValue;\n    },\n\n    validarFormularios() {\n      this.errorRequeridos = \"\";\n    },\n\n    uploadFile() {\n      this.Images = this.$refs.file.files[0];\n    },\n\n    enviarFormulario() {\n      this.loading = true;\n      const formData = new FormData();\n      formData.append(\"file\", this.Images);\n      formData.append(\"CentroCostos\", this.CentroCostos);\n      formData.append(\"InfoServicio\", JSON.stringify(this.valuesServicio));\n      formData.append(\"Ubicacion\", JSON.stringify(this.valuesUbicacion));\n      formData.append(\"Candidato\", JSON.stringify(this.valuesCandidato));\n      if (this.$dataUser[0].rol == \"Admin\") {\n        formData.append(\"Usuario\", JSON.stringify(this.userSearchSelected));\n      }\n      newForm(formData).then(\n        function (response) {\n          const separarString = (value) => value.split(/\\r\\n|\\r|\\n/, -1);\n          let stringSeparada = separarString(response.data);\n          this.mensajesEnvioForm = []\n\n          for (let msg in stringSeparada) {\n            if (stringSeparada[msg] != \"\") {\n              if (stringSeparada[msg].search(\"Error\") == -1) {\n                this.mensajesEnvioForm.push({\n                  icon: \"success\",\n                  title: stringSeparada[msg],\n                })\n                //this.valuesServicio = valuesServiciodef;\n                //this.valuesUbicacion = valuesUbicaciondef;\n                //this.valuesCandidato = valuesCandidatodef;\n                this.loading = false;\n                this.recargarFormulario();\n                //setTimeout('document.location.reload()',1000);\n              } else {\n                this.mensajesEnvioForm.push({\n                  icon: \"error\",\n                  title: stringSeparada[msg],\n                })\n                this.loading = false;\n                this.recargarFormulario();\n              }\n            }\n          }\n        }.bind(this)\n      );\n    },\n\n    agregarServicios() {\n      this.schemaServicio.push(\n        structuredClone({\n          servicio: this.serviciosDefault,\n          subservicio: [],\n        })\n      );\n      this.valuesServicio.push(structuredClone(valuesServiciodef));\n    },\n\n    consultaServicio(idEmpresa) {\n      getServicioSpecificUser(idEmpresa).then(\n        function (response) {\n          this.preServicios = response.data;\n          this.serviciosDefault = [];\n          for (let i = 0; i < this.preServicios.length; i++) {\n            this.serviciosDefault.push({\n              id: this.preServicios[i].ID_SERVICIO,\n              nombre: this.preServicios[i].NOMBRE_SERVICIO,\n            });\n          }\n          this.schemaServicio = [];\n          this.schemaServicio.push(\n            structuredClone({\n              servicio: this.serviciosDefault,\n              subservicio: [],\n            })\n          );\n          this.valuesServicio = [];\n          this.valuesServicio.push(structuredClone(valuesServiciodef));\n\n          //this.agregarServicios();\n          this.recargarFormulario();\n        }.bind(this)\n      );\n    },\n\n    buscarSubservicio(id, indice) {\n      this.valuesServicio[indice].subservicio = \"\";\n      let idUser = this.userSearchSelected;\n      if (this.$dataUser[0].idRol == 8 || this.$dataUser[0].idRol == 2) {\n        idUser = this.$dataUser[0].id;\n      }\n      getSubServicioSpecificUser(id, idUser).then(\n        function (response) {\n          if (response.data.length > 0) {\n            let preSubServicios = response.data;\n            let subserviciosDefault = [];\n            for (let i = 0; i < preSubServicios.length; i++) {\n              subserviciosDefault.push({\n                id: preSubServicios[i].ID_SUBSERVICIO,\n                nombre: preSubServicios[i].NOMBRE_SUBSERVICIO,\n                observaciones: preSubServicios[i].observaciones\n              });\n            }\n            this.schemaServicio[indice].subservicio = subserviciosDefault;\n            this.recargarFormulario();\n          }\n        }.bind(this)\n      );\n    },\n\n    consultaCiudad(id) {\n      getCiudad(id).then(\n        function (response) {\n          const indice = 1;\n          if (response.data.length > 0) {\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"Seleccione la ciudad\",\n              disabled: true,\n            };\n\n            const options = [itemsOptionsTemplate];\n\n            for (let i = 0; i < response.data.length; i++) {\n              // Solución planteada así por un error de referencia de memoria\n              const itemsOptionsTemplate = {\n                value: \"\",\n                text: \"\",\n              };\n              const subTemplate = itemsOptionsTemplate;\n              itemsOptionsTemplate.value = response.data[i].ID_CIUDAD;\n              subTemplate.text = response.data[i].NOMBRE_CIUDAD;\n              options.push(subTemplate);\n            }\n\n            if (this.schemaUbicacion[indice] == null) {\n              this.schemaUbicacion.splice(indice, 0, {\n                id: \"ciudad\",\n                span: true,\n                component: \"VSelect\",\n                placeholder: \"Ciudad*\",\n                items: options,\n                style: fiftyPercentWFloat,\n                isRequired: true,\n              });\n            } else {\n              this.schemaUbicacion[indice] = {\n                id: \"ciudad\",\n                span: true,\n                component: \"VSelect\",\n                placeholder: \"Ciudad*\",\n                items: options,\n                style: fiftyPercentWFloat,\n                isRequired: true,\n              };\n            }\n          } else {\n            this.schemaUbicacion.splice(indice, 1);\n          }\n          this.recargarFormulario();\n          this.validarFormularios();\n        }.bind(this)\n      );\n    },\n  },\n\n  mounted() {\n\n    if (this.$dataUser[0].idRol == 8 || this.$dataUser[0].idRol == 2) {\n      this.consultaServicio(this.$dataUser[0].id);\n    }\n\n    const { offsetWidth, offsetHeight } = document.querySelector(\"#app\");\n    if (offsetWidth <= 600) {\n      setTimeout(function () {\n        let classNames = document.getElementsByClassName(\"blitz-field\");\n        for (let i = 0; i < classNames.length; i++) {\n          document.getElementsByClassName(\"blitz-field\")[i].style = \"\";\n        }\n      }, 200);\n    }\n\n    let classNames = document.getElementsByClassName(\"blitz-form__form\");\n    for (let i = 0; i < classNames.length; i++) {\n      document.getElementsByClassName(\"blitz-form__form\")[i].style =\n        \"display: block\";\n    }\n\n    getClientes().then(\n      function (response) {\n        this.userSearch = response.data;\n      }.bind(this)\n    );\n\n    getDepartamento().then(\n      function (response) {\n        const indice = 0;\n        const totalForms = 5;\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"Seleccione el departamento\",\n          disabled: true,\n        };\n\n        const options = [itemsOptionsTemplate];\n\n        for (let i = 0; i < response.data.length; i++) {\n          // Solución planteada así por un error de referencia de memoria\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"\",\n          };\n          const subTemplate = itemsOptionsTemplate;\n          itemsOptionsTemplate.value = response.data[i].ID_DEPARTAMENTO;\n          subTemplate.text = response.data[i].NOMBRE_DEPARTAMENTO;\n          options.push(subTemplate);\n        }\n\n        if (this.schemaUbicacion[indice] == null) {\n          this.schemaUbicacion.splice(indice, 0, {\n            id: \"departamento\",\n            span: true,\n            component: \"VSelect\",\n            placeholder: \"Departamento*\",\n            items: options,\n            style: fiftyPercentWFloat,\n            isRequired: true,\n          });\n        } else {\n          this.schemaUbicacion[indice] = {\n            id: \"departamento\",\n            span: true,\n            component: \"VSelect\",\n            placeholder: \"Departamento*\",\n            items: options,\n            style: fiftyPercentWFloat,\n            isRequired: true,\n          };\n        }\n        this.recargarFormulario();\n      }.bind(this)\n    );\n\n    getDocumento().then(\n      function (response) {\n        const indice = 0;\n        const totalForms = 5;\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"Tipo documento\",\n          disabled: true,\n        };\n\n        const options = [itemsOptionsTemplate];\n\n        for (let i = 0; i < response.data.length; i++) {\n          // Solución planteada así por un error de referencia de memoria\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"\",\n          };\n          const subTemplate = itemsOptionsTemplate;\n          itemsOptionsTemplate.value = response.data[i].ID_TIPO_DOCUMENTO;\n          subTemplate.text = response.data[i].DESC_TIPO_DOCUMENTO;\n          options.push(subTemplate);\n        }\n\n        const opcionesDocumentos = {\n          id: \"tipodocumento\",\n          span: true,\n          component: \"VSelect\",\n          placeholder: \"Tipo de documento*\",\n          items: options,\n          style: fourtyPercentWFloat,\n          isRequired: true,\n        };\n\n        this.schemaCandidato = [\n          {\n            id: \"nombreCandidato\",\n            component: \"VTextField\",\n            placeholder: \"Nombre del candidato*\",\n            isRequired: true,\n          },\n          opcionesDocumentos,\n          {\n            id: \"documento\",\n            component: \"VTextField\",\n            placeholder: \"Número de documento*\",\n            style: sixtyPercent,\n            isRequired: true,\n          },\n          {\n            id: \"numeroCandidato\",\n            component: \"VTextField\",\n            placeholder: \"Número telefónico*\",\n            style: fiftyPercentWFloat,\n            isRequired: true,\n          },\n          {\n            id: \"correo\",\n            component: \"VTextField\",\n            placeholder: \"Correo*\",\n            style: fiftyPercentWFloat,\n            isRequired: true,\n          },\n          {\n            id: \"direccion\",\n            component: \"VTextField\",\n            placeholder: \"Dirección*\",\n            style: hundredPercentWFloat,\n            isRequired: true,\n          },\n          {\n            id: \"observaciones\",\n            component: \"VTextField\",\n            style: hundredPercentWFloat,\n            placeholder: \"Observaciones\",\n          },\n        ];\n\n        this.recargarFormulario();\n      }.bind(this)\n    );\n  },\n\n  created() {\n    window.addEventListener(\"resize\", this.myEventHandler);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.myEventHandler);\n  },\n\n  watch: {\n    valuesUbicacion(newValue, oldValue) {\n      if (\n        newValue.departamento &&\n        newValue.departamento != oldValue.departamento\n      ) {\n        this.valuesUbicacion.ciudad = \"\";\n        this.consultaCiudad(newValue.departamento);\n      }\n      this.validarFormularios();\n    },\n\n    valuesServicio: {\n      handler(val) {\n        this.validarFormularios();\n      },\n      deep: true,\n    },\n    valuesCandidato(newValue, oldValue) {\n      this.validarFormularios();\n    },\n\n    userSearchSelected(newValue, oldValue) {\n      this.consultaServicio(newValue);\n    },\n  },\n\n  components: {\n    FullBoxVue,\n    BlitzForm,\n    MiddleBox,\n    searchUserVue,\n    loadingCSS,\n  },\n};\n</script>\n\n<style scoped>\ndiv {\n  width: 100%;\n}\n\nVTextField {\n  border: 2px solid #8c939d !important;\n}\n\nVSelect {\n  border: 2px solid #8c939d !important;\n  border-radius: 10px;\n  padding: 2px;\n}\n\n.fiftyPercent {\n  width: 48%;\n  max-width: 48%;\n  margin: 1%;\n  float: left;\n}\n\n.blitz-form__form {\n  display: block !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}