{"ast":null,"code":"import FullBoxVue from \"../components/static/FullBox.vue\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\nimport { generarCertificadosSolicitudesFuncionario, generarCertificadosSolicitudesFuncionarioXLS, getClientes, getEstadosPeticiones } from \"@/api\";\nexport default {\n  data() {\n    return {\n      valid: true,\n      itemsSelected: 0,\n      userSearch: [],\n      userSearchSelected: \"\",\n      buscarTodosUsuarios: true,\n      buscarTodasFechas: true,\n      buscarTodasSolicitud: true,\n      rangoFechas: [],\n      estadoSolicitud: null,\n      estados: null\n    };\n  },\n  methods: {\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n    descargarCertificadoPDF() {\n      let body = {\n        archivo: \"pdf\",\n        buscarTodosUsuarios: this.buscarTodosUsuarios,\n        buscarTodasFechas: this.buscarTodasFechas,\n        buscarTodasSolicitud: this.buscarTodasSolicitud,\n        userSearchSelected: this.userSearchSelected,\n        rangoFechas: this.rangoFechas,\n        estadoSolicitud: this.estadoSolicitud\n      };\n      console.log(body);\n      generarCertificadosSolicitudesFuncionario(body).then(response => {\n        console.log(response.data);\n        const linkSource = `data:application/pdf;base64,${response.data}`;\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = linkSource;\n        downloadLink.download = \"test.pdf\";\n        downloadLink.click();\n      });\n    },\n    descargarCertificadoXLS() {\n      generarCertificadosSolicitudesFuncionarioXLS().then(response => {\n        console.log(response.data);\n        var BOM = new Uint8Array([0xef, 0xbb, 0xbf]);\n        const url = window.URL.createObjectURL(new Blob([BOM, response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"file.xls\");\n        document.body.appendChild(link);\n        link.click();\n      });\n    },\n    realizarConsultaEstados() {\n      getEstadosPeticiones().then(function (response) {\n        this.estados = response.data;\n      }.bind(this));\n    }\n  },\n  mounted() {\n    getClientes().then(function (response) {\n      this.userSearch = response.data;\n    }.bind(this));\n    this.realizarConsultaEstados();\n  },\n  components: {\n    FullBoxVue,\n    MiddleBox,\n    searchUserMultipleVue\n  }\n};","map":{"version":3,"mappings":"AAwDA;AACA;AACA;AAEA,SACAA,2CACAC,8CACAC,aACAC,4BACA;AAEA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;IACA;IAEAC;MACA;QACAC;QACAT;QACAC;QACAC;QACAH;QACAI;QACAC;MACA;MAEAM;MACAnB;QACAmB;QACA;QACA;QACAC;QACAA;QACAA;MACA;IACA;IAEAC;MACApB;QACAkB;QACA;QACA;QACA;QACAG;QACAA;QACAC;QACAD;MACA;IACA;IAEAE;MACArB,4BACA;QACA;MACA,aACA;IACA;EACA;EAEAsB;IACAvB,mBACA;MACA;IACA,aACA;IACA;EACA;EAEAwB;IACAC;IACAC;IACAC;EACA;AACA","names":["generarCertificadosSolicitudesFuncionario","generarCertificadosSolicitudesFuncionarioXLS","getClientes","getEstadosPeticiones","data","valid","itemsSelected","userSearch","userSearchSelected","buscarTodosUsuarios","buscarTodasFechas","buscarTodasSolicitud","rangoFechas","estadoSolicitud","estados","methods","userSearchSelectedFunc","descargarCertificadoPDF","archivo","console","downloadLink","descargarCertificadoXLS","link","document","realizarConsultaEstados","mounted","components","FullBoxVue","MiddleBox","searchUserMultipleVue"],"sourceRoot":"src/views","sources":["CertificadosSolicitudesFuncionarioView.vue"],"sourcesContent":["<template>\n  <div>\n    <FullBoxVue class=\"shadowHover\">\n      <h1>Descargar certificados</h1>\n    </FullBoxVue>\n    <MiddleBox class=\"shadowHover\">\n      <h3>Parámetros de descarga</h3>\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        Solicitudes de usuarios\n        {{ userSearchSelected }}\n        {{ rangoFechas }}\n        {{ estadoSolicitud }}\n        <v-checkbox\n          v-model=\"buscarTodosUsuarios\"\n          :label=\"`Obtener información de todos los usuarios disponibles`\"\n        ></v-checkbox>\n        <searchUserMultipleVue\n          v-if=\"!buscarTodosUsuarios\"\n          v-bind:people=\"userSearch\"\n          @selected=\"userSearchSelectedFunc\"\n        ></searchUserMultipleVue>\n        <v-checkbox\n          v-model=\"buscarTodasFechas\"\n          :label=\"`Buscar por todas las fechas`\"\n        ></v-checkbox>\n        <div v-if=\"!buscarTodasFechas\">\n          <v-date-picker v-model=\"rangoFechas\" range></v-date-picker>\n        </div>\n\n        <v-checkbox\n          v-model=\"buscarTodasSolicitud\"\n          :label=\"`Buscar por todos los estados de solicitudes`\"\n        ></v-checkbox>\n        <v-select\n          v-if=\"!buscarTodasSolicitud\"\n          v-model=\"estadoSolicitud\"\n          :items=\"estados\"\n          item-text=\"nombre\"\n          item-value=\"id\"\n          label=\"Estado\"\n        ></v-select>\n      </v-form>\n    </MiddleBox>\n    <MiddleBox class=\"shadowHover\">\n      <v-btn color=\"success\" @click=\"descargarCertificadoPDF()\"\n        >Descargar certificado PDF</v-btn\n      >\n      <br /><br />\n      <v-btn color=\"success\" @click=\"descargarCertificadoXLS()\"\n        >Descargar certificado XLS (Excel)</v-btn\n      >\n    </MiddleBox>\n  </div>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\n\nimport {\n  generarCertificadosSolicitudesFuncionario,\n  generarCertificadosSolicitudesFuncionarioXLS,\n  getClientes,\n  getEstadosPeticiones\n} from \"@/api\";\n\nexport default {\n  data() {\n    return {\n      valid: true,\n      itemsSelected: 0,\n      userSearch: [],\n      userSearchSelected: \"\",\n      buscarTodosUsuarios: true,\n      buscarTodasFechas: true,\n      buscarTodasSolicitud: true,\n      rangoFechas: [],\n      estadoSolicitud: null,\n      estados: null,\n    };\n  },\n\n  methods: {\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n\n    descargarCertificadoPDF() {\n      let body = {\n        archivo: \"pdf\",\n        buscarTodosUsuarios: this.buscarTodosUsuarios,\n        buscarTodasFechas: this.buscarTodasFechas,\n        buscarTodasSolicitud: this.buscarTodasSolicitud,\n        userSearchSelected: this.userSearchSelected,\n        rangoFechas: this.rangoFechas,\n        estadoSolicitud: this.estadoSolicitud\n      }\n\n      console.log(body)\n      generarCertificadosSolicitudesFuncionario(body).then((response) => {\n        console.log(response.data);\n        const linkSource = `data:application/pdf;base64,${response.data}`;\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = linkSource;\n        downloadLink.download = \"test.pdf\";\n        downloadLink.click();\n      });\n    },\n\n    descargarCertificadoXLS() {\n      generarCertificadosSolicitudesFuncionarioXLS().then((response) => {\n        console.log(response.data);\n        var BOM = new Uint8Array([0xef, 0xbb, 0xbf]);\n        const url = window.URL.createObjectURL(new Blob([BOM, response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"file.xls\");\n        document.body.appendChild(link);\n        link.click();\n      });\n    },\n\n    realizarConsultaEstados() {\n      getEstadosPeticiones().then(\n        function (response) {\n          this.estados = response.data;\n        }.bind(this)\n      );\n    },\n  },\n\n  mounted() {\n    getClientes().then(\n      function (response) {\n        this.userSearch = response.data;\n      }.bind(this)\n    );\n    this.realizarConsultaEstados()\n  },\n\n  components: {\n    FullBoxVue,\n    MiddleBox,\n    searchUserMultipleVue,\n  },\n};\n</script>\n\n<style scoped>\ndiv {\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}