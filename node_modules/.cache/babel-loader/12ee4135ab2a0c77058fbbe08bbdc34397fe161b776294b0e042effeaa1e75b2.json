{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\nimport Vue from \"vue\";\nimport { VTextField, VRadioGroup, VRadio, VSlider, VCheckbox, VSwitch, VSelect } from \"vuetify/lib\";\n// All components that are used in the form need to be globally registered.\nVue.component(\"VTextField\", VTextField);\nVue.component(\"VRadioGroup\", VRadioGroup);\nVue.component(\"VRadio\", VRadio);\nVue.component(\"VSlider\", VSlider);\nVue.component(\"VCheckbox\", VCheckbox);\nVue.component(\"VSwitch\", VSwitch);\nVue.component(\"VSelect\", VSelect);\nimport { getDocumento, postUser, getRoles, getServicio, getClientes } from \"@/api\";\nconst valuesRegisterdef = {\n  nombre: \"\",\n  tipoDocumento: \"\",\n  contacto: \"\",\n  correo: \"\",\n  documento: \"\",\n  rol: \"\",\n  serviciosAsociados: \"\",\n  fechaCorte: \"\"\n};\nexport default {\n  data() {\n    return {\n      valuesRegister: {\n        nombre: \"\",\n        tipoDocumento: \"\",\n        contacto: \"\",\n        correo: \"\",\n        documento: \"\",\n        rol: \"\",\n        serviciosAsociados: \"\",\n        fechaCorte: \"\",\n        userSearchSelected: []\n      },\n      menu: false,\n      serviciosDefault: [],\n      schemaRegister: [{\n        id: \"nombre\",\n        component: \"VTextField\",\n        label: \"Nombre\"\n      },\n      //Id Tipo Documento\n      {}, {\n        id: \"documento\",\n        component: \"VTextField\",\n        label: \"Documento\"\n      }, {\n        id: \"contacto\",\n        component: \"VTextField\",\n        label: \"Teléfono\"\n      }, {\n        id: \"correo\",\n        component: \"VTextField\",\n        label: \"Correo\"\n      },\n      //Info contacto\n      {},\n      //Tipo de rol\n      {}],\n      componentKey: 0,\n      userSearch: []\n    };\n  },\n  methods: {\n    userSearchSelectedFunc(values) {\n      this.valuesRegister.userSearchSelected = values;\n    },\n    recargarFormulario() {\n      this.componentKey += 1;\n    },\n    enviarFormulario() {\n      postUser(this.valuesRegister).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        if (response.data == \"\") {\n          Toast.fire({\n            icon: \"success\",\n            title: \"Usuario registrado exitosamente\"\n          });\n          this.valuesRegister = valuesRegisterdef;\n          this.recargarFormulario();\n        } else {\n          Toast.fire({\n            icon: \"error\",\n            title: \"Error al registrar el usuario, correo no válido y/o ya usado.\"\n          });\n        }\n      }.bind(this)).catch(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"error\",\n          title: \"Error al registrar el usuario, correo no válido y/o ya usado.\"\n        });\n      });\n    },\n    consultaServicio() {\n      getServicio().then(function (response) {\n        this.preServicios = response.data;\n        this.serviciosDefault = [];\n        for (let i = 0; i < this.preServicios.length; i++) {\n          this.serviciosDefault.push({\n            id: this.preServicios[i].ID_SERVICIO,\n            nombre: this.preServicios[i].NOMBRE_SERVICIO\n          });\n        }\n      }.bind(this));\n    }\n  },\n  mounted() {\n    getClientes().then(function (response) {\n      this.userSearch = response.data;\n    }.bind(this));\n    getDocumento().then(function (response) {\n      const indice = 1;\n      const itemsOptionsTemplate = {\n        value: \"\",\n        text: \"Seleccionar tipo de documento\",\n        disabled: true\n      };\n      const options = [itemsOptionsTemplate];\n      for (let i = 0; i < response.data.length; i++) {\n        // Solución planteada así por un error de referencia de memoria\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"\"\n        };\n        const subTemplate = itemsOptionsTemplate;\n        itemsOptionsTemplate.value = response.data[i].ID_TIPO_DOCUMENTO;\n        subTemplate.text = response.data[i].DESC_TIPO_DOCUMENTO;\n        options.push(subTemplate);\n      }\n      this.schemaRegister[indice] = {\n        id: \"tipoDocumento\",\n        span: true,\n        component: \"VSelect\",\n        label: \"Tipo de documento\",\n        items: options\n      };\n      this.recargarFormulario();\n    }.bind(this)), getRoles().then(function (response) {\n      const indice = 7;\n      const itemsOptionsTemplate = {\n        value: \"\",\n        text: \"Seleccione un rol\",\n        disabled: true\n      };\n      const options = [itemsOptionsTemplate];\n      for (let i = 0; i < response.data.length; i++) {\n        // Solución planteada así por un error de referencia de memoria\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"\"\n        };\n        const subTemplate = itemsOptionsTemplate;\n        itemsOptionsTemplate.value = response.data[i].id;\n        subTemplate.text = response.data[i].nombre;\n        options.push(subTemplate);\n      }\n      this.schemaRegister[indice] = {\n        id: \"rol\",\n        span: true,\n        component: \"VSelect\",\n        label: \"Rol\",\n        items: options\n      };\n      this.recargarFormulario();\n    }.bind(this));\n    this.consultaServicio();\n  },\n  watch: {\n    valuesRegister(newValue, oldValue) {\n      this.valuesRegister.fechaCorte = oldValue.fechaCorte;\n      this.valuesRegister.serviciosAsociados = oldValue.serviciosAsociados;\n      this.valuesRegister.userSearchSelected = oldValue.userSearchSelected;\n    }\n  },\n  components: {\n    FullBoxVue,\n    BlitzForm,\n    searchUserMultipleVue\n  }\n};","map":{"version":3,"mappings":";AAqEA;AACA;AACA;AACA;AAEA,SACAA,YACAC,aACAC,QACAC,SACAC,WACAC,SACAC,eACA;AACA;AACAC;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AAEA;AAEA;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;AACA;AACA;EACAC;IACA;MACAC;QACAT;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAG;MACA;MACAC;MACAC;MACAC,iBACA;QACAC;QACAC;QACAC;MACA;MACA;MACA,IACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA;MACA;MACA,CACA;MACA;MACA,GACA;MACAC;MACAC;IAEA;EACA;EAEAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACAC,8BACAC,KACA;QACA;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACA;UACAM;YACAC;YACAC;UACA;UACA;UACA;QACA;UACAF;YACAC;YACAC,OACA;UACA;QACA;MACA,aACA,CACAC;QACA;UACAT;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC,OACA;QACA;MACA;IACA;IAEAE;MACAC,mBACA;QACA;QACA;QACA;UACA;YACAtB;YACAd;UACA;QACA;MACA,aACA;IACA;EACA;EAEAqC;IACAC,mBACA;MACA;IACA,aACA;IAEAC,oBACA;MACA;MACA;QACAC;QACAC;QACAC;MACA;MAEA;MAEA;QACA;QACA;UACAF;UACAC;QACA;QACA;QACAE;QACAC;QACAC;MACA;MAEA;QACA/B;QACAgC;QACA/B;QACAC;QACA+B;MACA;MAEA;IACA,aACA,EACAC,gBACA;MACA;MACA;QACAR;QACAC;QACAC;MACA;MAEA;MAEA;QACA;QACA;UACAF;UACAC;QACA;QACA;QACAE;QACAC;QACAC;MACA;MAEA;QACA/B;QACAgC;QACA/B;QACAC;QACA+B;MACA;MAEA;IACA,aACA;IACA;EACA;EAEAE;IACAxC;MACA;MACA;MACA;IAEA;EACA;EAEAyC;IACAC;IACAC;IACAC;EACA;AACA","names":["VTextField","VRadioGroup","VRadio","VSlider","VCheckbox","VSwitch","VSelect","Vue","nombre","tipoDocumento","contacto","correo","documento","rol","serviciosAsociados","fechaCorte","data","valuesRegister","userSearchSelected","menu","serviciosDefault","schemaRegister","id","component","label","componentKey","userSearch","methods","userSearchSelectedFunc","recargarFormulario","enviarFormulario","postUser","then","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","Toast","icon","title","catch","consultaServicio","getServicio","mounted","getClientes","getDocumento","value","text","disabled","itemsOptionsTemplate","subTemplate","options","span","items","getRoles","watch","components","FullBoxVue","BlitzForm","searchUserMultipleVue"],"sourceRoot":"src/views","sources":["RegisterUserView.vue"],"sourcesContent":["<template>\n  <FullBoxVue class=\"shadowHover\">\n    <div class=\"formContent\">\n      <h1>Registrar Usuario</h1>\n      <br />\n      <hr />\n      <br /><br />\n      <BlitzForm\n        :schema=\"schemaRegister\"\n        v-model=\"valuesRegister\"\n        :key=\"componentKey\"\n        gridGap=\"0\"\n        labelPosition=\"left\"\n      />\n      <v-select\n        v-if=\"valuesRegister.rol == '7' || valuesRegister.rol == '5' || valuesRegister.rol == '6'\"\n        v-model=\"valuesRegister.serviciosAsociados\"\n        :items=\"serviciosDefault\"\n        item-text=\"nombre\"\n        item-value=\"id\"\n        label=\"Servicios disponibles\"\n        multiple\n      ></v-select>\n\n      <searchUserMultipleVue\n      v-if=\"valuesRegister.rol == '8'\"\n        v-bind:people=\"userSearch\"\n        @selected=\"userSearchSelectedFunc\"\n      ></searchUserMultipleVue>\n\n      <v-menu\n        ref=\"menu\"\n        v-model=\"menu\"\n        :close-on-content-click=\"false\"\n        :return-value.sync=\"valuesRegister.fechaCorte\"\n        transition=\"scale-transition\"\n        offset-y\n        min-width=\"auto\"\n      >\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-combobox\n            v-model=\"valuesRegister.fechaCorte\"\n            chips\n            small-chips\n            label=\"Fecha de corte\"\n            prepend-icon=\"mdi-calendar\"\n            readonly\n            v-bind=\"attrs\"\n            v-on=\"on\"\n          ></v-combobox>\n        </template>\n        <v-date-picker v-model=\"valuesRegister.fechaCorte\" no-title scrollable>\n          <v-spacer></v-spacer>\n          <v-btn text color=\"primary\" @click=\"menu = false\"> Cancelar </v-btn>\n          <v-btn\n            text\n            color=\"primary\"\n            @click=\"$refs.menu.save(valuesRegister.fechaCorte)\"\n          >\n            OK\n          </v-btn>\n        </v-date-picker>\n      </v-menu>\n      <v-btn color=\"primary\" dark @click=\"enviarFormulario\"> Enviar </v-btn>\n    </div>\n  </FullBoxVue>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\nimport Vue from \"vue\";\n\nimport {\n  VTextField,\n  VRadioGroup,\n  VRadio,\n  VSlider,\n  VCheckbox,\n  VSwitch,\n  VSelect,\n} from \"vuetify/lib\";\n// All components that are used in the form need to be globally registered.\nVue.component(\"VTextField\", VTextField);\nVue.component(\"VRadioGroup\", VRadioGroup);\nVue.component(\"VRadio\", VRadio);\nVue.component(\"VSlider\", VSlider);\nVue.component(\"VCheckbox\", VCheckbox);\nVue.component(\"VSwitch\", VSwitch);\nVue.component(\"VSelect\", VSelect);\n\nimport { getDocumento, postUser, getRoles, getServicio, getClientes } from \"@/api\";\n\nconst valuesRegisterdef = {\n  nombre: \"\",\n  tipoDocumento: \"\",\n  contacto: \"\",\n  correo: \"\",\n  documento: \"\",\n  rol: \"\",\n  serviciosAsociados: \"\",\n  fechaCorte: \"\",\n};\nexport default {\n  data() {\n    return {\n      valuesRegister: {\n        nombre: \"\",\n        tipoDocumento: \"\",\n        contacto: \"\",\n        correo: \"\",\n        documento: \"\",\n        rol: \"\",\n        serviciosAsociados: \"\",\n        fechaCorte: \"\",\n        userSearchSelected: [],\n      },\n      menu: false,\n      serviciosDefault: [],\n      schemaRegister: [\n        {\n          id: \"nombre\",\n          component: \"VTextField\",\n          label: \"Nombre\",\n        },\n        //Id Tipo Documento\n        {},\n        {\n          id: \"documento\",\n          component: \"VTextField\",\n          label: \"Documento\",\n        },\n        {\n          id: \"contacto\",\n          component: \"VTextField\",\n          label: \"Teléfono\",\n        },\n        {\n          id: \"correo\",\n          component: \"VTextField\",\n          label: \"Correo\",\n        },\n        //Info contacto\n        {\n        },\n        //Tipo de rol\n        {},\n      ],\n      componentKey: 0,\n      userSearch: [],\n\n    };\n  },\n\n  methods: {\n    userSearchSelectedFunc(values) {\n      this.valuesRegister.userSearchSelected = values;\n    },\n    recargarFormulario() {\n      this.componentKey += 1;\n    },\n    enviarFormulario() {\n      postUser(this.valuesRegister)\n        .then(\n          function (response) {\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              },\n            });\n            if (response.data == \"\") {\n              Toast.fire({\n                icon: \"success\",\n                title: \"Usuario registrado exitosamente\",\n              });\n              this.valuesRegister = valuesRegisterdef;\n              this.recargarFormulario();\n            } else {\n              Toast.fire({\n                icon: \"error\",\n                title:\n                  \"Error al registrar el usuario, correo no válido y/o ya usado.\",\n              });\n            }\n          }.bind(this)\n        )\n        .catch(function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"error\",\n            title:\n              \"Error al registrar el usuario, correo no válido y/o ya usado.\",\n          });\n        });\n    },\n\n    consultaServicio() {\n      getServicio().then(\n        function (response) {\n          this.preServicios = response.data;\n          this.serviciosDefault = [];\n          for (let i = 0; i < this.preServicios.length; i++) {\n            this.serviciosDefault.push({\n              id: this.preServicios[i].ID_SERVICIO,\n              nombre: this.preServicios[i].NOMBRE_SERVICIO,\n            });\n          }\n        }.bind(this)\n      );\n    },\n  },\n\n  mounted() {\n    getClientes().then(\n      function (response) {\n        this.userSearch = response.data;\n      }.bind(this)\n    );\n\n    getDocumento().then(\n      function (response) {\n        const indice = 1;\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"Seleccionar tipo de documento\",\n          disabled: true,\n        };\n\n        const options = [itemsOptionsTemplate];\n\n        for (let i = 0; i < response.data.length; i++) {\n          // Solución planteada así por un error de referencia de memoria\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"\",\n          };\n          const subTemplate = itemsOptionsTemplate;\n          itemsOptionsTemplate.value = response.data[i].ID_TIPO_DOCUMENTO;\n          subTemplate.text = response.data[i].DESC_TIPO_DOCUMENTO;\n          options.push(subTemplate);\n        }\n\n        this.schemaRegister[indice] = {\n          id: \"tipoDocumento\",\n          span: true,\n          component: \"VSelect\",\n          label: \"Tipo de documento\",\n          items: options,\n        };\n\n        this.recargarFormulario();\n      }.bind(this)\n    ),\n      getRoles().then(\n        function (response) {\n          const indice = 7;\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"Seleccione un rol\",\n            disabled: true,\n          };\n\n          const options = [itemsOptionsTemplate];\n\n          for (let i = 0; i < response.data.length; i++) {\n            // Solución planteada así por un error de referencia de memoria\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"\",\n            };\n            const subTemplate = itemsOptionsTemplate;\n            itemsOptionsTemplate.value = response.data[i].id;\n            subTemplate.text = response.data[i].nombre;\n            options.push(subTemplate);\n          }\n\n          this.schemaRegister[indice] = {\n            id: \"rol\",\n            span: true,\n            component: \"VSelect\",\n            label: \"Rol\",\n            items: options,\n          };\n\n          this.recargarFormulario();\n        }.bind(this)\n      );\n    this.consultaServicio();\n  },\n\n  watch: {\n    valuesRegister(newValue, oldValue) {\n      this.valuesRegister.fechaCorte = oldValue.fechaCorte;\n      this.valuesRegister.serviciosAsociados = oldValue.serviciosAsociados;\n      this.valuesRegister.userSearchSelected = oldValue.userSearchSelected;\n\n    },\n  },\n\n  components: {\n    FullBoxVue,\n    BlitzForm,\n    searchUserMultipleVue\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}