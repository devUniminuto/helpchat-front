{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\nimport { getPeticion, getCandidatos, downloadFile, getArchivos, subirArchivos, eliminarArchivos, getFunProv, updateEncargadoSolicitud, getEstadosPeticiones, updateEstadoSolicitud, updateObservacionesAnalistaProveedor, getObservacionesAnalista, eliminarObservacion, updateCostoAdicional, eliminarCostoAdicional, getCostosAdicionales } from \"@/api\";\nexport default {\n  data() {\n    return {\n      infoSolicitud: {},\n      infoSolicitudCandidatos: {},\n      componentKey: 1,\n      estadoSolicitud: null,\n      estados: null,\n      idSolicitud: this.$route.params.id,\n      archivosSubidos: [],\n      Images: null,\n      valido: false,\n      userSearchSelected: [],\n      userSearch: [],\n      observacionesAnalistaProveedor: \"\",\n      queryResultObservacionesAnalistaProveedor: [],\n      queryCostosAdicionalesVal: [],\n      costoAdicionalDescripcion: \"\",\n      costoAdicionalValor: \"\"\n    };\n  },\n  components: {\n    FullBoxVue,\n    MiddleBox,\n    searchUserMultipleVue\n  },\n  methods: {\n    actualizarEncargado() {\n      let bodySol = {\n        idEncargado: this.userSearchSelected,\n        idSolicitud: this.idSolicitud\n      };\n      updateEncargadoSolicitud(bodySol).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"success\",\n          title: \"Solicitud enviada exitosamente\"\n        });\n      }.bind(this));\n    },\n    queryObservacionesAnalistaProveedor() {\n      getObservacionesAnalista(this.idSolicitud).then(function (response) {\n        this.queryResultObservacionesAnalistaProveedor = response.data;\n      }.bind(this));\n    },\n    queryCostosAdicionales() {\n      getCostosAdicionales(this.idSolicitud).then(function (response) {\n        this.queryCostosAdicionalesVal = response.data;\n      }.bind(this));\n    },\n    eliminarObservacion(id) {\n      eliminarObservacion(id).then(function (response) {\n        this.queryObservacionesAnalistaProveedor();\n      }.bind(this));\n    },\n    eliminarCostoAdicional(id) {\n      eliminarCostoAdicional(id).then(function (response) {\n        this.queryCostosAdicionales();\n      }.bind(this));\n    },\n    actualizarCostoAdicional() {\n      let bodySol = {\n        costoAdicionalDescripcion: this.costoAdicionalDescripcion,\n        costoAdicionalValor: this.costoAdicionalValor,\n        idSolicitud: this.idSolicitud\n      };\n      updateCostoAdicional(bodySol).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"success\",\n          title: \"Solicitud enviada exitosamente\"\n        });\n        this.costoAdicionalValor = \"\";\n        this.costoAdicionalDescripcion = \"\";\n        this.queryCostosAdicionales();\n      }.bind(this));\n    },\n    actualizarObservacionesAnalistaProveedor() {\n      let bodySol = {\n        observacionesAnalistaProveedor: this.observacionesAnalistaProveedor,\n        idSolicitud: this.idSolicitud\n      };\n      updateObservacionesAnalistaProveedor(bodySol).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"success\",\n          title: \"Solicitud enviada exitosamente\"\n        });\n        this.observacionesAnalistaProveedor = \"\";\n        this.queryObservacionesAnalistaProveedor();\n      }.bind(this));\n    },\n    actualizarEstadoSolicitud() {\n      let bodySol = {\n        idEstado: this.estadoSolicitud,\n        idSolicitud: this.idSolicitud\n      };\n      updateEstadoSolicitud(bodySol).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"success\",\n          title: \"Solicitud enviada exitosamente\"\n        });\n      }.bind(this));\n    },\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n    uploadFile() {\n      this.Images = this.$refs.file.files[0];\n    },\n    eliminarArchivo(id) {\n      eliminarArchivos(id).then(function (response) {\n        this.realizarConsultaArchivos();\n      }.bind(this));\n    },\n    realizarConsulta() {\n      getPeticion(this.idSolicitud).then(function (response) {\n        this.infoSolicitud = response.data;\n        this.observacionesAnalistaProveedor = response.data.observaciones;\n        this.estadoSolicitud = this.infoSolicitud.idEstado;\n        this.componentKey += 1;\n        getFunProv(this.infoSolicitud.ID_SERVICIO).then(function (response) {\n          let userSearch = [];\n          for (let user in response.data) {\n            userSearch.push({\n              id: response.data[user].id,\n              nombre: response.data[user].nombre + \" - \" + response.data[user].solicitudesAsignadas + \" solicitudes asignadas\"\n            });\n          }\n          this.userSearch = userSearch;\n        }.bind(this));\n      }.bind(this));\n    },\n    realizarConsultaEstados() {\n      getEstadosPeticiones().then(function (response) {\n        this.estados = response.data;\n      }.bind(this));\n    },\n    realizarConsultaCandidatos() {\n      getCandidatos(this.idSolicitud).then(function (response) {\n        this.infoSolicitudCandidatos = response.data;\n        this.componentKey += 1;\n      }.bind(this));\n    },\n    realizarConsultaArchivos() {\n      getArchivos(this.idSolicitud).then(function (response) {\n        this.archivosSubidos = response.data;\n      }.bind(this));\n    },\n    subirArchivo() {\n      const formData = new FormData();\n      formData.append(\"file\", this.Images);\n      formData.append(\"idSolicitud\", this.idSolicitud);\n      subirArchivos(formData).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"success\",\n          title: \"Solicitud enviada exitosamente\"\n        });\n        this.realizarConsultaArchivos();\n      }.bind(this));\n    },\n    descargarArchivos(filepath, fileName) {\n      downloadFile(filepath).then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", fileName);\n        document.body.appendChild(link);\n        link.click();\n      });\n    }\n  },\n  mounted() {\n    this.realizarConsulta();\n    this.queryObservacionesAnalistaProveedor();\n    this.queryCostosAdicionales();\n  },\n  watch: {\n    infoSolicitud(newState) {\n      if (newState != {}) {\n        this.valido = true;\n        this.realizarConsultaCandidatos();\n        this.realizarConsultaArchivos();\n        this.realizarConsultaEstados();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA8VA;AACA;AACA;AAEA,SACAA,aACAC,eACAC,cACAC,aACAC,eACAC,kBACAC,YACAC,0BACAC,sBACAC,uBACAC,sCACAC,0BACAC,qBACAC,sBACAC,wBACAC,4BACA;AAEA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;IACAC;IACAC;EACA;EAEAC;IACAC;MACA;QACAC;QACAjB;MACA;MACAf,uCACA;QACA;UACAiC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC;QACA;MACA,aACA;IACA;IAEAC;MACAtC,gDACA;QACA;MACA,aACA;IACA;IAEAuC;MACAnC,4CACA;QACA;MACA,aACA;IACA;IAEAH;MACAA,6BACA;QACA;MACA,aACA;IACA;IAEAE;MACAA,gCACA;QACA;MACA,aACA;IACA;IAEAqC;MACA;QACApB;QACAC;QACAV;MACA;MAEAT,mCACA;QACA;UACA2B;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC;QACA;QACA;QACA;QACA;MACA,aACA;IACA;IAEAI;MACA;QACAxB;QACAN;MACA;MACAZ,mDACA;QACA;UACA8B;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC;QACA;QACA;QACA;MACA,aACA;IACA;IAEAK;MACA;QACAC;QACAhC;MACA;MACAb,oCACA;QACA;UACA+B;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC;QACA;MACA,aACA;IACA;IAEAO;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACApD,0BACA;QACA;MACA,aACA;IACA;IAEAqD;MACA1D,mCACA;QACA;QACA;QACA;QACA;QACAM,gDACA;UACA;UACA;YACAqB;cACAgC;cACAC,QACAC,6BACA,QACAA,2CACA;YACA;UACA;UACA;QACA,aACA;MACA,aACA;IACA;IAEAC;MACAtD,4BACA;QACA;MACA,aACA;IACA;IAEAuD;MACA9D,qCACA;QACA;QACA;MACA,aACA;IACA;IAEA+D;MACA7D,mCACA;QACA;MACA,aACA;IACA;IAEA8D;MACA;MACAC;MACAA;MAEA9D,6BACA;QACA;UACAoC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC;QACA;QACA;MACA,aACA;IACA;IAEAmB;MACAjE;QACA;QACA;QACAkE;QACAA;QACAC;QACAD;MACA;IACA;EACA;EAEAE;IACA;IAEA;IACA;EACA;EAEAC;IACAtD;MACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["getPeticion","getCandidatos","downloadFile","getArchivos","subirArchivos","eliminarArchivos","getFunProv","updateEncargadoSolicitud","getEstadosPeticiones","updateEstadoSolicitud","updateObservacionesAnalistaProveedor","getObservacionesAnalista","eliminarObservacion","updateCostoAdicional","eliminarCostoAdicional","getCostosAdicionales","data","infoSolicitud","infoSolicitudCandidatos","componentKey","estadoSolicitud","estados","idSolicitud","archivosSubidos","Images","valido","userSearchSelected","userSearch","observacionesAnalistaProveedor","queryResultObservacionesAnalistaProveedor","queryCostosAdicionalesVal","costoAdicionalDescripcion","costoAdicionalValor","components","FullBoxVue","MiddleBox","searchUserMultipleVue","methods","actualizarEncargado","idEncargado","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","Toast","icon","title","queryObservacionesAnalistaProveedor","queryCostosAdicionales","actualizarCostoAdicional","actualizarObservacionesAnalistaProveedor","actualizarEstadoSolicitud","idEstado","userSearchSelectedFunc","uploadFile","eliminarArchivo","realizarConsulta","id","nombre","response","realizarConsultaEstados","realizarConsultaCandidatos","realizarConsultaArchivos","subirArchivo","formData","descargarArchivos","link","document","mounted","watch"],"sourceRoot":"src/views","sources":["infoSolicitudView.vue"],"sourcesContent":["<template>\n  <div :key=\"componentKey\" v-if=\"valido\">\n    <FullBoxVue class=\"shadowHover\">\n      <h1>Solicitud {{ $route.params.id }}</h1>\n    </FullBoxVue>\n    <FullBoxVue\n      class=\"shadowHover\"\n      v-if=\"\n        $dataUser[0].rol == 'Admin' ||\n        infoSolicitud.coordinador == $dataUser[0].id\n      \"\n    >\n      Encargado(s) actual: {{ infoSolicitud.encargados }}\n      <h2>Seleccionar analista/proveedor</h2>\n      <searchUserMultipleVue\n        v-bind:people=\"userSearch\"\n        @selected=\"userSearchSelectedFunc\"\n      ></searchUserMultipleVue>\n      <v-btn color=\"success\" @click=\"actualizarEncargado()\"\n        >Actualizar analista/proveedor</v-btn\n      >\n      <br /><br />\n      <h2>Cambiar estado solicitud</h2>\n      <v-select\n        v-model=\"estadoSolicitud\"\n        :items=\"estados\"\n        item-text=\"nombre\"\n        item-value=\"id\"\n        label=\"Estado\"\n      ></v-select>\n      <v-btn color=\"success\" @click=\"actualizarEstadoSolicitud()\"\n        >Actualizar Estado de solicitud</v-btn\n      >\n    </FullBoxVue>\n    <FullBoxVue\n      class=\"shadowHover\"\n      v-if=\"\n        $dataUser[0].idRol == 3 ||\n        infoSolicitud.idEncargado == $dataUser[0].id ||\n        infoSolicitud.encargado == $dataUser[0].id ||\n        infoSolicitud.estado == 'Finalizada'\n      \"\n    >\n      <div\n        v-if=\"\n          $dataUser[0].idRol == 3 || infoSolicitud.encargado == $dataUser[0].id\n        \"\n      >\n        <h2>Subir archivo nuevo</h2>\n        <input type=\"file\" @change=\"uploadFile\" ref=\"file\" />\n        &nbsp;\n        <v-btn color=\"success\" @click=\"subirArchivo()\">Subir archivo</v-btn>\n      </div>\n      <br /><br />\n\n      <v-container>\n        <h2>Archivos subidos por colaboradores</h2>\n        Pulse encima del archivo para descargar\n        <br /><br />\n        <v-row dense>\n          <v-col\n            v-for=\"(archivo, index) in archivosSubidos\"\n            :key=\"index\"\n          >\n            <v-card class=\"archivo shadowHover\">\n              <v-btn\n                v-if=\"\n                  archivo.idSubidoPor == $dataUser[0].id ||\n                  $dataUser[0].idRol == 3\n                \"\n                color=\"pink\"\n                fab\n                dark\n                small\n                absolute\n                top\n                left\n                @click=\"eliminarArchivo(archivo.id)\"\n              >\n                <v-icon>mdi-close</v-icon>\n              </v-btn>\n              <div\n                @click=\"\n                  descargarArchivos(archivo.archivo, archivo.nombreArchivo)\n                \"\n                class=\"\"\n              >\n                <v-icon size=\"100px\"> mdi-file-chart </v-icon>\n                <br />\n                {{ archivo.nombreArchivo }}\n                <br />\n                <h6>Fecha subida: {{ archivo.creado }}</h6>\n                <h6>Subido por: {{ archivo.subidoPor }}</h6>\n                <h6 v-if=\"archivo.comentarios!=''\">Observaciones: {{ archivo.comentarios }}</h6>\n                <h6 v-if=\"archivo.observaciones!=''\">Archivo Requerido: {{ archivo.observaciones }}</h6>\n              </div>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </FullBoxVue>\n\n    <FullBoxVue>\n      <h2>Observaciones</h2>\n\n      <div>\n        <v-textarea\n          v-model=\"observacionesAnalistaProveedor\"\n          label=\"Observaciones\"\n        ></v-textarea>\n\n        <v-btn\n          color=\"success\"\n          @click=\"actualizarObservacionesAnalistaProveedor()\"\n          >Agregar observación</v-btn\n        >\n        <br /><br /><br />\n      </div>\n      <div\n        class=\"chat-bubble\"\n        v-for=\"(object, index) in queryResultObservacionesAnalistaProveedor\"\n        :key=\"index\"\n      >\n        <p class=\"message\">{{ object.contenido }}</p>\n        <span class=\"date\">{{ object.subido }}</span>\n        <button\n          class=\"delete-btn\"\n          v-if=\"object.subidoPor == $dataUser[0].id || $dataUser[0].idRol == 3\"\n          @click=\"eliminarObservacion(object.id)\"\n        >\n          Eliminar\n        </button>\n      </div>\n    </FullBoxVue>\n\n\n    <FullBoxVue>\n      <h2>Costos adicionales</h2>\n\n      <div>\n        <v-text-field\n          v-model=\"costoAdicionalDescripcion\"\n          label=\"Descripción del costo adicional\"\n        ></v-text-field>\n        <v-text-field\n          v-model=\"costoAdicionalValor\"\n          label=\"Valor costo adicional\"\n          type=\"number\"\n        ></v-text-field>\n        <v-btn\n          color=\"success\"\n          @click=\"actualizarCostoAdicional()\"\n          >Agregar costo adicional</v-btn\n        >\n        <br /><br /><br />\n      </div>\n      <div\n        class=\"chat-bubble\"\n        v-for=\"(object, index) in queryCostosAdicionalesVal\"\n        :key=\"index\"\n      >\n        <p class=\"message\">{{ object.contenido }}</p>\n        <p class=\"message\"><b>${{ object.costo }}</b></p>\n        <span class=\"date\">{{ object.subido }}</span>\n        <button\n          class=\"delete-btn\"\n          v-if=\"object.subidoPor == $dataUser[0].id || $dataUser[0].idRol == 3\"\n          @click=\"eliminarCostoAdicional(object.id)\"\n        >\n          Eliminar\n        </button>\n      </div>\n    </FullBoxVue>\n\n    <MiddleBox class=\"shadowHover\">\n      <v-form>\n        <v-container>\n          <v-row>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"infoSolicitud.id\"\n                label=\"Id\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"infoSolicitud.CentroCostos\"\n                label=\"Centro de costos\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                :value=\"infoSolicitud.NOMBRE_SERVICIO\"\n                label=\"Nombre servicio\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                :value=\"infoSolicitud.NOMBRE_SUBSERVICIO\"\n                label=\"Nombre subservicio\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                :value=\"infoSolicitud.NOMBRE_CIUDAD\"\n                label=\"Nombre ciudad\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                :value=\"infoSolicitud.NOMBRE_DEPARTAMENTO\"\n                label=\"Nombre departamento\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                :value=\"infoSolicitud.nombreCliente\"\n                label=\"Nombre cliente\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                :value=\"infoSolicitud.nombreEmpresa\"\n                label=\"Nombre empresa\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                :value=\"infoSolicitud.estado\"\n                label=\"Estado de la solicitud\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-form>\n    </MiddleBox>\n\n    <MiddleBox class=\"shadowHover\">\n      <h2>Candidato(s)</h2>\n      <v-form\n        v-for=\"(candidato, index) in infoSolicitudCandidatos\"\n        :key=\"index\"\n      >\n        <v-container>\n          <v-row>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"candidato.nombreCandidato\"\n                label=\"Nombre candidato\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"candidato.tipo_doc\"\n                label=\"Tipo documento\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"candidato.num_doc\"\n                label=\"Número de documento\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"candidato.numTelefonico\"\n                label=\"Número telefónico\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"candidato.correo\"\n                label=\"Correo\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"candidato.direccion\"\n                label=\"Dirección\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\">\n              <v-text-field\n                v-model=\"candidato.observaciones\"\n                label=\"Observaciones\"\n                readonly\n                filled\n              ></v-text-field>\n            </v-col>\n\n            <v-col\n              cols=\"12\"\n              sm=\"12\"\n              v-if=\"candidato.archivo != '' && candidato.archivo != null\"\n            >\n              <v-btn\n                color=\"success\"\n                @click=\"\n                  descargarArchivos(candidato.archivo, candidato.nombreArchivo)\n                \"\n                >Descargar archivo adjunto</v-btn\n              >\n            </v-col>\n            <v-col cols=\"12\" sm=\"12\" v-else>\n              Este candidato no cuenta con archivos\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-form>\n    </MiddleBox>\n  </div>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\n\nimport {\n  getPeticion,\n  getCandidatos,\n  downloadFile,\n  getArchivos,\n  subirArchivos,\n  eliminarArchivos,\n  getFunProv,\n  updateEncargadoSolicitud,\n  getEstadosPeticiones,\n  updateEstadoSolicitud,\n  updateObservacionesAnalistaProveedor,\n  getObservacionesAnalista,\n  eliminarObservacion,\n  updateCostoAdicional,\n  eliminarCostoAdicional,\n  getCostosAdicionales\n} from \"@/api\";\n\nexport default {\n  data() {\n    return {\n      infoSolicitud: {},\n      infoSolicitudCandidatos: {},\n      componentKey: 1,\n      estadoSolicitud: null,\n      estados: null,\n      idSolicitud: this.$route.params.id,\n      archivosSubidos: [],\n      Images: null,\n      valido: false,\n      userSearchSelected: [],\n      userSearch: [],\n      observacionesAnalistaProveedor: \"\",\n      queryResultObservacionesAnalistaProveedor: [],\n      queryCostosAdicionalesVal: [],\n      costoAdicionalDescripcion: \"\",\n      costoAdicionalValor: \"\"\n    };\n  },\n\n  components: {\n    FullBoxVue,\n    MiddleBox,\n    searchUserMultipleVue,\n  },\n\n  methods: {\n    actualizarEncargado() {\n      let bodySol = {\n        idEncargado: this.userSearchSelected,\n        idSolicitud: this.idSolicitud,\n      };\n      updateEncargadoSolicitud(bodySol).then(\n        function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"success\",\n            title: \"Solicitud enviada exitosamente\",\n          });\n        }.bind(this)\n      );\n    },\n\n    queryObservacionesAnalistaProveedor() {\n      getObservacionesAnalista(this.idSolicitud).then(\n        function (response) {\n          this.queryResultObservacionesAnalistaProveedor = response.data;\n        }.bind(this)\n      );\n    },\n\n    queryCostosAdicionales() {\n      getCostosAdicionales(this.idSolicitud).then(\n        function (response) {\n          this.queryCostosAdicionalesVal = response.data;\n        }.bind(this)\n      );\n    },\n\n    eliminarObservacion(id) {\n      eliminarObservacion(id).then(\n        function (response) {\n          this.queryObservacionesAnalistaProveedor();\n        }.bind(this)\n      );\n    },\n\n    eliminarCostoAdicional(id) {\n      eliminarCostoAdicional(id).then(\n        function (response) {\n          this.queryCostosAdicionales();\n        }.bind(this)\n      );\n    },\n\n    actualizarCostoAdicional(){\n      let bodySol = {\n        costoAdicionalDescripcion: this.costoAdicionalDescripcion,\n        costoAdicionalValor: this.costoAdicionalValor,\n        idSolicitud: this.idSolicitud,\n      };\n\n      updateCostoAdicional(bodySol).then(\n        function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"success\",\n            title: \"Solicitud enviada exitosamente\",\n          });\n          this.costoAdicionalValor = \"\";\n          this.costoAdicionalDescripcion = \"\";\n          this.queryCostosAdicionales();\n        }.bind(this)\n      );\n    },\n\n    actualizarObservacionesAnalistaProveedor() {\n      let bodySol = {\n        observacionesAnalistaProveedor: this.observacionesAnalistaProveedor,\n        idSolicitud: this.idSolicitud,\n      };\n      updateObservacionesAnalistaProveedor(bodySol).then(\n        function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"success\",\n            title: \"Solicitud enviada exitosamente\",\n          });\n          this.observacionesAnalistaProveedor = \"\";\n          this.queryObservacionesAnalistaProveedor();\n        }.bind(this)\n      );\n    },\n\n    actualizarEstadoSolicitud() {\n      let bodySol = {\n        idEstado: this.estadoSolicitud,\n        idSolicitud: this.idSolicitud,\n      };\n      updateEstadoSolicitud(bodySol).then(\n        function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"success\",\n            title: \"Solicitud enviada exitosamente\",\n          });\n        }.bind(this)\n      );\n    },\n\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n\n    uploadFile() {\n      this.Images = this.$refs.file.files[0];\n    },\n\n    eliminarArchivo(id) {\n      eliminarArchivos(id).then(\n        function (response) {\n          this.realizarConsultaArchivos();\n        }.bind(this)\n      );\n    },\n\n    realizarConsulta() {\n      getPeticion(this.idSolicitud).then(\n        function (response) {\n          this.infoSolicitud = response.data;\n          this.observacionesAnalistaProveedor = response.data.observaciones;\n          this.estadoSolicitud = this.infoSolicitud.idEstado;\n          this.componentKey += 1;\n          getFunProv(this.infoSolicitud.ID_SERVICIO).then(\n            function (response) {\n              let userSearch = [];\n              for (let user in response.data) {\n                userSearch.push({\n                  id: response.data[user].id,\n                  nombre:\n                    response.data[user].nombre +\n                    \" - \" +\n                    response.data[user].solicitudesAsignadas +\n                    \" solicitudes asignadas\",\n                });\n              }\n              this.userSearch = userSearch;\n            }.bind(this)\n          );\n        }.bind(this)\n      );\n    },\n\n    realizarConsultaEstados() {\n      getEstadosPeticiones().then(\n        function (response) {\n          this.estados = response.data;\n        }.bind(this)\n      );\n    },\n\n    realizarConsultaCandidatos() {\n      getCandidatos(this.idSolicitud).then(\n        function (response) {\n          this.infoSolicitudCandidatos = response.data;\n          this.componentKey += 1;\n        }.bind(this)\n      );\n    },\n\n    realizarConsultaArchivos() {\n      getArchivos(this.idSolicitud).then(\n        function (response) {\n          this.archivosSubidos = response.data;\n        }.bind(this)\n      );\n    },\n\n    subirArchivo() {\n      const formData = new FormData();\n      formData.append(\"file\", this.Images);\n      formData.append(\"idSolicitud\", this.idSolicitud);\n\n      subirArchivos(formData).then(\n        function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"success\",\n            title: \"Solicitud enviada exitosamente\",\n          });\n          this.realizarConsultaArchivos();\n        }.bind(this)\n      );\n    },\n\n    descargarArchivos(filepath, fileName) {\n      downloadFile(filepath).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", fileName);\n        document.body.appendChild(link);\n        link.click();\n      });\n    },\n  },\n\n  mounted() {\n    this.realizarConsulta();\n\n    this.queryObservacionesAnalistaProveedor();\n    this.queryCostosAdicionales();\n  },\n\n  watch: {\n    infoSolicitud(newState) {\n      if (newState != {}) {\n        this.valido = true;\n        this.realizarConsultaCandidatos();\n        this.realizarConsultaArchivos();\n        this.realizarConsultaEstados();\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.archivo {\n  min-width: 300px;\n  max-width: 300px;\n  min-height: 170px;\n  padding: 10px;\n}\n\n.archivo:hover {\n  background: #385da6;\n  color: #fff;\n}\n\n.archivo:hover > div > i {\n  color: #fff;\n}\n.archivo:hover > div {\n  cursor: pointer;\n}\n\n.archivo:hover > div > div > div label{\n  color: #fff;\n}\n\n.archivo:hover > div > div > div > textarea{\n  color: #fff;\n}\n\n.chat-bubble {\n  background-color: #f1f0f0;\n  border-radius: 15px;\n  padding: 10px;\n  width: 80%;\n  display: inline-block;\n  margin: 10px 0;\n}\n\n.message {\n  margin: 0;\n  font-size: 16px;\n  line-height: 1.2;\n}\n\n.date {\n  font-size: 12px;\n  color: #666;\n  display: block;\n  margin-top: 5px;\n}\n\n.delete-btn {\n  background-color: #f44336;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  padding: 6px 12px;\n  margin-top: 10px;\n  font-size: 14px;\n  cursor: pointer;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}