{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.structured-clone.js\";\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport Vue from \"vue\";\nimport { VTextField, VRadioGroup, VRadio, VSlider, VCheckbox, VSwitch, VSelect } from \"vuetify/lib\";\n// All components that are used in the form need to be globally registered.\nVue.component(\"VTextField\", VTextField);\nVue.component(\"VRadioGroup\", VRadioGroup);\nVue.component(\"VRadio\", VRadio);\nVue.component(\"VSlider\", VSlider);\nVue.component(\"VCheckbox\", VCheckbox);\nVue.component(\"VSwitch\", VSwitch);\nVue.component(\"VSelect\", VSelect);\nimport { getServicio, getSubServicio, getServicioEspecifico, getServicioEspecificoEspecifico, getDepartamento, getCiudad, getDocumento, newForm, getClientes } from \"@/api\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport searchUserVue from \"../components/searchUser.vue\";\nconst valuesServiciodef = {\n  servicio: \"\",\n  subservicio: \"\"\n};\nconst valuesUbicaciondef = {\n  departamento: \"\",\n  ciudad: \"\"\n};\nconst valuesCandidatodef = {\n  nombreCandidato: \"\",\n  tipodocumento: \"\",\n  documento: \"\",\n  numeroCandidato: \"\",\n  correo: \"\",\n  observaciones: \"\"\n};\nexport default {\n  data() {\n    return {\n      valuesServicio: [],\n      CentroCostos: \"\",\n      schemaServicio: [],\n      valuesUbicacion: {\n        departamento: \"\",\n        ciudad: \"\"\n      },\n      schemaUbicacion: [],\n      componentKey: 0,\n      componentKeyUbicacion: -1,\n      valuesCandidato: {\n        nombreCandidato: \"\",\n        tipodocumento: \"\",\n        documento: \"\",\n        numeroCandidato: \"\",\n        correo: \"\",\n        observaciones: \"\"\n      },\n      schemaCandidato: [],\n      Images: null,\n      datosUser: {},\n      userSearch: [],\n      userSearchSelected: [],\n      serviciosDefault: []\n    };\n  },\n  methods: {\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n    recargarFormulario() {\n      this.componentKey += 1;\n      this.componentKeyUbicacion -= 1;\n    },\n    uploadFile() {\n      this.Images = this.$refs.file.files[0];\n    },\n    enviarFormulario() {\n      const formData = new FormData();\n      formData.append(\"file\", this.Images);\n      formData.append(\"InfoServicio\", JSON.stringify(this.valuesServicio));\n      formData.append(\"Ubicacion\", JSON.stringify(this.valuesUbicacion));\n      formData.append(\"Candidato\", JSON.stringify(this.valuesCandidato));\n      if (this.$dataUser[0].rol == \"Admin\") {\n        formData.append(\"Usuario\", JSON.stringify(this.userSearchSelected));\n      }\n      newForm(formData).then(function (response) {\n        console.log(response.data);\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"success\",\n          title: \"Solicitud enviada exitosamente\"\n        });\n        this.valuesServicio = valuesServiciodef;\n        this.valuesUbicacion = valuesUbicaciondef;\n        this.valuesCandidato = valuesCandidatodef;\n        this.recargarFormulario();\n      }.bind(this));\n      console.log(formData);\n    },\n    agregarServicios() {\n      this.schemaServicio.push({\n        servicio: this.serviciosDefault,\n        subservicio: []\n      });\n      this.valuesServicio.push(structuredClone(valuesServiciodef));\n    },\n    consultaServicio(indiceMayor) {\n      getServicio().then(function (response) {\n        this.preServicios = response.data;\n        console.log(this.preServicios);\n        this.serviciosDefault = [];\n        for (let i = 0; i < this.preServicios.length; i++) {\n          console.log(this.preServicios[i]);\n          this.serviciosDefault.push({\n            value: this.preServicios[i].ID_SUBSERVICIO,\n            text: this.preServicios[i].NOMBRE_SERVICIO\n          });\n        }\n        this.agregarServicios();\n        this.recargarFormulario();\n      }.bind(this));\n    },\n    consultaSubServicio(id, indiceMayor) {\n      getSubServicio(id).then(function (response) {\n        console.log(response.data);\n        const indice = 2;\n        if (response.data.length > 0) {\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"Seleccione el SubServicio\",\n            disabled: true\n          };\n          const options = [itemsOptionsTemplate];\n          for (let i = 0; i < response.data.length; i++) {\n            // Solución planteada así por un error de referencia de memoria\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"\"\n            };\n            const subTemplate = itemsOptionsTemplate;\n            itemsOptionsTemplate.value = response.data[i].ID_SUBSERVICIO;\n            subTemplate.text = response.data[i].NOMBRE_SUBSERVICIO;\n            options.push(subTemplate);\n          }\n          if (this.schemaServicio[indiceMayor][indice] == null) {\n            this.schemaServicio.splice(indice, 0, {\n              id: \"subservicio\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Subservicio\",\n              items: options\n            });\n          } else {\n            this.schemaServicio[indiceMayor][indice] = {\n              id: \"subservicio\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Subservicio\",\n              items: options\n            };\n            this.recargarFormulario();\n          }\n        } else {\n          this.schemaServicio[indiceMayor].splice(indice, 1);\n        }\n      }.bind(this));\n    },\n    consultaServicioEspecifico(id) {\n      getServicioEspecifico(id).then(function (response) {\n        const indice = 3;\n        if (response.data.length > 0) {\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"Seleccione el Servicio Específico\",\n            disabled: true\n          };\n          const options = [itemsOptionsTemplate];\n          for (let i = 0; i < response.data.length; i++) {\n            // Solución planteada así por un error de referencia de memoria\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"\"\n            };\n            const subTemplate = itemsOptionsTemplate;\n            itemsOptionsTemplate.value = response.data[i].ID_SERVICIO_ESPECIFICO;\n            subTemplate.text = response.data[i].NOMBRE_SERVICIO_ESPECIFICO;\n            options.push(subTemplate);\n          }\n          if (this.schemaServicio[indice] == null) {\n            this.schemaServicio.splice(indice, 0, {\n              id: \"servicioEspecifico\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Servicio Específico\",\n              items: options\n            });\n          } else {\n            this.schemaServicio[indice] = {\n              id: \"servicioEspecifico\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Servicio Específico\",\n              items: options\n            };\n            this.recargarFormulario();\n          }\n        } else {\n          this.schemaServicio.splice(indice, 1);\n        }\n      }.bind(this));\n    },\n    consultaServicioEspecificoEspecifico(id) {\n      getServicioEspecificoEspecifico(id).then(function (response) {\n        const indice = 4;\n        console.log(response.data);\n        if (response.data.length > 0) {\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"Seleccione el Servicio Específico\",\n            disabled: true\n          };\n          const options = [itemsOptionsTemplate];\n          for (let i = 0; i < response.data.length; i++) {\n            // Solución planteada así por un error de referencia de memoria\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"\"\n            };\n            const subTemplate = itemsOptionsTemplate;\n            itemsOptionsTemplate.value = response.data[i].ID_SERVICIO_ESPECIFICO2;\n            subTemplate.text = response.data[i].NOMBRE_SERVICIO_ESPECIFICO2;\n            options.push(subTemplate);\n          }\n          if (this.schemaServicio[indice] == null) {\n            this.schemaServicio.splice(indice, 0, {\n              id: \"servicioEspecificoEspecifico\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Servicio Específico\",\n              items: options\n            });\n          } else {\n            this.schemaServicio[indice] = {\n              id: \"servicioEspecificoEspecifico\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Servicio Específico\",\n              items: options\n            };\n            this.recargarFormulario();\n          }\n        } else {\n          this.schemaServicio.splice(indice, 1);\n        }\n      }.bind(this));\n    },\n    consultaCiudad(id) {\n      getCiudad(id).then(function (response) {\n        const indice = 2;\n        if (response.data.length > 0) {\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"Seleccione la ciudad\",\n            disabled: true\n          };\n          const options = [itemsOptionsTemplate];\n          for (let i = 0; i < response.data.length; i++) {\n            // Solución planteada así por un error de referencia de memoria\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"\"\n            };\n            const subTemplate = itemsOptionsTemplate;\n            itemsOptionsTemplate.value = response.data[i].ID_CIUDAD;\n            subTemplate.text = response.data[i].NOMBRE_CIUDAD;\n            options.push(subTemplate);\n          }\n          if (this.schemaUbicacion[indice] == null) {\n            this.schemaUbicacion.splice(indice, 0, {\n              id: \"ciudad\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Ciudad\",\n              items: options\n            });\n          } else {\n            this.schemaUbicacion[indice] = {\n              id: \"ciudad\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Ciudad\",\n              items: options\n            };\n            this.recargarFormulario();\n          }\n        } else {\n          this.schemaUbicacion.splice(indice, 1);\n        }\n      }.bind(this));\n    }\n  },\n  mounted() {\n    getClientes().then(function (response) {\n      this.userSearch = response.data;\n    }.bind(this));\n    this.consultaServicio(0);\n    getDepartamento().then(function (response) {\n      const indice = 0;\n      const totalForms = 5;\n      const itemsOptionsTemplate = {\n        value: \"\",\n        text: \"Seleccione el departamento\",\n        disabled: true\n      };\n      const options = [itemsOptionsTemplate];\n      for (let i = 0; i < response.data.length; i++) {\n        // Solución planteada así por un error de referencia de memoria\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"\"\n        };\n        const subTemplate = itemsOptionsTemplate;\n        itemsOptionsTemplate.value = response.data[i].ID_DEPARTAMENTO;\n        subTemplate.text = response.data[i].NOMBRE_DEPARTAMENTO;\n        options.push(subTemplate);\n      }\n      if (this.schemaUbicacion[indice] == null) {\n        this.schemaUbicacion.splice(indice, 0, {\n          id: \"departamento\",\n          span: true,\n          component: \"VSelect\",\n          label: \"Departamento\",\n          items: options\n        });\n      } else {\n        this.schemaUbicacion[indice] = {\n          id: \"departamento\",\n          span: true,\n          component: \"VSelect\",\n          label: \"Departamento\",\n          items: options\n        };\n      }\n      this.recargarFormulario();\n    }.bind(this));\n    getDocumento().then(function (response) {\n      console.log(response.data);\n      const indice = 0;\n      const totalForms = 5;\n      const itemsOptionsTemplate = {\n        value: \"\",\n        text: \"Seleccionar tipo de documento\",\n        disabled: true\n      };\n      const options = [itemsOptionsTemplate];\n      for (let i = 0; i < response.data.length; i++) {\n        // Solución planteada así por un error de referencia de memoria\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"\"\n        };\n        const subTemplate = itemsOptionsTemplate;\n        itemsOptionsTemplate.value = response.data[i].ID_TIPO_DOCUMENTO;\n        subTemplate.text = response.data[i].DESC_COMPLE_TIPO_DOCUMENTOcol;\n        options.push(subTemplate);\n      }\n      const opcionesDocumentos = {\n        id: \"tipodocumento\",\n        span: true,\n        component: \"VSelect\",\n        label: \"Tipo de documento\",\n        items: options\n      };\n      this.schemaCandidato = [{\n        id: \"nombreCandidato\",\n        component: \"VTextField\",\n        label: \"Nombre del candidato\"\n      }, opcionesDocumentos, {\n        id: \"documento\",\n        component: \"VTextField\",\n        label: \"Número de documento\"\n      }, {\n        id: \"numeroCandidato\",\n        component: \"VTextField\",\n        label: \"Número telefónico\"\n      }, {\n        id: \"correo\",\n        component: \"VTextField\",\n        label: \"Correo\"\n      }, {\n        id: \"observaciones\",\n        component: \"VTextField\",\n        label: \"Observaciones\"\n      }];\n      this.recargarFormulario();\n    }.bind(this));\n  },\n  watch: {\n    valuesServicio: {\n      handler: function (newValue) {\n        console.log(newValue.servicio);\n      },\n      deep: true\n    },\n    valuesUbicacion(newValue, oldValue) {\n      if (newValue.departamento && newValue.departamento != oldValue.departamento) {\n        this.valuesUbicacion.ciudad = \"\";\n        this.consultaCiudad(newValue.departamento);\n      }\n    }\n  },\n  components: {\n    FullBoxVue,\n    BlitzForm,\n    MiddleBox,\n    searchUserVue\n  }\n};","map":{"version":3,"mappings":";;;AA8EA;AACA;AACA;AAEA,SACAA,YACAC,aACAC,QACAC,SACAC,WACAC,SACAC,eACA;AACA;AACAC;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AAEA,SACAC,aACAC,gBACAC,uBACAC,iCACAC,iBACAC,WACAC,cACAC,SACAC,mBACA;AACA;AACA;AAEA;EACAC;EACAC;AACA;AAEA;EACAC;EACAC;AACA;AAEA;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;AACA;AAEA;EACAC;IACA;MACAC;MACAC;MACAC;MAEAC;QACAZ;QACAC;MACA;MACAY;MACAC;MACAC;MAEAC;QACAd;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAU;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;MACAC;MACAA;MACAA;MACAA;MACA;QACAA;MACA;MACAhC,uBACA;QACAiC;QACA;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC;QACA;QACA;QACA;QACA;QACA;MACA,aACA;MACAT;IACA;IAEAU;MACA;QACAzC;QACAC;MACA;MACA;IACA;IAEAyC;MACAnD,mBACA;QACA;QACAwC;QACA;QACA;UACAA;UACA;YACAY;YACAC;UACA;QACA;QAEA;QACA;MACA,aACA;IACA;IAEAC;MACArD,wBACA;QACAuC;QACA;QACA;UACA;YACAY;YACAC;YACAE;UACA;UAEA;UAEA;YACA;YACA;cACAH;cACAC;YACA;YACA;YACAG;YACAC;YACAC;UACA;UAEA;YACA;cACAC;cACAC;cACAC;cACAC;cACAC;YACA;UACA;YACA;cACAJ;cACAC;cACAC;cACAC;cACAC;YACA;YAEA;UACA;QACA;UACA;QACA;MACA,aACA;IACA;IAEAC;MACA9D,+BACA;QACA;QACA;UACA;YACAkD;YACAC;YACAE;UACA;UAEA;UAEA;YACA;YACA;cACAH;cACAC;YACA;YACA;YACAG,6BACAS;YACAR;YACAC;UACA;UAEA;YACA;cACAC;cACAC;cACAC;cACAC;cACAC;YACA;UACA;YACA;cACAJ;cACAC;cACAC;cACAC;cACAC;YACA;YAEA;UACA;QACA;UACA;QACA;MACA,aACA;IACA;IACAG;MACA/D,yCACA;QACA;QACAqC;QACA;UACA;YACAY;YACAC;YACAE;UACA;UAEA;UAEA;YACA;YACA;cACAH;cACAC;YACA;YACA;YACAG,6BACAS;YACAR;YACAC;UACA;UAEA;YACA;cACAC;cACAC;cACAC;cACAC;cACAC;YACA;UACA;YACA;cACAJ;cACAC;cACAC;cACAC;cACAC;YACA;YAEA;UACA;QACA;UACA;QACA;MACA,aACA;IACA;IAEAI;MACA9D,mBACA;QACA;QACA;UACA;YACA+C;YACAC;YACAE;UACA;UAEA;UAEA;YACA;YACA;cACAH;cACAC;YACA;YACA;YACAG;YACAC;YACAC;UACA;UAEA;YACA;cACAC;cACAC;cACAC;cACAC;cACAC;YACA;UACA;YACA;cACAJ;cACAC;cACAC;cACAC;cACAC;YACA;YAEA;UACA;QACA;UACA;QACA;MACA,aACA;IACA;EACA;EAEAK;IACA5D,mBACA;MACA;IACA,aACA;IAEA;IAEAJ,uBACA;MACA;MACA;MACA;QACAgD;QACAC;QACAE;MACA;MAEA;MAEA;QACA;QACA;UACAH;UACAC;QACA;QACA;QACAG;QACAC;QACAC;MACA;MAEA;QACA;UACAC;UACAC;UACAC;UACAC;UACAC;QACA;MACA;QACA;UACAJ;UACAC;UACAC;UACAC;UACAC;QACA;MACA;MACA;IACA,aACA;IAEAzD,oBACA;MACAkC;MACA;MACA;MACA;QACAY;QACAC;QACAE;MACA;MAEA;MAEA;QACA;QACA;UACAH;UACAC;QACA;QACA;QACAG;QACAC;QACAC;MACA;MAEA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEA,wBACA;QACAJ;QACAE;QACAC;MACA,GACAO,oBACA;QACAV;QACAE;QACAC;MACA,GACA;QACAH;QACAE;QACAC;MACA,GACA;QACAH;QACAE;QACAC;MACA,GACA;QACAH;QACAE;QACAC;MACA,EACA;MAEA;IACA,aACA;EACA;EAEAQ;IACAlD;MACAmD;QACA/B;MACA;MACAgC;IACA;IAEAjD;MACA,IACAkD,yBACAA,gDACA;QACA;QACA;MACA;IACA;EACA;EAEAC;IACAC;IACAC;IACAC;IACAC;EACA;AACA","names":["VTextField","VRadioGroup","VRadio","VSlider","VCheckbox","VSwitch","VSelect","Vue","getServicio","getSubServicio","getServicioEspecifico","getServicioEspecificoEspecifico","getDepartamento","getCiudad","getDocumento","newForm","getClientes","servicio","subservicio","departamento","ciudad","nombreCandidato","tipodocumento","documento","numeroCandidato","correo","observaciones","data","valuesServicio","CentroCostos","schemaServicio","valuesUbicacion","schemaUbicacion","componentKey","componentKeyUbicacion","valuesCandidato","schemaCandidato","Images","datosUser","userSearch","userSearchSelected","serviciosDefault","methods","userSearchSelectedFunc","recargarFormulario","uploadFile","enviarFormulario","formData","console","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","Toast","icon","title","agregarServicios","consultaServicio","value","text","consultaSubServicio","disabled","itemsOptionsTemplate","subTemplate","options","id","span","component","label","items","consultaServicioEspecifico","response","consultaServicioEspecificoEspecifico","consultaCiudad","mounted","opcionesDocumentos","watch","handler","deep","newValue","components","FullBoxVue","BlitzForm","MiddleBox","searchUserVue"],"sourceRoot":"src/views","sources":["FormBuilderView.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"$dataUser[0].rol == 'Cliente' || $dataUser[0].rol == 'Admin'\"\n    :key=\"componentKey\"\n  >\n    <FullBoxVue class=\"shadowHover\">\n      <h1>Nueva solicitud</h1>\n    </FullBoxVue>\n\n    <FullBoxVue class=\"shadowHover\" v-if=\"$dataUser[0].rol == 'Admin'\">\n      <h2>Seleccionar usuario</h2>\n      <searchUserVue\n        v-bind:people=\"userSearch\"\n        @selected=\"userSearchSelectedFunc\"\n      ></searchUserVue>\n    </FullBoxVue>\n    <MiddleBox class=\"shadowHover\">\n      <v-text-field\n        v-model=\"CentroCostos\"\n        label=\"Centro de costos\"\n      ></v-text-field>\n      <div class=\"formContent\">\n\n        <div v-for=\"(data, index) in schemaServicio\" :key=\"index\">\n          {{ index }} :\n          {{valuesServicio[index]}}\n\n          <v-select\n            v-model=\"valuesServicio[index].servicio\"\n            :items=\"data.servicio\"\n            label=\"Servicio\"\n          ></v-select>\n          <v-select\n            v-model=\"valuesServicio[index].subservicio\"\n            :items=\"data.subservicio\"\n            label=\"SubServicio\"\n          ></v-select>\n          <br />\n          <hr />\n          <br />\n        </div>\n\n        <v-btn\n          color=\"success\"\n          @click=\"agregarServicios()\"\n          >Agregar servicio</v-btn\n        >\n\n        <br /><br />\n        <BlitzForm\n          :schema=\"schemaUbicacion\"\n          v-model=\"valuesUbicacion\"\n          :key=\"componentKeyUbicacion\"\n          gridGap=\"0\"\n          labelPosition=\"left\"\n        />\n      </div>\n    </MiddleBox>\n    <MiddleBox class=\"shadowHover\">\n      <h2>Datos del candidato</h2>\n      <BlitzForm\n        :schema=\"schemaCandidato\"\n        v-model=\"valuesCandidato\"\n        gridGap=\"0\"\n        labelPosition=\"left\"\n      />\n      <input type=\"file\" @change=\"uploadFile\" ref=\"file\" />\n      <br /><br />\n    </MiddleBox>\n    <FullBoxVue class=\"shadowHover\">\n      <v-btn color=\"primary\" dark @click=\"enviarFormulario\">\n        Enviar Solcitud\n      </v-btn>\n    </FullBoxVue>\n  </div>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport Vue from \"vue\";\n\nimport {\n  VTextField,\n  VRadioGroup,\n  VRadio,\n  VSlider,\n  VCheckbox,\n  VSwitch,\n  VSelect,\n} from \"vuetify/lib\";\n// All components that are used in the form need to be globally registered.\nVue.component(\"VTextField\", VTextField);\nVue.component(\"VRadioGroup\", VRadioGroup);\nVue.component(\"VRadio\", VRadio);\nVue.component(\"VSlider\", VSlider);\nVue.component(\"VCheckbox\", VCheckbox);\nVue.component(\"VSwitch\", VSwitch);\nVue.component(\"VSelect\", VSelect);\n\nimport {\n  getServicio,\n  getSubServicio,\n  getServicioEspecifico,\n  getServicioEspecificoEspecifico,\n  getDepartamento,\n  getCiudad,\n  getDocumento,\n  newForm,\n  getClientes,\n} from \"@/api\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport searchUserVue from \"../components/searchUser.vue\";\n\nconst valuesServiciodef = {\n  servicio: \"\",\n  subservicio: \"\",\n};\n\nconst valuesUbicaciondef = {\n  departamento: \"\",\n  ciudad: \"\",\n};\n\nconst valuesCandidatodef = {\n  nombreCandidato: \"\",\n  tipodocumento: \"\",\n  documento: \"\",\n  numeroCandidato: \"\",\n  correo: \"\",\n  observaciones: \"\",\n};\n\nexport default {\n  data() {\n    return {\n      valuesServicio: [],\n      CentroCostos: \"\",\n      schemaServicio: [],\n\n      valuesUbicacion: {\n        departamento: \"\",\n        ciudad: \"\",\n      },\n      schemaUbicacion: [],\n      componentKey: 0,\n      componentKeyUbicacion: -1,\n\n      valuesCandidato: {\n        nombreCandidato: \"\",\n        tipodocumento: \"\",\n        documento: \"\",\n        numeroCandidato: \"\",\n        correo: \"\",\n        observaciones: \"\",\n      },\n      schemaCandidato: [],\n      Images: null,\n      datosUser: {},\n      userSearch: [],\n      userSearchSelected: [],\n      serviciosDefault: [],\n    };\n  },\n\n  methods: {\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n    recargarFormulario() {\n      this.componentKey += 1;\n      this.componentKeyUbicacion -= 1;\n    },\n\n    uploadFile() {\n      this.Images = this.$refs.file.files[0];\n    },\n\n    enviarFormulario() {\n      const formData = new FormData();\n      formData.append(\"file\", this.Images);\n      formData.append(\"InfoServicio\", JSON.stringify(this.valuesServicio));\n      formData.append(\"Ubicacion\", JSON.stringify(this.valuesUbicacion));\n      formData.append(\"Candidato\", JSON.stringify(this.valuesCandidato));\n      if (this.$dataUser[0].rol == \"Admin\") {\n        formData.append(\"Usuario\", JSON.stringify(this.userSearchSelected));\n      }\n      newForm(formData).then(\n        function (response) {\n          console.log(response.data);\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"success\",\n            title: \"Solicitud enviada exitosamente\",\n          });\n          this.valuesServicio = valuesServiciodef;\n          this.valuesUbicacion = valuesUbicaciondef;\n          this.valuesCandidato = valuesCandidatodef;\n          this.recargarFormulario();\n        }.bind(this)\n      );\n      console.log(formData);\n    },\n\n    agregarServicios(){\n      this.schemaServicio.push({\n        servicio: this.serviciosDefault,\n        subservicio: [],\n      });\n      this.valuesServicio.push(structuredClone(valuesServiciodef));\n    },\n\n    consultaServicio(indiceMayor) {\n      getServicio().then(\n        function (response) {\n          this.preServicios = response.data;\n          console.log(this.preServicios);\n          this.serviciosDefault = [];\n          for (let i = 0; i < this.preServicios.length; i++) {\n            console.log(this.preServicios[i]);\n            this.serviciosDefault.push({\n              value: this.preServicios[i].ID_SUBSERVICIO,\n              text: this.preServicios[i].NOMBRE_SERVICIO,\n            });\n          }\n\n          this.agregarServicios()\n          this.recargarFormulario();\n        }.bind(this)\n      );\n    },\n\n    consultaSubServicio(id, indiceMayor) {\n      getSubServicio(id).then(\n        function (response) {\n          console.log(response.data);\n          const indice = 2;\n          if (response.data.length > 0) {\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"Seleccione el SubServicio\",\n              disabled: true,\n            };\n\n            const options = [itemsOptionsTemplate];\n\n            for (let i = 0; i < response.data.length; i++) {\n              // Solución planteada así por un error de referencia de memoria\n              const itemsOptionsTemplate = {\n                value: \"\",\n                text: \"\",\n              };\n              const subTemplate = itemsOptionsTemplate;\n              itemsOptionsTemplate.value = response.data[i].ID_SUBSERVICIO;\n              subTemplate.text = response.data[i].NOMBRE_SUBSERVICIO;\n              options.push(subTemplate);\n            }\n\n            if (this.schemaServicio[indiceMayor][indice] == null) {\n              this.schemaServicio.splice(indice, 0, {\n                id: \"subservicio\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Subservicio\",\n                items: options,\n              });\n            } else {\n              this.schemaServicio[indiceMayor][indice] = {\n                id: \"subservicio\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Subservicio\",\n                items: options,\n              };\n\n              this.recargarFormulario();\n            }\n          } else {\n            this.schemaServicio[indiceMayor].splice(indice, 1);\n          }\n        }.bind(this)\n      );\n    },\n\n    consultaServicioEspecifico(id) {\n      getServicioEspecifico(id).then(\n        function (response) {\n          const indice = 3;\n          if (response.data.length > 0) {\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"Seleccione el Servicio Específico\",\n              disabled: true,\n            };\n\n            const options = [itemsOptionsTemplate];\n\n            for (let i = 0; i < response.data.length; i++) {\n              // Solución planteada así por un error de referencia de memoria\n              const itemsOptionsTemplate = {\n                value: \"\",\n                text: \"\",\n              };\n              const subTemplate = itemsOptionsTemplate;\n              itemsOptionsTemplate.value =\n                response.data[i].ID_SERVICIO_ESPECIFICO;\n              subTemplate.text = response.data[i].NOMBRE_SERVICIO_ESPECIFICO;\n              options.push(subTemplate);\n            }\n\n            if (this.schemaServicio[indice] == null) {\n              this.schemaServicio.splice(indice, 0, {\n                id: \"servicioEspecifico\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Servicio Específico\",\n                items: options,\n              });\n            } else {\n              this.schemaServicio[indice] = {\n                id: \"servicioEspecifico\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Servicio Específico\",\n                items: options,\n              };\n\n              this.recargarFormulario();\n            }\n          } else {\n            this.schemaServicio.splice(indice, 1);\n          }\n        }.bind(this)\n      );\n    },\n    consultaServicioEspecificoEspecifico(id) {\n      getServicioEspecificoEspecifico(id).then(\n        function (response) {\n          const indice = 4;\n          console.log(response.data);\n          if (response.data.length > 0) {\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"Seleccione el Servicio Específico\",\n              disabled: true,\n            };\n\n            const options = [itemsOptionsTemplate];\n\n            for (let i = 0; i < response.data.length; i++) {\n              // Solución planteada así por un error de referencia de memoria\n              const itemsOptionsTemplate = {\n                value: \"\",\n                text: \"\",\n              };\n              const subTemplate = itemsOptionsTemplate;\n              itemsOptionsTemplate.value =\n                response.data[i].ID_SERVICIO_ESPECIFICO2;\n              subTemplate.text = response.data[i].NOMBRE_SERVICIO_ESPECIFICO2;\n              options.push(subTemplate);\n            }\n\n            if (this.schemaServicio[indice] == null) {\n              this.schemaServicio.splice(indice, 0, {\n                id: \"servicioEspecificoEspecifico\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Servicio Específico\",\n                items: options,\n              });\n            } else {\n              this.schemaServicio[indice] = {\n                id: \"servicioEspecificoEspecifico\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Servicio Específico\",\n                items: options,\n              };\n\n              this.recargarFormulario();\n            }\n          } else {\n            this.schemaServicio.splice(indice, 1);\n          }\n        }.bind(this)\n      );\n    },\n\n    consultaCiudad(id) {\n      getCiudad(id).then(\n        function (response) {\n          const indice = 2;\n          if (response.data.length > 0) {\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"Seleccione la ciudad\",\n              disabled: true,\n            };\n\n            const options = [itemsOptionsTemplate];\n\n            for (let i = 0; i < response.data.length; i++) {\n              // Solución planteada así por un error de referencia de memoria\n              const itemsOptionsTemplate = {\n                value: \"\",\n                text: \"\",\n              };\n              const subTemplate = itemsOptionsTemplate;\n              itemsOptionsTemplate.value = response.data[i].ID_CIUDAD;\n              subTemplate.text = response.data[i].NOMBRE_CIUDAD;\n              options.push(subTemplate);\n            }\n\n            if (this.schemaUbicacion[indice] == null) {\n              this.schemaUbicacion.splice(indice, 0, {\n                id: \"ciudad\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Ciudad\",\n                items: options,\n              });\n            } else {\n              this.schemaUbicacion[indice] = {\n                id: \"ciudad\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Ciudad\",\n                items: options,\n              };\n\n              this.recargarFormulario();\n            }\n          } else {\n            this.schemaUbicacion.splice(indice, 1);\n          }\n        }.bind(this)\n      );\n    },\n  },\n\n  mounted() {\n    getClientes().then(\n      function (response) {\n        this.userSearch = response.data;\n      }.bind(this)\n    );\n\n    this.consultaServicio(0);\n\n    getDepartamento().then(\n      function (response) {\n        const indice = 0;\n        const totalForms = 5;\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"Seleccione el departamento\",\n          disabled: true,\n        };\n\n        const options = [itemsOptionsTemplate];\n\n        for (let i = 0; i < response.data.length; i++) {\n          // Solución planteada así por un error de referencia de memoria\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"\",\n          };\n          const subTemplate = itemsOptionsTemplate;\n          itemsOptionsTemplate.value = response.data[i].ID_DEPARTAMENTO;\n          subTemplate.text = response.data[i].NOMBRE_DEPARTAMENTO;\n          options.push(subTemplate);\n        }\n\n        if (this.schemaUbicacion[indice] == null) {\n          this.schemaUbicacion.splice(indice, 0, {\n            id: \"departamento\",\n            span: true,\n            component: \"VSelect\",\n            label: \"Departamento\",\n            items: options,\n          });\n        } else {\n          this.schemaUbicacion[indice] = {\n            id: \"departamento\",\n            span: true,\n            component: \"VSelect\",\n            label: \"Departamento\",\n            items: options,\n          };\n        }\n        this.recargarFormulario();\n      }.bind(this)\n    );\n\n    getDocumento().then(\n      function (response) {\n        console.log(response.data);\n        const indice = 0;\n        const totalForms = 5;\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"Seleccionar tipo de documento\",\n          disabled: true,\n        };\n\n        const options = [itemsOptionsTemplate];\n\n        for (let i = 0; i < response.data.length; i++) {\n          // Solución planteada así por un error de referencia de memoria\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"\",\n          };\n          const subTemplate = itemsOptionsTemplate;\n          itemsOptionsTemplate.value = response.data[i].ID_TIPO_DOCUMENTO;\n          subTemplate.text = response.data[i].DESC_COMPLE_TIPO_DOCUMENTOcol;\n          options.push(subTemplate);\n        }\n\n        const opcionesDocumentos = {\n          id: \"tipodocumento\",\n          span: true,\n          component: \"VSelect\",\n          label: \"Tipo de documento\",\n          items: options,\n        };\n\n        this.schemaCandidato = [\n          {\n            id: \"nombreCandidato\",\n            component: \"VTextField\",\n            label: \"Nombre del candidato\",\n          },\n          opcionesDocumentos,\n          {\n            id: \"documento\",\n            component: \"VTextField\",\n            label: \"Número de documento\",\n          },\n          {\n            id: \"numeroCandidato\",\n            component: \"VTextField\",\n            label: \"Número telefónico\",\n          },\n          {\n            id: \"correo\",\n            component: \"VTextField\",\n            label: \"Correo\",\n          },\n          {\n            id: \"observaciones\",\n            component: \"VTextField\",\n            label: \"Observaciones\",\n          },\n        ];\n\n        this.recargarFormulario();\n      }.bind(this)\n    );\n  },\n\n  watch: {\n    valuesServicio: {\n      handler: function(newValue) {\n        console.log(newValue.servicio);\n      },\n      deep: true,\n    },\n\n    valuesUbicacion(newValue, oldValue) {\n      if (\n        newValue.departamento &&\n        newValue.departamento != oldValue.departamento\n      ) {\n        this.valuesUbicacion.ciudad = \"\";\n        this.consultaCiudad(newValue.departamento);\n      }\n    },\n  },\n\n  components: {\n    FullBoxVue,\n    BlitzForm,\n    MiddleBox,\n    searchUserVue,\n  },\n};\n</script>\n\n<style scoped>\ndiv {\n  width: 100%;\n}\n\nVTextField {\n  border: 2px solid #8c939d !important;\n}\n\nVSelect {\n  border: 2px solid #8c939d !important;\n  border-radius: 10px;\n  padding: 2px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}