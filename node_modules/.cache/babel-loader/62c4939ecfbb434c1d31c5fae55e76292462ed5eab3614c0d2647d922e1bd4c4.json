{"ast":null,"code":"import FullBoxVue from \"../components/static/FullBox.vue\";\nimport { updatePasswordWithOld } from \"@/api\";\nexport default {\n  components: {\n    FullBoxVue\n  },\n  data() {\n    return {\n      contrasenaAntigua: \"\",\n      contrasenaNueva: \"\",\n      contrasenaNuevaValidacion: \"\"\n    };\n  },\n  methods: {\n    actualizarContrasena() {\n      const validateForm = this.$refs.form.validate();\n      if (validateForm) {\n        this.loading = true;\n        this.alertError = false;\n        updatePasswordWithOld({\n          contrasenaAntigua: this.contrasenaAntigua,\n          contrasenaNueva: this.contrasenaNueva,\n          contrasenaNuevaValidacion: this.contrasenaNuevaValidacion\n        }).then(function (response) {\n          if (response.data == \"\") {\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: toast => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              }\n            });\n            Toast.fire({\n              icon: \"success\",\n              title: \"Contraseña cambiada correctamente, por favor, vuelva a iniciar sesión.\"\n            });\n            localStorage.removeItem(\"userTkn\");\n            setTimeout('document.location.reload()', 1000);\n          } else {\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: toast => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              }\n            });\n            Toast.fire({\n              icon: \"error\",\n              title: \"Contraseñas no coinciden\"\n            });\n          }\n        }.bind(this)).catch(function (error) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: toast => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            }\n          });\n          Toast.fire({\n            icon: \"error\",\n            title: \"Error al cambiar la contraseña.\"\n          });\n        }.bind(this));\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA+CA;AACA;AAEA;EACAA;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;MACA;QACA;QACA;QACAC;UACAL;UACAC;UACAC;QACA,GACAI,KACA;UACA;YACA;cACAC;cACAC;cACAC;cACAC;cACAC;cACAC;gBACAL;gBACAA;cACA;YACA;YACAM;cACAC;cACAC;YACA;YACAC;YACAC;UACA;YACA;cACAV;cACAC;cACAC;cACAC;cACAC;cACAC;gBACAL;gBACAA;cACA;YACA;YACAM;cACAC;cACAC;YACA;UACA;QACA,aACA,CACAG,MACA;UACA;YACAX;YACAC;YACAC;YACAC;YACAC;YACAC;cACAL;cACAA;YACA;UACA;UACAM;YACAC;YACAC;UACA;QACA,aACA;MACA;IACA;EACA;AACA","names":["components","FullBoxVue","data","contrasenaAntigua","contrasenaNueva","contrasenaNuevaValidacion","methods","actualizarContrasena","updatePasswordWithOld","then","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","Toast","icon","title","localStorage","setTimeout","catch"],"sourceRoot":"src/views","sources":["opcionesUserView.vue"],"sourcesContent":["<template>\n  <FullBoxVue class=\"shadowHover\">\n    <h1>Actualizar contraseña</h1>\n    <br />\n    <br><br>\n    <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n          <v-container>\n            <v-row>\n              <v-col cols=\"12\" md=\"12\">\n                <v-text-field\n                  v-model=\"contrasenaAntigua\"\n                  label=\"Ingrese contraseña antigua\"\n                  type=\"password\"\n                  :rules=\"rulesRequired\"\n                  required\n                ></v-text-field>\n              </v-col>\n\n              <v-col cols=\"12\" md=\"12\">\n                <v-text-field\n                  v-model=\"contrasenaNueva\"\n                  :rules=\"rulesRequired\"\n                  label=\"Ingrese nueva contraseña\"\n                  type=\"password\"\n                  required\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\" md=\"12\">\n                <v-text-field\n                  v-model=\"contrasenaNuevaValidacion\"\n                  :rules=\"rulesRequired\"\n                  label=\"Vuelva a ingresar nueva contraseña\"\n                  type=\"password\"\n                  required\n                ></v-text-field>\n              </v-col>\n            </v-row>\n          </v-container>\n\n          <v-btn color=\"primary\" @click=\"actualizarContrasena\">\n              Actualizar Contraseña\n            </v-btn>\n        </v-form>\n  </FullBoxVue>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { updatePasswordWithOld } from \"@/api\"\n\nexport default {\n  components: {\n    FullBoxVue,\n  },\n  data() {\n    return {\n      contrasenaAntigua: \"\",\n      contrasenaNueva: \"\",\n      contrasenaNuevaValidacion: \"\"\n    };\n  },\n\n  methods: {\n    actualizarContrasena() {\n      const validateForm = this.$refs.form.validate();\n      if (validateForm) {\n        this.loading = true;\n        this.alertError = false;\n        updatePasswordWithOld({\n          contrasenaAntigua: this.contrasenaAntigua,\n          contrasenaNueva: this.contrasenaNueva,\n          contrasenaNuevaValidacion: this.contrasenaNuevaValidacion\n        })\n          .then(\n            function (response) {\n              if(response.data == \"\"){\n              const Toast = this.$swal.mixin({\n                toast: true,\n                position: \"top-end\",\n                showConfirmButton: false,\n                timer: 3000,\n                timerProgressBar: true,\n                didOpen: (toast) => {\n                  toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                  toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n                },\n              });\n              Toast.fire({\n                icon: \"success\",\n                title: \"Contraseña cambiada correctamente, por favor, vuelva a iniciar sesión.\",\n              });\n              localStorage.removeItem(\"userTkn\");\n              setTimeout('document.location.reload()',1000);\n            }else{\n              const Toast = this.$swal.mixin({\n                toast: true,\n                position: \"top-end\",\n                showConfirmButton: false,\n                timer: 3000,\n                timerProgressBar: true,\n                didOpen: (toast) => {\n                  toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                  toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n                },\n              });\n              Toast.fire({\n                icon: \"error\",\n                title: \"Contraseñas no coinciden\",\n              });\n            }\n            }.bind(this)\n          )\n          .catch(\n            function (error) {\n              const Toast = this.$swal.mixin({\n                toast: true,\n                position: \"top-end\",\n                showConfirmButton: false,\n                timer: 3000,\n                timerProgressBar: true,\n                didOpen: (toast) => {\n                  toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                  toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n                },\n              });\n              Toast.fire({\n                icon: \"error\",\n                title: \"Error al cambiar la contraseña.\",\n              });\n            }.bind(this)\n          );\n      }\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}