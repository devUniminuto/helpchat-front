{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport { getArchivosCandidato, subirArchivosCandidato, getPeticionCandidato, downloadFile, eliminarArchivosCandidato, finalizarSubirArchivosCandidato, updateObservacionesArchivoInd } from \"@/api\";\nexport default {\n  data() {\n    return {\n      idSolicitudRef: \"\",\n      infoSolicitud: {},\n      infoSolicitudCandidatos: {},\n      componentKey: 1,\n      estadoSolicitud: null,\n      estados: null,\n      idSolicitud: this.$route.params.id,\n      archivosSubidos: [],\n      Images: null,\n      valido: false,\n      userSearchSelected: [],\n      userSearch: [],\n      datosWCandidato: {},\n      archivosRequeridos: [],\n      archivosSeleccionados: []\n    };\n  },\n  methods: {\n    actualizarComponente() {\n      this.componentKey += 1;\n    },\n    actualizarComentariosArchivo(id, comentarios) {\n      let bodySol = {\n        observacionesAnalistaProveedor: comentarios,\n        idSolicitud: id\n      };\n      updateObservacionesArchivoInd(bodySol);\n    },\n    onFileChange(event, index) {\n      let file = event.target.files[0];\n      this.archivosSeleccionados[index] = file;\n    },\n    finalizarSubirArchivos() {\n      finalizarSubirArchivosCandidato(this.idSolicitudRef).then(function (response) {\n        window.location.reload();\n      }.bind(this));\n    },\n    realizarConsultaArchivos() {\n      for (let i = 0; i < this.archivosRequeridos.length; i++) {\n        this.archivosSeleccionados.push({});\n      }\n      for (let i = 0; i < this.archivosRequeridos.length; i++) {\n        getArchivosCandidato(this.idSolicitudRef, this.archivosRequeridos[i]).then(function (response) {\n          this.archivosRequeridos[i] = {\n            nombre: this.archivosRequeridos[i],\n            archivosSubidos: response.data\n          };\n          this.actualizarComponente();\n        }.bind(this));\n      }\n    },\n    eliminarArchivo(id) {\n      eliminarArchivosCandidato(id).then(function (response) {\n        this.realizarConsultaArchivos();\n      }.bind(this));\n    },\n    realizarConsulta() {\n      getPeticionCandidato(this.idSolicitud).then(function (response) {\n        try {\n          this.idSolicitudRef = response.data.id;\n          this.datosWCandidato = response.data;\n          this.archivosRequeridos = [];\n          this.archivosRequeridos = this.datosWCandidato.DOCUMENTOS_REQUERIDOS.split(\"\\n\");\n          this.realizarConsultaArchivos();\n          if (this.idSolicitudRef != undefined) {\n            this.valido = true;\n            this.componentKey += 1;\n          }\n        } catch {\n          this.valido = false;\n        }\n      }.bind(this));\n    },\n    subirArchivo(index, descripcion) {\n      const formData = new FormData();\n      formData.append(\"file\", this.archivosSeleccionados[index]);\n      formData.append(\"idSolicitud\", this.idSolicitudRef);\n      formData.append(\"descripcion\", descripcion);\n      subirArchivosCandidato(formData).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"success\",\n          title: \"Solicitud enviada exitosamente\"\n        });\n        window.location.reload();\n      }.bind(this));\n    },\n    descargarArchivos(filepath, fileName) {\n      downloadFile(filepath).then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", fileName);\n        document.body.appendChild(link);\n        link.click();\n      });\n    }\n  },\n  mounted() {\n    this.realizarConsulta();\n  },\n  components: {\n    FullBoxVue,\n    MiddleBox\n  }\n};","map":{"version":3,"mappings":";AAsGA;AACA;AACA,SACAA,sBACAC,wBACAC,sBACAC,cACAC,2BACAC,iCACAC,qCACA;AACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;IACA;IAEAC;MACA;QACAC;QACAZ;MACA;MACAR;IACA;IAEAqB;MACA;MACA;IACA;IAEAC;MACAvB,0DACA;QACAwB;MACA,aACA;IACA;IAEAC;MACA;QACA;MACA;MACA;QACA9B,qBACA,qBACA,2BACA,MACA;UACA;YACA+B;YACAhB;UACA;UACA;QACA,aACA;MACA;IACA;IAEAiB;MACA5B,mCACA;QACA;MACA,aACA;IACA;IAEA6B;MACA/B,4CACA;QACA;UACA;UACA;UACA;UACA,0BACA;UAEA;UACA;YACA;YACA;UACA;QACA;UACA;QACA;MACA,aACA;IACA;IAEAgC;MACA;MACAC;MACAA;MACAA;MAEAlC,sCACA;QACA;UACAmC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC;QACA;QACAf;MACA,aACA;IACA;IAEAgB;MACA1C;QACA;QACA;QACA2C;QACAA;QACAC;QACAD;MACA;IACA;EACA;EAEAE;IACA;EACA;EAEAC;IACAC;IACAC;EACA;AACA","names":["getArchivosCandidato","subirArchivosCandidato","getPeticionCandidato","downloadFile","eliminarArchivosCandidato","finalizarSubirArchivosCandidato","updateObservacionesArchivoInd","data","idSolicitudRef","infoSolicitud","infoSolicitudCandidatos","componentKey","estadoSolicitud","estados","idSolicitud","archivosSubidos","Images","valido","userSearchSelected","userSearch","datosWCandidato","archivosRequeridos","archivosSeleccionados","methods","actualizarComponente","actualizarComentariosArchivo","observacionesAnalistaProveedor","onFileChange","finalizarSubirArchivos","window","realizarConsultaArchivos","nombre","eliminarArchivo","realizarConsulta","subirArchivo","formData","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","Toast","icon","title","descargarArchivos","link","document","mounted","components","FullBoxVue","MiddleBox"],"sourceRoot":"src/views","sources":["subirDatosEvaluadoView.vue"],"sourcesContent":["<template>\n  <div :key=\"componentKey\" v-if=\"valido\">\n    <FullBoxVue>\n      <h1>¡Hola {{ datosWCandidato.nombreCandidato }}!</h1>\n      <br />\n      <p>\n        Por favor suba los archivos relacionados con la solicitud del servicio\n        {{ datosWCandidato.NOMBRE_SERVICIO }}/{{\n          datosWCandidato.NOMBRE_SUBSERVICIO\n        }}\n      </p>\n    </FullBoxVue>\n    <FullBoxVue class=\"shadowHover\">\n      <div>\n        <h1>Subir los archivos requeridos</h1>\n      </div>\n    </FullBoxVue>\n    <FullBoxVue class=\"shadowHover\">\n      <div v-for=\"(archivo, index) in archivosRequeridos\" :key=\"index\">\n        <h2>{{ archivo.nombre }}</h2>\n        <input type=\"file\" @change=\"onFileChange($event, index)\" />\n        &nbsp;\n        <v-btn color=\"success\" @click=\"subirArchivo(index, archivo.nombre)\"\n          >Subir archivo</v-btn\n        >\n\n        <v-container>\n          <h2>Archivos subidos</h2>\n          Pulse encima del archivo para descargar\n          <br /><br />\n          <v-row dense>\n            <v-col\n              v-for=\"(archivoSubido, index) in archivo.archivosSubidos\"\n              :key=\"index\"\n            >\n              <v-card class=\"archivo shadowHover\">\n                <v-btn\n                  color=\"pink\"\n                  fab\n                  dark\n                  small\n                  absolute\n                  top\n                  left\n                  @click=\"eliminarArchivo(archivoSubido.id)\"\n                >\n                  <v-icon>mdi-close</v-icon>\n                </v-btn>\n                <div\n                  @click=\"\n                    descargarArchivos(\n                      archivoSubido.archivo,\n                      archivoSubido.nombreArchivo\n                    )\n                  \"\n                  class=\"\"\n                >\n                  <v-icon size=\"100px\"> mdi-file-chart </v-icon>\n                  <br />\n                  {{ archivoSubido.nombreArchivo }}\n                  <br />\n                  <h6>Fecha subida: {{ archivoSubido.creado }}</h6>\n                  <h6>Subido por: {{ archivoSubido.subidoPor }}</h6>\n                </div>\n                <v-textarea\n                  v-model=\"archivoSubido.comentarios\"\n                  label=\"Observaciones\"\n                  @change=\"\n                    actualizarComentariosArchivo(\n                      archivoSubido.id,\n                      archivoSubido.comentarios\n                    )\n                  \"\n                ></v-textarea>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n        <br />\n        <hr />\n        <br />\n      </div>\n    </FullBoxVue>\n    <FullBoxVue>\n      Pulse el siguiente botón sólo cuando\n      <b>esté seguro que subió los archivos necesarios</b>.\n\n      <br />\n      <v-btn color=\"error\" @click=\"finalizarSubirArchivos()\"\n        >Finalizar proceso de subir archivos</v-btn\n      >\n    </FullBoxVue>\n  </div>\n  <div v-else>\n    <br /><br />\n    <FullBoxVue>\n      <h1>¡Este enlace no es válido!</h1>\n    </FullBoxVue>\n  </div>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport {\n  getArchivosCandidato,\n  subirArchivosCandidato,\n  getPeticionCandidato,\n  downloadFile,\n  eliminarArchivosCandidato,\n  finalizarSubirArchivosCandidato,\n  updateObservacionesArchivoInd,\n} from \"@/api\";\nexport default {\n  data() {\n    return {\n      idSolicitudRef: \"\",\n      infoSolicitud: {},\n      infoSolicitudCandidatos: {},\n      componentKey: 1,\n      estadoSolicitud: null,\n      estados: null,\n      idSolicitud: this.$route.params.id,\n      archivosSubidos: [],\n      Images: null,\n      valido: false,\n      userSearchSelected: [],\n      userSearch: [],\n      datosWCandidato: {},\n      archivosRequeridos: [],\n      archivosSeleccionados: [],\n    };\n  },\n\n  methods: {\n    actualizarComponente() {\n      this.componentKey += 1;\n    },\n\n    actualizarComentariosArchivo(id, comentarios) {\n      let bodySol = {\n        observacionesAnalistaProveedor: comentarios,\n        idSolicitud: id,\n      };\n      updateObservacionesArchivoInd(bodySol);\n    },\n\n    onFileChange(event, index) {\n      let file = event.target.files[0];\n      this.archivosSeleccionados[index] = file;\n    },\n\n    finalizarSubirArchivos() {\n      finalizarSubirArchivosCandidato(this.idSolicitudRef).then(\n        function (response) {\n          window.location.reload();\n        }.bind(this)\n      );\n    },\n\n    realizarConsultaArchivos() {\n      for (let i = 0; i < this.archivosRequeridos.length; i++) {\n        this.archivosSeleccionados.push({});\n      }\n      for (let i = 0; i < this.archivosRequeridos.length; i++) {\n        getArchivosCandidato(\n          this.idSolicitudRef,\n          this.archivosRequeridos[i]\n        ).then(\n          function (response) {\n            this.archivosRequeridos[i] = {\n              nombre: this.archivosRequeridos[i],\n              archivosSubidos: response.data,\n            };\n            this.actualizarComponente();\n          }.bind(this)\n        );\n      }\n    },\n\n    eliminarArchivo(id) {\n      eliminarArchivosCandidato(id).then(\n        function (response) {\n          this.realizarConsultaArchivos();\n        }.bind(this)\n      );\n    },\n\n    realizarConsulta() {\n      getPeticionCandidato(this.idSolicitud).then(\n        function (response) {\n          try {\n            this.idSolicitudRef = response.data.id;\n            this.datosWCandidato = response.data;\n            this.archivosRequeridos = [];\n            this.archivosRequeridos =\n              this.datosWCandidato.DOCUMENTOS_REQUERIDOS.split(\"\\n\");\n\n            this.realizarConsultaArchivos();\n            if (this.idSolicitudRef != undefined) {\n              this.valido = true;\n              this.componentKey += 1;\n            }\n          } catch {\n            this.valido = false;\n          }\n        }.bind(this)\n      );\n    },\n\n    subirArchivo(index, descripcion) {\n      const formData = new FormData();\n      formData.append(\"file\", this.archivosSeleccionados[index]);\n      formData.append(\"idSolicitud\", this.idSolicitudRef);\n      formData.append(\"descripcion\", descripcion);\n\n      subirArchivosCandidato(formData).then(\n        function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"success\",\n            title: \"Solicitud enviada exitosamente\",\n          });\n          window.location.reload();\n        }.bind(this)\n      );\n    },\n\n    descargarArchivos(filepath, fileName) {\n      downloadFile(filepath).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", fileName);\n        document.body.appendChild(link);\n        link.click();\n      });\n    },\n  },\n\n  mounted() {\n    this.realizarConsulta();\n  },\n\n  components: {\n    FullBoxVue,\n    MiddleBox,\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}