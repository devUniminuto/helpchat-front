{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport loadingCSS from \"../components/static/loadingCSS.vue\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\nimport { generarCertificadosSolicitudesFuncionario, previewCertificadosSolicitudes, getClientes, getEstadosPeticiones, getDepartamento, getCiudad, getAllCandidatos, getCoordinadores, getFunProv } from \"@/api\";\nexport default {\n  data() {\n    return {\n      componentKey: 0,\n      valid: true,\n      itemsSelected: 0,\n      userSearch: [],\n      funcionarioSearch: [],\n      candidatoSearch: [],\n      userSearchSelected: \"\",\n      candidatoSearchSelected: \"\",\n      coordinadoresSearchSelected: \"\",\n      funcionarioSearchSelected: \"\",\n      diasTranscurridos: \"\",\n      buscarTodosUsuarios: true,\n      buscarTodasFechas: true,\n      buscarTodasSolicitud: true,\n      buscarTodosDepartamentos: true,\n      buscarTodosCandidatos: true,\n      buscarTodosCoordinadores: true,\n      buscarTodosFuncionarios: true,\n      buscarDiasTranscurridos: true,\n      rangoFechas: [],\n      estadoSolicitud: null,\n      schemaUbicacion: [],\n      valuesUbicacion: {\n        departamento: \"\",\n        ciudad: \"\"\n      },\n      estados: null,\n      headers: [{\n        text: \"Id Solicitud\",\n        value: \"id\"\n      }, {\n        text: \"Año\",\n        value: \"anio\"\n      }, {\n        text: \"Mes\",\n        value: \"mesCreado\"\n      }, {\n        text: \"Fecha solicitud\",\n        value: \"fecha_creado\"\n      }, {\n        text: \"Fecha hoy\",\n        value: \"fecha_actual\"\n      }, {\n        text: \"Días transcurridos\",\n        value: \"diastranscurridos\"\n      }, {\n        text: \"Departamento\",\n        value: \"departamento\"\n      }, {\n        text: \"Ciudad\",\n        value: \"ciudad\"\n      }, {\n        text: \"Empresa\",\n        value: \"nombreEmpresa\"\n      }, {\n        text: \"Nombre Cliente\",\n        value: \"nombreCliente\"\n      }, {\n        text: \"Nombre Servicio\",\n        value: \"servicio\"\n      }, {\n        text: \"Nombre Subservicio\",\n        value: \"subservicio\"\n      }, {\n        text: \"Nombre Candidato\",\n        value: \"nombreCandidato\"\n      }, {\n        text: \"Dirección Candidato\",\n        value: \"direccion\"\n      }, {\n        text: \"# Documento Candidato\",\n        value: \"numDocCandidato\"\n      }, {\n        text: \"Teléfono Candidato\",\n        value: \"numTelCandidato\"\n      }, {\n        text: \"Coordinador(es) asignado(s)\",\n        value: \"coordinadores\"\n      }, {\n        text: \"Analista(s) asignado(s)\",\n        value: \"encargados\"\n      }, {\n        text: \"Estado solicitud\",\n        value: \"estado\"\n      }, {\n        text: \"Fecha fin\",\n        value: \"updated\"\n      }, {\n        text: \"Observaciones Cliente\",\n        value: \"observacionesCandidato\"\n      }, {\n        text: \"Observaciones Analista\",\n        value: \"observaciones\"\n      }],\n      peticiones: [],\n      search: \"\",\n      loadingTable: true\n    };\n  },\n  methods: {\n    recargarFormulario() {\n      this.componentKey += 1;\n    },\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n    candidatoSearchSelectedFunc(values) {\n      this.candidatoSearchSelected = values;\n    },\n    coordinadoresSearchSelectedFunc(values) {\n      this.coordinadoresSearchSelected = values;\n    },\n    funcionarioSearchSelectedFunc(values) {\n      this.funcionarioSearchSelected = values;\n    },\n    consultaCiudad(id) {\n      getCiudad(id).then(function (response) {\n        const indice = 1;\n        if (response.data.length > 0) {\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"Seleccione la ciudad\",\n            disabled: true\n          };\n          const options = [itemsOptionsTemplate];\n          for (let i = 0; i < response.data.length; i++) {\n            // Solución planteada así por un error de referencia de memoria\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"\"\n            };\n            const subTemplate = itemsOptionsTemplate;\n            itemsOptionsTemplate.value = response.data[i].ID_CIUDAD;\n            subTemplate.text = response.data[i].NOMBRE_CIUDAD;\n            options.push(subTemplate);\n          }\n          if (this.schemaUbicacion[indice] == null) {\n            this.schemaUbicacion.splice(indice, 0, {\n              id: \"ciudad\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Ciudad\",\n              items: options\n            });\n          } else {\n            this.schemaUbicacion[indice] = {\n              id: \"ciudad\",\n              span: true,\n              component: \"VSelect\",\n              label: \"Ciudad\",\n              items: options\n            };\n            this.recargarFormulario();\n          }\n        } else {\n          this.schemaUbicacion.splice(indice, 1);\n        }\n      }.bind(this));\n    },\n    descargarCertificadoPDF() {\n      let body = {\n        archivo: \"pdf\",\n        buscarTodosUsuarios: this.buscarTodosUsuarios,\n        buscarTodasFechas: this.buscarTodasFechas,\n        buscarTodasSolicitud: this.buscarTodasSolicitud,\n        buscarTodosDepartamentos: this.buscarTodosDepartamentos,\n        buscarTodosCandidatos: this.buscarTodosCandidatos,\n        buscarTodosCoordinadores: this.buscarTodosCoordinadores,\n        buscarTodosFuncionarios: this.buscarTodosFuncionarios,\n        diasTranscurridos: this.diasTranscurridos,\n        userSearchSelected: this.userSearchSelected,\n        rangoFechas: this.rangoFechas,\n        estadoSolicitud: this.estadoSolicitud,\n        valuesUbicacion: this.valuesUbicacion,\n        candidatoSearchSelected: this.candidatoSearchSelected,\n        coordinadoresSearchSelected: this.coordinadoresSearchSelected,\n        funcionarioSearchSelected: this.funcionarioSearchSelected,\n        buscarDiasTranscurridos: this.buscarDiasTranscurridos\n      };\n      generarCertificadosSolicitudesFuncionario(body).then(response => {\n        const linkSource = `data:application/pdf;base64,${response.data}`;\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = linkSource;\n        downloadLink.download = \"test.pdf\";\n        downloadLink.click();\n      });\n    },\n    descargarCertificadoXLS() {\n      let body = {\n        archivo: \"excel\",\n        buscarTodosUsuarios: this.buscarTodosUsuarios,\n        buscarTodasFechas: this.buscarTodasFechas,\n        buscarTodasSolicitud: this.buscarTodasSolicitud,\n        buscarTodosDepartamentos: this.buscarTodosDepartamentos,\n        buscarTodosCandidatos: this.buscarTodosCandidatos,\n        buscarTodosCoordinadores: this.buscarTodosCoordinadores,\n        buscarTodosFuncionarios: this.buscarTodosFuncionarios,\n        diasTranscurridos: this.diasTranscurridos,\n        userSearchSelected: this.userSearchSelected,\n        rangoFechas: this.rangoFechas,\n        estadoSolicitud: this.estadoSolicitud,\n        valuesUbicacion: this.valuesUbicacion,\n        candidatoSearchSelected: this.candidatoSearchSelected,\n        coordinadoresSearchSelected: this.coordinadoresSearchSelected,\n        funcionarioSearchSelected: this.funcionarioSearchSelected,\n        buscarDiasTranscurridos: this.buscarDiasTranscurridos\n      };\n      generarCertificadosSolicitudesFuncionario(body).then(response => {\n        let blob = new Blob([response.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        });\n\n        // Let's create a link in the document that we'll\n        // programmatically 'click'.\n        const link = document.createElement(\"a\");\n\n        // Tell the browser to associate the response data to\n        // the URL of the link we created above.\n        link.href = window.URL.createObjectURL(blob);\n\n        // Tell the browser to download, not render, the file.\n        link.setAttribute(\"download\", \"Certificado de solicitudes de usuarios.xlsx\");\n\n        // Place the link in the DOM.\n        document.body.appendChild(link);\n\n        // Make the magic happen!\n        link.click();\n      });\n    },\n    realizarConsultaEstados() {\n      getEstadosPeticiones().then(function (response) {\n        this.estados = response.data;\n      }.bind(this));\n    },\n    changeForm() {\n      this.loadingTable = true;\n      let body = {\n        buscarTodosUsuarios: this.buscarTodosUsuarios,\n        buscarTodasFechas: this.buscarTodasFechas,\n        buscarTodasSolicitud: this.buscarTodasSolicitud,\n        buscarTodosDepartamentos: this.buscarTodosDepartamentos,\n        buscarTodosCandidatos: this.buscarTodosCandidatos,\n        buscarTodosCoordinadores: this.buscarTodosCoordinadores,\n        buscarTodosFuncionarios: this.buscarTodosFuncionarios,\n        diasTranscurridos: this.diasTranscurridos,\n        userSearchSelected: this.userSearchSelected,\n        rangoFechas: this.rangoFechas,\n        estadoSolicitud: this.estadoSolicitud,\n        valuesUbicacion: this.valuesUbicacion,\n        candidatoSearchSelected: this.candidatoSearchSelected,\n        coordinadoresSearchSelected: this.coordinadoresSearchSelected,\n        funcionarioSearchSelected: this.funcionarioSearchSelected,\n        buscarDiasTranscurridos: this.buscarDiasTranscurridos\n      };\n      previewCertificadosSolicitudes(body).then(response => {\n        this.peticiones = response.data;\n        this.loadingTable = false;\n      });\n    }\n  },\n  mounted() {\n    getClientes().then(function (response) {\n      this.userSearch = response.data;\n    }.bind(this));\n    getCoordinadores().then(function (response) {\n      this.coordinadoresSearch = response.data;\n    }.bind(this));\n    getAllCandidatos().then(function (response) {\n      this.candidatoSearch = response.data;\n    }.bind(this));\n    getFunProv().then(function (response) {\n      let funcionarioSearch = [];\n      for (let user in response.data) {\n        funcionarioSearch.push({\n          id: response.data[user].id,\n          nombre: response.data[user].nombre\n        });\n      }\n      this.funcionarioSearch = funcionarioSearch;\n    }.bind(this));\n    this.realizarConsultaEstados();\n    this.changeForm();\n    getDepartamento().then(function (response) {\n      const indice = 0;\n      const totalForms = 5;\n      const itemsOptionsTemplate = {\n        value: \"\",\n        text: \"Seleccione el departamento\",\n        disabled: true\n      };\n      const options = [itemsOptionsTemplate];\n      for (let i = 0; i < response.data.length; i++) {\n        // Solución planteada así por un error de referencia de memoria\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"\"\n        };\n        const subTemplate = itemsOptionsTemplate;\n        itemsOptionsTemplate.value = response.data[i].ID_DEPARTAMENTO;\n        subTemplate.text = response.data[i].NOMBRE_DEPARTAMENTO;\n        options.push(subTemplate);\n      }\n      if (this.schemaUbicacion[indice] == null) {\n        this.schemaUbicacion.splice(indice, 0, {\n          id: \"departamento\",\n          span: true,\n          component: \"VSelect\",\n          label: \"Departamento\",\n          items: options\n        });\n      } else {\n        this.schemaUbicacion[indice] = {\n          id: \"departamento\",\n          span: true,\n          component: \"VSelect\",\n          label: \"Departamento\",\n          items: options\n        };\n      }\n      this.recargarFormulario();\n    }.bind(this));\n  },\n  watch: {\n    userSearchSelected(newState) {\n      this.changeForm();\n    },\n    candidatoSearchSelected(newState) {\n      this.changeForm();\n    },\n    coordinadoresSearchSelected(newState) {\n      this.changeForm();\n    },\n    funcionarioSearchSelected(newState) {\n      this.changeForm();\n    },\n    diasTranscurridos(newState) {\n      this.changeForm();\n    },\n    valuesUbicacion(newValue, oldValue) {\n      if (newValue.departamento && newValue.departamento != oldValue.departamento) {\n        this.valuesUbicacion.ciudad = \"\";\n        this.consultaCiudad(newValue.departamento);\n      }\n      this.changeForm();\n    }\n  },\n  components: {\n    FullBoxVue,\n    MiddleBox,\n    searchUserMultipleVue,\n    BlitzForm,\n    loadingCSS\n  }\n};","map":{"version":3,"mappings":";AAyIA;AACA;AACA;AACA;AAGA;AAEA,SACAA,2CACAC,gCACAC,aACAC,sBACAC,iBACAC,WACAC,kBACAC,kBACAC,kBACA;AAEA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA3C,mBACA;QACA;QACA;UACA;YACAiC;YACAD;YACAY;UACA;UAEA;UAEA;YACA;YACA;cACAX;cACAD;YACA;YACA;YACAa;YACAC;YACAC;UACA;UAEA;YACA;cACAC;cACAC;cACAC;cACAC;cACAC;YACA;UACA;YACA;cACAJ;cACAC;cACAC;cACAC;cACAC;YACA;YAEA;UACA;QACA;UACA;QACA;MACA,aACA;IACA;IAEAC;MACA;QACAC;QACAtC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAP;QACAJ;QACAa;QACAC;QACAE;QACAf;QACAC;QACAC;QACAS;MACA;MAEA5B;QACA;QACA;QACA4D;QACAA;QACAA;MACA;IACA;IAEAC;MACA;QACAF;QACAtC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAP;QACAJ;QACAa;QACAC;QACAE;QACAf;QACAC;QACAC;QACAS;MACA;MAEA5B;QACA;UACA8D;QACA;;QAEA;QACA;QACA;;QAEA;QACA;QACAC;;QAEA;QACAA,kBACA,YACA,8CACA;;QAEA;QACAC;;QAEA;QACAD;MACA;IACA;IAEAE;MACA9D,4BACA;QACA;MACA,aACA;IACA;IAEA+D;MACA;MACA;QACA7C;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAP;QACAJ;QACAa;QACAC;QACAE;QACAf;QACAC;QACAC;QACAS;MACA;MAEA3B;QACA;QACA;MACA;IACA;EACA;EAEAkE;IACAjE,mBACA;MACA;IACA,aACA;IACAK,wBACA;MACA;IACA,aACA;IACAD,wBACA;MACA;IACA,aACA;IAEAE,kBACA;MACA;MACA;QACAM;UACAuC;UACAe;QACA;MACA;MACA;IACA,aACA;IAEA;IACA;IACAhE,uBACA;MACA;MACA;MACA;QACAkC;QACAD;QACAY;MACA;MAEA;MAEA;QACA;QACA;UACAX;UACAD;QACA;QACA;QACAa;QACAC;QACAC;MACA;MAEA;QACA;UACAC;UACAC;UACAC;UACAC;UACAC;QACA;MACA;QACA;UACAJ;UACAC;UACAC;UACAC;UACAC;QACA;MACA;MACA;IACA,aACA;EACA;EAEAY;IACArD;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAKAY;MACA,IACAsC,yBACAA,gDACA;QACA;QACA;MACA;MACA;IACA;EACA;EAEAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;AACA","names":["generarCertificadosSolicitudesFuncionario","previewCertificadosSolicitudes","getClientes","getEstadosPeticiones","getDepartamento","getCiudad","getAllCandidatos","getCoordinadores","getFunProv","data","componentKey","valid","itemsSelected","userSearch","funcionarioSearch","candidatoSearch","userSearchSelected","candidatoSearchSelected","coordinadoresSearchSelected","funcionarioSearchSelected","diasTranscurridos","buscarTodosUsuarios","buscarTodasFechas","buscarTodasSolicitud","buscarTodosDepartamentos","buscarTodosCandidatos","buscarTodosCoordinadores","buscarTodosFuncionarios","buscarDiasTranscurridos","rangoFechas","estadoSolicitud","schemaUbicacion","valuesUbicacion","departamento","ciudad","estados","headers","text","value","peticiones","search","loadingTable","methods","recargarFormulario","userSearchSelectedFunc","candidatoSearchSelectedFunc","coordinadoresSearchSelectedFunc","funcionarioSearchSelectedFunc","consultaCiudad","disabled","itemsOptionsTemplate","subTemplate","options","id","span","component","label","items","descargarCertificadoPDF","archivo","downloadLink","descargarCertificadoXLS","type","link","document","realizarConsultaEstados","changeForm","mounted","nombre","watch","newValue","components","FullBoxVue","MiddleBox","searchUserMultipleVue","BlitzForm","loadingCSS"],"sourceRoot":"src/views","sources":["CertificadosSolicitudesFuncionarioView.vue"],"sourcesContent":["<template>\n  <div :key=\"componentKey\">\n    <FullBoxVue class=\"shadowHover\">\n      <h1>Descargar informes</h1>\n    </FullBoxVue>\n    <MiddleBox class=\"shadowHover\">\n      <h3>Parámetros de descarga</h3>\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        Solicitudes de usuarios\n        <v-checkbox\n          v-model=\"buscarTodosUsuarios\"\n          :label=\"`Obtener información de todos los usuarios disponibles`\"\n          @change=\"changeForm()\"\n        ></v-checkbox>\n        <searchUserMultipleVue\n          v-if=\"!buscarTodosUsuarios\"\n          v-bind:people=\"userSearch\"\n          @selected=\"userSearchSelectedFunc\"\n          @change=\"changeForm()\"\n        ></searchUserMultipleVue>\n        <v-checkbox\n          v-model=\"buscarTodasFechas\"\n          :label=\"`Buscar por todas las fechas`\"\n          @change=\"changeForm()\"\n        ></v-checkbox>\n        <div v-if=\"!buscarTodasFechas\">\n          <v-date-picker\n            v-model=\"rangoFechas\"\n            @change=\"changeForm()\"\n            range\n          ></v-date-picker>\n        </div>\n\n        <v-checkbox\n          v-model=\"buscarTodasSolicitud\"\n          :label=\"`Buscar por todos los estados de solicitudes`\"\n          @change=\"changeForm()\"\n        ></v-checkbox>\n        <v-select\n          v-if=\"!buscarTodasSolicitud\"\n          v-model=\"estadoSolicitud\"\n          :items=\"estados\"\n          item-text=\"nombre\"\n          item-value=\"id\"\n          label=\"Estado\"\n          @change=\"changeForm()\"\n        ></v-select>\n\n        <v-checkbox\n          v-model=\"buscarTodosDepartamentos\"\n          :label=\"`Buscar por todos los departamentos`\"\n          @change=\"changeForm()\"\n        ></v-checkbox>\n        <BlitzForm\n          v-if=\"!buscarTodosDepartamentos\"\n          :schema=\"schemaUbicacion\"\n          v-model=\"valuesUbicacion\"\n          gridGap=\"0\"\n          labelPosition=\"left\"\n        />\n\n        <v-checkbox\n          v-model=\"buscarTodosCandidatos\"\n          :label=\"`Buscar por todos los candidatos`\"\n          @change=\"changeForm()\"\n        ></v-checkbox>\n        <searchUserMultipleVue\n          v-if=\"!buscarTodosCandidatos\"\n          v-bind:people=\"candidatoSearch\"\n          @selected=\"candidatoSearchSelectedFunc\"\n        ></searchUserMultipleVue>\n        <div v-if=\"$dataUser[0].rol == 'Admin'\">\n          <v-checkbox\n            v-model=\"buscarTodosCoordinadores\"\n            :label=\"`Buscar por todos los coordinadores`\"\n            @change=\"changeForm()\"\n          ></v-checkbox>\n          <searchUserMultipleVue\n            v-if=\"!buscarTodosCoordinadores\"\n            v-bind:people=\"coordinadoresSearch\"\n            @selected=\"coordinadoresSearchSelectedFunc\"\n          ></searchUserMultipleVue>\n\n          <v-checkbox\n            v-model=\"buscarTodosFuncionarios\"\n            :label=\"`Buscar por todos los funcionarios`\"\n            @change=\"changeForm()\"\n          ></v-checkbox>\n          <searchUserMultipleVue\n            v-if=\"!buscarTodosFuncionarios\"\n            v-bind:people=\"funcionarioSearch\"\n            @selected=\"funcionarioSearchSelectedFunc\"\n          ></searchUserMultipleVue>\n        </div>\n        <v-checkbox\n          v-model=\"buscarDiasTranscurridos\"\n          :label=\"`Buscar por todos los días transcurridos`\"\n          @change=\"changeForm()\"\n        ></v-checkbox>\n        <v-text-field\n          v-if=\"!buscarDiasTranscurridos\"\n          v-model=\"diasTranscurridos\"\n          label=\"Número de días transcurridos\"\n          type=\"number\"\n        ></v-text-field>\n      </v-form>\n    </MiddleBox>\n    <MiddleBox class=\"shadowHover\" v-if=\"!loadingTable && peticiones.length > 0 && Array.isArray(peticiones)\">\n      <v-btn color=\"success\" @click=\"descargarCertificadoPDF()\"\n        >Descargar certificado PDF</v-btn\n      >\n      <br /><br />\n      <v-btn color=\"success\" @click=\"descargarCertificadoXLS()\"\n        >Descargar certificado XLS (Excel)</v-btn\n      >\n    </MiddleBox>\n    <MiddleBox class=\"shadowHover\" v-else>\n      El informe no es válido para descargar.\n    </MiddleBox>\n    <FullBoxVue class=\"shadowHover\">\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"peticiones\"\n        :search=\"search\"\n        v-if=\"!loadingTable\"\n      ></v-data-table>\n      <div v-else>\n        <loadingCSS>\n          Se están creando las solicitudes... <br>\n          Esto puede tomar unos momentos\n        </loadingCSS>\n      </div>\n    </FullBoxVue>\n  </div>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport MiddleBox from \"@/components/static/MiddleBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport loadingCSS from \"../components/static/loadingCSS.vue\";\n\n\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\n\nimport {\n  generarCertificadosSolicitudesFuncionario,\n  previewCertificadosSolicitudes,\n  getClientes,\n  getEstadosPeticiones,\n  getDepartamento,\n  getCiudad,\n  getAllCandidatos,\n  getCoordinadores,\n  getFunProv,\n} from \"@/api\";\n\nexport default {\n  data() {\n    return {\n      componentKey: 0,\n      valid: true,\n      itemsSelected: 0,\n      userSearch: [],\n      funcionarioSearch: [],\n      candidatoSearch: [],\n      userSearchSelected: \"\",\n      candidatoSearchSelected: \"\",\n      coordinadoresSearchSelected: \"\",\n      funcionarioSearchSelected: \"\",\n      diasTranscurridos: \"\",\n      buscarTodosUsuarios: true,\n      buscarTodasFechas: true,\n      buscarTodasSolicitud: true,\n      buscarTodosDepartamentos: true,\n      buscarTodosCandidatos: true,\n      buscarTodosCoordinadores: true,\n      buscarTodosFuncionarios: true,\n      buscarDiasTranscurridos: true,\n      rangoFechas: [],\n      estadoSolicitud: null,\n      schemaUbicacion: [],\n      valuesUbicacion: {\n        departamento: \"\",\n        ciudad: \"\",\n      },\n      estados: null,\n      headers: [\n        { text: \"Id Solicitud\", value: \"id\" },\n        { text: \"Año\", value: \"anio\" },\n        { text: \"Mes\", value: \"mesCreado\" },\n        { text: \"Fecha solicitud\", value: \"fecha_creado\" },\n        { text: \"Fecha hoy\", value: \"fecha_actual\" },\n        { text: \"Días transcurridos\", value: \"diastranscurridos\" },\n        { text: \"Departamento\", value: \"departamento\" },\n        { text: \"Ciudad\", value: \"ciudad\" },\n        { text: \"Empresa\", value: \"nombreEmpresa\" },\n        { text: \"Nombre Cliente\", value: \"nombreCliente\" },\n        { text: \"Nombre Servicio\", value: \"servicio\" },\n        { text: \"Nombre Subservicio\", value: \"subservicio\" },\n        { text: \"Nombre Candidato\", value: \"nombreCandidato\" },\n        { text: \"Dirección Candidato\", value: \"direccion\" },\n        { text: \"# Documento Candidato\", value: \"numDocCandidato\" },\n        { text: \"Teléfono Candidato\", value: \"numTelCandidato\" },\n        { text: \"Coordinador(es) asignado(s)\", value: \"coordinadores\" },\n        { text: \"Analista(s) asignado(s)\", value: \"encargados\" },\n        { text: \"Estado solicitud\", value: \"estado\" },\n        { text: \"Fecha fin\", value: \"updated\" },\n        { text: \"Observaciones Cliente\", value: \"observacionesCandidato\" },\n        { text: \"Observaciones Analista\", value: \"observaciones\" },\n      ],\n      peticiones: [],\n      search: \"\",\n      loadingTable: true,\n    };\n  },\n\n  methods: {\n    recargarFormulario() {\n      this.componentKey += 1;\n    },\n    userSearchSelectedFunc(values) {\n      this.userSearchSelected = values;\n    },\n    candidatoSearchSelectedFunc(values) {\n      this.candidatoSearchSelected = values;\n    },\n\n    coordinadoresSearchSelectedFunc(values) {\n      this.coordinadoresSearchSelected = values;\n    },\n\n    funcionarioSearchSelectedFunc(values) {\n      this.funcionarioSearchSelected = values;\n    },\n\n    consultaCiudad(id) {\n      getCiudad(id).then(\n        function (response) {\n          const indice = 1;\n          if (response.data.length > 0) {\n            const itemsOptionsTemplate = {\n              value: \"\",\n              text: \"Seleccione la ciudad\",\n              disabled: true,\n            };\n\n            const options = [itemsOptionsTemplate];\n\n            for (let i = 0; i < response.data.length; i++) {\n              // Solución planteada así por un error de referencia de memoria\n              const itemsOptionsTemplate = {\n                value: \"\",\n                text: \"\",\n              };\n              const subTemplate = itemsOptionsTemplate;\n              itemsOptionsTemplate.value = response.data[i].ID_CIUDAD;\n              subTemplate.text = response.data[i].NOMBRE_CIUDAD;\n              options.push(subTemplate);\n            }\n\n            if (this.schemaUbicacion[indice] == null) {\n              this.schemaUbicacion.splice(indice, 0, {\n                id: \"ciudad\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Ciudad\",\n                items: options,\n              });\n            } else {\n              this.schemaUbicacion[indice] = {\n                id: \"ciudad\",\n                span: true,\n                component: \"VSelect\",\n                label: \"Ciudad\",\n                items: options,\n              };\n\n              this.recargarFormulario();\n            }\n          } else {\n            this.schemaUbicacion.splice(indice, 1);\n          }\n        }.bind(this)\n      );\n    },\n\n    descargarCertificadoPDF() {\n      let body = {\n        archivo: \"pdf\",\n        buscarTodosUsuarios: this.buscarTodosUsuarios,\n        buscarTodasFechas: this.buscarTodasFechas,\n        buscarTodasSolicitud: this.buscarTodasSolicitud,\n        buscarTodosDepartamentos: this.buscarTodosDepartamentos,\n        buscarTodosCandidatos: this.buscarTodosCandidatos,\n        buscarTodosCoordinadores: this.buscarTodosCoordinadores,\n        buscarTodosFuncionarios: this.buscarTodosFuncionarios,\n        diasTranscurridos: this.diasTranscurridos,\n        userSearchSelected: this.userSearchSelected,\n        rangoFechas: this.rangoFechas,\n        estadoSolicitud: this.estadoSolicitud,\n        valuesUbicacion: this.valuesUbicacion,\n        candidatoSearchSelected: this.candidatoSearchSelected,\n        coordinadoresSearchSelected: this.coordinadoresSearchSelected,\n        funcionarioSearchSelected: this.funcionarioSearchSelected,\n        buscarDiasTranscurridos: this.buscarDiasTranscurridos,\n      };\n\n      generarCertificadosSolicitudesFuncionario(body).then((response) => {\n        const linkSource = `data:application/pdf;base64,${response.data}`;\n        const downloadLink = document.createElement(\"a\");\n        downloadLink.href = linkSource;\n        downloadLink.download = \"test.pdf\";\n        downloadLink.click();\n      });\n    },\n\n    descargarCertificadoXLS() {\n      let body = {\n        archivo: \"excel\",\n        buscarTodosUsuarios: this.buscarTodosUsuarios,\n        buscarTodasFechas: this.buscarTodasFechas,\n        buscarTodasSolicitud: this.buscarTodasSolicitud,\n        buscarTodosDepartamentos: this.buscarTodosDepartamentos,\n        buscarTodosCandidatos: this.buscarTodosCandidatos,\n        buscarTodosCoordinadores: this.buscarTodosCoordinadores,\n        buscarTodosFuncionarios: this.buscarTodosFuncionarios,\n        diasTranscurridos: this.diasTranscurridos,\n        userSearchSelected: this.userSearchSelected,\n        rangoFechas: this.rangoFechas,\n        estadoSolicitud: this.estadoSolicitud,\n        valuesUbicacion: this.valuesUbicacion,\n        candidatoSearchSelected: this.candidatoSearchSelected,\n        coordinadoresSearchSelected: this.coordinadoresSearchSelected,\n        funcionarioSearchSelected: this.funcionarioSearchSelected,\n        buscarDiasTranscurridos: this.buscarDiasTranscurridos,\n      };\n\n      generarCertificadosSolicitudesFuncionario(body).then((response) => {\n        let blob = new Blob([response.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n\n        // Let's create a link in the document that we'll\n        // programmatically 'click'.\n        const link = document.createElement(\"a\");\n\n        // Tell the browser to associate the response data to\n        // the URL of the link we created above.\n        link.href = window.URL.createObjectURL(blob);\n\n        // Tell the browser to download, not render, the file.\n        link.setAttribute(\n          \"download\",\n          \"Certificado de solicitudes de usuarios.xlsx\"\n        );\n\n        // Place the link in the DOM.\n        document.body.appendChild(link);\n\n        // Make the magic happen!\n        link.click();\n      });\n    },\n\n    realizarConsultaEstados() {\n      getEstadosPeticiones().then(\n        function (response) {\n          this.estados = response.data;\n        }.bind(this)\n      );\n    },\n\n    changeForm() {\n      this.loadingTable = true;\n      let body = {\n        buscarTodosUsuarios: this.buscarTodosUsuarios,\n        buscarTodasFechas: this.buscarTodasFechas,\n        buscarTodasSolicitud: this.buscarTodasSolicitud,\n        buscarTodosDepartamentos: this.buscarTodosDepartamentos,\n        buscarTodosCandidatos: this.buscarTodosCandidatos,\n        buscarTodosCoordinadores: this.buscarTodosCoordinadores,\n        buscarTodosFuncionarios: this.buscarTodosFuncionarios,\n        diasTranscurridos: this.diasTranscurridos,\n        userSearchSelected: this.userSearchSelected,\n        rangoFechas: this.rangoFechas,\n        estadoSolicitud: this.estadoSolicitud,\n        valuesUbicacion: this.valuesUbicacion,\n        candidatoSearchSelected: this.candidatoSearchSelected,\n        coordinadoresSearchSelected: this.coordinadoresSearchSelected,\n        funcionarioSearchSelected: this.funcionarioSearchSelected,\n        buscarDiasTranscurridos: this.buscarDiasTranscurridos,\n      };\n\n      previewCertificadosSolicitudes(body).then((response) => {\n        this.peticiones = response.data;\n        this.loadingTable = false;\n      });\n    },\n  },\n\n  mounted() {\n    getClientes().then(\n      function (response) {\n        this.userSearch = response.data;\n      }.bind(this)\n    );\n    getCoordinadores().then(\n      function (response) {\n        this.coordinadoresSearch = response.data;\n      }.bind(this)\n    );\n    getAllCandidatos().then(\n      function (response) {\n        this.candidatoSearch = response.data;\n      }.bind(this)\n    );\n\n    getFunProv().then(\n      function (response) {\n        let funcionarioSearch = [];\n        for (let user in response.data) {\n          funcionarioSearch.push({\n            id: response.data[user].id,\n            nombre: response.data[user].nombre,\n          });\n        }\n        this.funcionarioSearch = funcionarioSearch;\n      }.bind(this)\n    );\n\n    this.realizarConsultaEstados();\n    this.changeForm();\n    getDepartamento().then(\n      function (response) {\n        const indice = 0;\n        const totalForms = 5;\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"Seleccione el departamento\",\n          disabled: true,\n        };\n\n        const options = [itemsOptionsTemplate];\n\n        for (let i = 0; i < response.data.length; i++) {\n          // Solución planteada así por un error de referencia de memoria\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"\",\n          };\n          const subTemplate = itemsOptionsTemplate;\n          itemsOptionsTemplate.value = response.data[i].ID_DEPARTAMENTO;\n          subTemplate.text = response.data[i].NOMBRE_DEPARTAMENTO;\n          options.push(subTemplate);\n        }\n\n        if (this.schemaUbicacion[indice] == null) {\n          this.schemaUbicacion.splice(indice, 0, {\n            id: \"departamento\",\n            span: true,\n            component: \"VSelect\",\n            label: \"Departamento\",\n            items: options,\n          });\n        } else {\n          this.schemaUbicacion[indice] = {\n            id: \"departamento\",\n            span: true,\n            component: \"VSelect\",\n            label: \"Departamento\",\n            items: options,\n          };\n        }\n        this.recargarFormulario();\n      }.bind(this)\n    );\n  },\n\n  watch: {\n    userSearchSelected(newState) {\n      this.changeForm();\n    },\n\n    candidatoSearchSelected(newState) {\n      this.changeForm();\n    },\n\n    coordinadoresSearchSelected(newState) {\n      this.changeForm();\n    },\n\n    funcionarioSearchSelected(newState) {\n      this.changeForm();\n    },\n\n    diasTranscurridos(newState) {\n      this.changeForm();\n    },\n\n\n\n\n    valuesUbicacion(newValue, oldValue) {\n      if (\n        newValue.departamento &&\n        newValue.departamento != oldValue.departamento\n      ) {\n        this.valuesUbicacion.ciudad = \"\";\n        this.consultaCiudad(newValue.departamento);\n      }\n      this.changeForm();\n    },\n  },\n\n  components: {\n    FullBoxVue,\n    MiddleBox,\n    searchUserMultipleVue,\n    BlitzForm,\n    loadingCSS\n  },\n};\n</script>\n\n<style scoped>\ndiv {\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}