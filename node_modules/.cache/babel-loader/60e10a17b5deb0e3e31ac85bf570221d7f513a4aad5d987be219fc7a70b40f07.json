{"ast":null,"code":"import FullBoxVue from \"@/components/static/FullBox.vue\";\nimport { getAllConversationalFlowsMessages, createConversationalFlowMessage } from \"@/api\";\nexport default {\n  data() {\n    return {\n      search: \"\",\n      chats: [],\n      headers: [{\n        text: \"Id Conversación\",\n        value: \"id\"\n      }, {\n        text: \"Pregunta\",\n        value: \"query\"\n      }, {\n        text: \"Respuesta\",\n        value: \"response\"\n      }],\n      dialog: false,\n      query: \"\",\n      answer: \"\",\n      infoFlujo: {}\n    };\n  },\n  methods: {\n    getConversationalFlows() {\n      getAllConversationalFlowsMessages(this.$route.params.id).then(function (response) {\n        console.log(response);\n        let respuesta = response.data;\n        this.chats = respuesta.conversationalFlowMessages;\n        this.infoFlujo = respuesta.infoFlow;\n      }.bind(this));\n    },\n    createConversationalFlowMessage() {\n      createConversationalFlowMessage({\n        \"idConversationalFlow\": this.infoFlujo.id,\n        \"query\": this.query,\n        \"response\": this.answer\n      }).then(function (response) {\n        this.getConversationalFlows();\n        this.nombreChat = \"\";\n        this.dialog = false;\n      }.bind(this));\n    }\n  },\n  mounted: function () {\n    this.getConversationalFlows();\n  },\n  components: {\n    FullBoxVue\n  }\n};","map":{"version":3,"mappings":"AAyDA;AACA,SACAA,mCACAC,uCACA;AAEA;EACAC;IACA;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACAb,8DACA;QACAc;QACA;QACA;QACA;MACA,aACA;IACA;IAEAb;MACAA;QACA;QACA;QACA;MACA,QACA;QACA;QACA;QACA;MACA,aACA;IACA;EACA;EAEAc;IACA;EACA;EAEAC;IACAC;EACA;AACA","names":["getAllConversationalFlowsMessages","createConversationalFlowMessage","data","search","chats","headers","text","value","dialog","query","answer","infoFlujo","methods","getConversationalFlows","console","mounted","components","FullBoxVue"],"sourceRoot":"src/views","sources":["FlujoConversacional.vue"],"sourcesContent":["<template>\n  <FullBoxVue class=\"shadowHover\">\n    <h1>Flujo conversacional {{ infoFlujo.name }}</h1>\n\n    <v-dialog v-model=\"dialog\" width=\"500\">\n      <template v-slot:activator=\"{ on, attrs }\">\n        <v-btn color=\"primary\" v-bind=\"attrs\" v-on=\"on\"> Agregar </v-btn>\n      </template>\n\n      <v-card>\n        <v-card-title class=\"text-h5 grey lighten-2\">\n          Crear una pregunta\n        </v-card-title>\n\n        <v-form>\n          <v-container>\n            <v-text-field v-model=\"query\" label=\"Pregunta\"></v-text-field>\n\n            <v-text-field v-model=\"answer\" label=\"Pregunta\"></v-text-field>\n          </v-container>\n        </v-form>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            text\n            @click=\"createConversationalFlowMessage()\"\n          >\n            Guardar\n          </v-btn>\n          <v-btn color=\"primary\" text @click=\"dialog = false\"> Cancelar </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"chats\"\n      item-key=\"id\"\n      class=\"elevation-1\"\n      :search=\"search\"\n    >\n      <template v-slot:top>\n        <v-text-field\n          v-model=\"search\"\n          label=\"Buscar\"\n          class=\"mx-4\"\n        ></v-text-field>\n      </template>\n    </v-data-table>\n  </FullBoxVue>\n</template>\n\n<script>\nimport FullBoxVue from \"@/components/static/FullBox.vue\";\nimport {\n  getAllConversationalFlowsMessages,\n  createConversationalFlowMessage,\n} from \"@/api\";\n\nexport default {\n  data() {\n    return {\n      search: \"\",\n      chats: [],\n      headers: [\n        {\n          text: \"Id Conversación\",\n          value: \"id\",\n        },\n        {\n          text: \"Pregunta\",\n          value: \"query\",\n        },\n        {\n          text: \"Respuesta\",\n          value: \"response\",\n        },\n      ],\n      dialog: false,\n      query: \"\",\n      answer: \"\",\n      infoFlujo: {},\n    };\n  },\n\n  methods: {\n    getConversationalFlows() {\n      getAllConversationalFlowsMessages(this.$route.params.id).then(\n        function (response) {\n          console.log(response);\n          let respuesta = response.data;\n          this.chats = respuesta.conversationalFlowMessages;\n          this.infoFlujo = respuesta.infoFlow;\n        }.bind(this)\n      );\n    },\n\n    createConversationalFlowMessage() {\n      createConversationalFlowMessage({\n        \"idConversationalFlow\": this.infoFlujo.id,\n        \"query\": this.query,\n        \"response\": this.answer\n      }).then(\n        function (response) {\n          this.getConversationalFlows();\n          this.nombreChat = \"\";\n          this.dialog = false;\n        }.bind(this)\n      );\n    },\n  },\n\n  mounted: function () {\n    this.getConversationalFlows();\n  },\n\n  components: {\n    FullBoxVue,\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}