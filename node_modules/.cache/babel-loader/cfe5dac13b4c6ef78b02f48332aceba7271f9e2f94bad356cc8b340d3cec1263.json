{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\nimport Vue from \"vue\";\nimport { VTextField, VRadioGroup, VRadio, VSlider, VCheckbox, VSwitch, VSelect } from \"vuetify/lib\";\n// All components that are used in the form need to be globally registered.\nVue.component(\"VTextField\", VTextField);\nVue.component(\"VRadioGroup\", VRadioGroup);\nVue.component(\"VRadio\", VRadio);\nVue.component(\"VSlider\", VSlider);\nVue.component(\"VCheckbox\", VCheckbox);\nVue.component(\"VSwitch\", VSwitch);\nVue.component(\"VSelect\", VSelect);\nimport { getEmpresa, getDocumento, updateEmpresa, postSubUsers, getAllSubServicio, getAllUsersEmpresa } from \"@/api\";\nconst valuesRegisterdef = {\n  nombre: \"\",\n  tipoDocumento: \"\",\n  contacto: \"\",\n  correo: \"\",\n  documento: \"\",\n  rol: 8,\n  fechaCorte: \"\",\n  costos: []\n};\nconst tenPercent = \"width: 18%;max-width: 18%;margin: 1%;\";\nconst tenPercentWFloat = \"width: 18%;max-width: 18%;margin: 1%; float: left;\";\nconst twentyPercent = \"width: 18%;max-width: 18%;margin: 1%;\";\nconst twentyPercentWFloat = \"width: 18%;max-width: 18%;margin: 1%; float: left;\";\nconst thirtyPercent = \"width: 28%;max-width: 28%;margin: 1%;\";\nconst thirtyPercentWFloat = \"width: 28%;max-width: 28%;margin: 1%; float: left;\";\nconst thirtytreePercent = \"width: 32.333%;max-width: 32.333%;margin: 1%;\";\nconst thirtytreePercentWFloat = \"width: 31.333%;max-width: 31.333%;margin: 1%; float: left;\";\nconst fourtyPercent = \"width: 38%;max-width: 38%;margin: 1%;\";\nconst fourtyPercentWFloat = \"width: 38%;max-width: 38%;margin: 1%; float: left;\";\nconst fiftyPercent = \"width: 48%;max-width: 48%;margin: 1%;\";\nconst fiftyPercentWFloat = \"width: 48%;max-width: 48%;margin: 1%; float: left;\";\nconst sixtyPercent = \"width: 58%;max-width: 58%;margin: 1%;\";\nconst sixtyPercentWFloat = \"width: 58%;max-width: 58%;margin: 1%; float: left;\";\nconst seventyPercent = \"width: 68%;max-width: 68%;margin: 1%;\";\nconst seventyPercentWFloat = \"width: 68%;max-width: 68%;margin: 1%; float: left;\";\nconst hundredPercent = \"width: 98%;max-width: 98%;margin: 1%;\";\nconst hundredPercentWFloat = \"width: 98%;max-width: 98%;margin: 1%; float: left;\";\nexport default {\n  data() {\n    return {\n      idSolicitud: this.$route.params.id,\n      valuesRegister: {\n        nombre: \"\",\n        tipoDocumento: \"\",\n        documento: \"\",\n        contacto: \"\",\n        correo: \"\",\n        representante_legal: \"\",\n        direccion: \"\",\n        fechaCorte: \"\",\n        fechaRemision: \"\",\n        rol: 8,\n        userSearchSelected: [],\n        costos: []\n      },\n      menu: false,\n      serviciosDefault: [],\n      schemaRegister: [{\n        id: \"razonsocial\",\n        component: \"VTextField\",\n        placeholder: \"Razón Social\",\n        style: fiftyPercentWFloat\n      },\n      //Id Tipo Documento\n      {}, {\n        id: \"documento\",\n        component: \"VTextField\",\n        placeholder: \"No. Cedula / NIT\",\n        style: thirtyPercent\n      }, {\n        id: \"direccion\",\n        component: \"VTextField\",\n        placeholder: \"Dirección de empresa\",\n        style: thirtytreePercentWFloat\n      }, {\n        id: \"fechaCorte\",\n        component: \"VTextField\",\n        type: \"date\",\n        label: \"Fecha de Corte\",\n        style: thirtytreePercentWFloat\n      }, {\n        id: \"fechaRemision\",\n        component: \"VTextField\",\n        type: \"date\",\n        label: \"Fecha de Remisión\",\n        style: thirtytreePercentWFloat\n      }],\n      componentKey: 0,\n      costo: 0,\n      userSearch: [],\n      servicios: [],\n      costosServicios: [],\n      headers: [{\n        text: \"Id\",\n        value: \"id\"\n      }, {\n        text: \"Estado Cliente\",\n        value: \"estado\"\n      }, {\n        text: \"Nombre Cliente\",\n        value: \"nombre\"\n      }, {\n        text: \"Rol\",\n        value: \"rol\"\n      }, {\n        text: \"Código de cliente\",\n        value: \"cod_cliente\"\n      }, {\n        text: \"Correo\",\n        value: \"correo\"\n      }, {\n        text: \"Documento\",\n        value: \"documento\"\n      }, {\n        text: \"Tipo de documento\",\n        value: \"tipo_documento\"\n      }],\n      schemaRegisterUsuario: [{\n        id: \"nombre\",\n        component: \"VTextField\",\n        label: \"Nombre\",\n        style: hundredPercent\n      },\n      //Id Tipo Documento\n      {}, {\n        id: \"documento\",\n        component: \"VTextField\",\n        label: \"Documento\",\n        style: hundredPercent\n      }, {\n        id: \"contacto\",\n        component: \"VTextField\",\n        label: \"Teléfono\",\n        style: hundredPercent\n      }, {\n        id: \"correo\",\n        component: \"VTextField\",\n        label: \"Correo\",\n        style: hundredPercent\n      },\n      //Info contacto\n      {},\n      //Tipo de rol\n      {}],\n      serviciosDefault: [],\n      valuesRegisterUsuario: {\n        nombre: \"\",\n        tipoDocumento: \"\",\n        documento: \"\",\n        contacto: \"\",\n        correo: \"\",\n        representante_legal: \"\",\n        direccion: \"\",\n        fechaCorte: \"\",\n        fechaRemision: \"\",\n        userSearchSelected: [],\n        costos: []\n      },\n      peticiones: [],\n      search: \"\",\n      dialog: false,\n      dialog2: false,\n      preServiciosSelected: 0,\n      precio: 0,\n      observaciones: \"\"\n    };\n  },\n  methods: {\n    agregarPrecio() {\n      for (let i in this.valuesRegister.costos) {\n        if (this.valuesRegister.costos[i].ID_SUBSERVICIO == this.preServiciosSelected) {\n          this.valuesRegister.costos[i] = {\n            ID_SUBSERVICIO: this.preServiciosSelected,\n            NOMBRE_SUBSERVICIO: this.getNombreServicio(this.preServiciosSelected),\n            costo: this.precio,\n            observaciones: this.observaciones\n          };\n          this.recargarFormulario();\n          return;\n        }\n      }\n      this.valuesRegister.costos.push({\n        ID_SUBSERVICIO: this.preServiciosSelected,\n        NOMBRE_SUBSERVICIO: this.getNombreServicio(this.preServiciosSelected),\n        costo: this.precio,\n        observaciones: this.observaciones\n      });\n    },\n    getNombreServicio(id) {\n      for (let i in this.servicios) {\n        if (this.servicios[i].ID_SUBSERVICIO == id) {\n          return this.servicios[i].NOMBRE_SUBSERVICIO;\n        }\n      }\n    },\n    postUser() {\n      postSubUsers(this.valuesRegisterUsuario).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        if (response.data == \"\") {\n          Toast.fire({\n            icon: \"success\",\n            title: \"Usuario registrado exitosamente\"\n          });\n          this.valuesRegister = valuesRegisterdef;\n          this.recargarFormulario();\n          window.location.reload();\n        } else {\n          Toast.fire({\n            icon: \"error\",\n            title: \"Error al registrar el usuario, correo no válido y/o ya usado.\"\n          });\n        }\n      }.bind(this)).catch(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"error\",\n          title: \"Error al registrar el usuario, correo no válido y/o ya usado.\"\n        });\n      });\n    },\n    registrarUsuarioAdmin() {\n      this.valuesRegisterUsuario.rol = 8;\n      this.valuesRegisterUsuario.empresa = this.idSolicitud;\n      this.postUser();\n    },\n    registrarSubUsuario() {\n      this.valuesRegisterUsuario.rol = 2;\n      this.valuesRegisterUsuario.empresa = this.idSolicitud;\n      this.postUser();\n    },\n    seleccionarPeticion(option) {\n      this.idSolicitudSeleccionada = option;\n      this.$router.push({\n        path: \"/usuario/\" + this.idSolicitudSeleccionada.id\n      }).catch(() => {});\n      //this.$swal('Hello Vue world!!!');\n    },\n\n    myEventHandler(e) {\n      if (e.currentTarget.innerWidth <= 600) {\n        let classNames = document.getElementsByClassName(\"blitz-field\");\n        for (let i = 0; i < classNames.length; i++) {\n          document.getElementsByClassName(\"blitz-field\")[i].style = \"\";\n        }\n      }\n    },\n    realizarConsulta() {\n      getEmpresa(this.idSolicitud).then(function (response) {\n        this.valuesRegister = response.data[0];\n        this.consultaSubServicios();\n        this.updateForm();\n      }.bind(this));\n    },\n    userSearchSelectedFunc(values) {\n      this.valuesRegister.userSearchSelected = values;\n    },\n    recargarFormulario() {\n      this.componentKey -= 1;\n    },\n    getCosto(index, servicioSel) {\n      let totalAumentar = 0;\n      for (let i in this.servicios) {\n        if (i == servicioSel) {\n          break;\n        }\n        totalAumentar += this.servicios[i].length;\n      }\n      return this.costosServicios[totalAumentar + index].costo;\n      // this.valuesRegister.costos = JSON.parse(\n      //   JSON.stringify(this.costosServicios)\n      // );\n    },\n\n    updateCosto(value, index, servicioSel) {\n      let totalAumentar = 0;\n      for (let i in this.servicios) {\n        if (i == servicioSel) {\n          break;\n        }\n        totalAumentar += this.servicios[i].length;\n      }\n      this.costosServicios[totalAumentar + index].costo = Number(value);\n      // this.valuesRegister.costos = JSON.parse(\n      //   JSON.stringify(this.costosServicios)\n      // );\n    },\n\n    actualizarEmpresa() {\n      let datosRegistrar = this.valuesRegister;\n      updateEmpresa(datosRegistrar).then(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        if (response.data == \"\") {\n          Toast.fire({\n            icon: \"success\",\n            title: \"Empresa actualizada exitosamente\"\n          });\n          this.valuesRegister = valuesRegisterdef;\n          window.location.reload();\n        } else {\n          Toast.fire({\n            icon: \"error\",\n            title: \"Error al actualizar empresa, vuélvalo a intentar.\"\n          });\n        }\n        this.updateForm();\n      }.bind(this)).catch(function (response) {\n        const Toast = this.$swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n            toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: \"error\",\n          title: \"Error al actualizar empresa, vuélvalo a intentar.\"\n        });\n        this.updateForm();\n      });\n      // postUser(this.valuesRegister)\n      //   .then(\n      //     function (response) {\n      //       const Toast = this.$swal.mixin({\n      //         toast: true,\n      //         position: \"top-end\",\n      //         showConfirmButton: false,\n      //         timer: 3000,\n      //         timerProgressBar: true,\n      //         didOpen: (toast) => {\n      //           toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n      //           toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n      //         },\n      //       });\n      //       if (response.data == \"\") {\n      //         Toast.fire({\n      //           icon: \"success\",\n      //           title: \"Usuario registrado exitosamente\",\n      //         });\n      //         this.valuesRegister = valuesRegisterdef;\n      //         this.recargarFormulario();\n      //       } else {\n      //         Toast.fire({\n      //           icon: \"error\",\n      //           title:\n      //             \"Error al registrar el usuario, correo no válido y/o ya usado.\",\n      //         });\n      //       }\n      //     }.bind(this)\n      //   )\n      //   .catch(function (response) {\n      //     const Toast = this.$swal.mixin({\n      //       toast: true,\n      //       position: \"top-end\",\n      //       showConfirmButton: false,\n      //       timer: 3000,\n      //       timerProgressBar: true,\n      //       didOpen: (toast) => {\n      //         toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n      //         toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n      //       },\n      //     });\n      //     Toast.fire({\n      //       icon: \"error\",\n      //       title:\n      //         \"Error al registrar el usuario, correo no válido y/o ya usado.\",\n      //     });\n      //   });\n    },\n\n    eliminarPrecio(id) {\n      this.valuesRegister.costos.splice(id, 1);\n    },\n    consultaSubServicios() {\n      getAllSubServicio().then(function (response) {\n        this.servicios = response.data;\n        this.costosServicios = [];\n        for (let key in this.servicios) {\n          for (let i = 0; i < this.servicios[key].length; i++) {\n            let costo = 0;\n            try {\n              costo = this.valuesRegister.costos[key][this.servicios[key][i].NOMBRE_SUBSERVICIO];\n              if (costo == undefined) {\n                costo = 0;\n              }\n            } catch (error) {\n              costo = 0;\n            }\n            this.costosServicios.push({\n              idServicio: this.servicios[key][i].ID_SUBSERVICIO,\n              costo: costo\n            });\n          }\n        }\n        this.updateForm();\n        // this.valuesRegister.costos = JSON.parse(\n        //   JSON.stringify(this.costosServicios)\n        // );\n      }.bind(this));\n    },\n    updateForm() {\n      this.componentKey++;\n    }\n  },\n  mounted() {\n    getAllUsersEmpresa(this.idSolicitud).then(function (response) {\n      this.peticiones = response.data;\n    }.bind(this));\n    this.realizarConsulta();\n    const {\n      offsetWidth,\n      offsetHeight\n    } = document.querySelector(\"#app\");\n    if (offsetWidth <= 600) {\n      setTimeout(function () {\n        let classNames = document.getElementsByClassName(\"blitz-field\");\n        for (let i = 0; i < classNames.length; i++) {\n          document.getElementsByClassName(\"blitz-field\")[i].style = \"\";\n        }\n      }, 200);\n    }\n    let classNames = document.getElementsByClassName(\"blitz-form__form\");\n    for (let i = 0; i < classNames.length; i++) {\n      document.getElementsByClassName(\"blitz-form__form\")[i].style = \"display: block\";\n    }\n    getDocumento().then(function (response) {\n      const indice = 1;\n      const itemsOptionsTemplate = {\n        value: \"\",\n        text: \"Tipo documento\",\n        disabled: true\n      };\n      const options = [itemsOptionsTemplate];\n      for (let i = 0; i < response.data.length; i++) {\n        // Solución planteada así por un error de referencia de memoria\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"\"\n        };\n        const subTemplate = itemsOptionsTemplate;\n        itemsOptionsTemplate.value = response.data[i].ID_TIPO_DOCUMENTO;\n        subTemplate.text = response.data[i].DESC_TIPO_DOCUMENTO;\n        options.push(subTemplate);\n      }\n      let object = {\n        id: \"tipoDocumento\",\n        span: true,\n        component: \"VSelect\",\n        placeholder: \"Tipo de documento\",\n        style: tenPercentWFloat,\n        items: options\n      };\n      this.schemaRegister[indice] = object;\n      this.schemaRegisterUsuario[1] = object;\n      this.recargarFormulario();\n    }.bind(this));\n  },\n  created() {\n    window.addEventListener(\"resize\", this.myEventHandler);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.myEventHandler);\n  },\n  watch: {\n    // valuesRegister(newValue, oldValue) {\n    //   this.valuesRegister.costos = oldValue.costos;\n    // },\n  },\n  components: {\n    FullBoxVue,\n    BlitzForm,\n    searchUserMultipleVue\n  }\n};","map":{"version":3,"mappings":";AA0TA;AACA;AACA;AACA;AAEA,SACAA,YACAC,aACAC,QACAC,SACAC,WACAC,SACAC,eACA;AACA;AACAC;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AAEA,SACAC,YACAC,cACAC,eACAC,cACAC,mBACAC,0BACA;AAEA;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;AACA;AAEA;AACA;AAEA;AACA,4BACA;AAEA;AACA,4BACA;AAEA;AACA,gCACA;AAEA;AACA,4BACA;AAEA;AACA;AAEA;AACA;AAEA;AACA,6BACA;AAEA;AACA,6BACA;AAEA;EACAC;IACA;MACAC;MACAC;QACAV;QACAC;QACAG;QACAF;QACAC;QACAQ;QACAC;QACAN;QACAO;QACAR;QACAS;QACAP;MACA;MACAQ;MACAC;MACAC,iBACA;QACAC;QACAC;QACAC;QACAC;MACA;MACA;MACA,IACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAG;QACAC;QACAF;MACA,GACA;QACAH;QACAC;QACAG;QACAC;QACAF;MACA,EACA;MACAG;MACAC;MACAC;MACAC;MACAC;MACAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC,wBACA;QACAd;QACAC;QACAI;QACAF;MACA;MACA;MACA,IACA;QACAH;QACAC;QACAI;QACAF;MACA,GACA;QACAH;QACAC;QACAI;QACAF;MACA,GACA;QACAH;QACAC;QACAI;QACAF;MACA;MACA;MACA;MACA;MACA,GACA;MACAL;MACAiB;QACAjC;QACAC;QACAG;QACAF;QACAC;QACAQ;QACAC;QACAN;QACAO;QACAC;QACAP;MACA;MACA2B;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;MACA;QACA;UACA;YACAC;YACAC;YACAnB;YACAe;UACA;UACA;UACA;QACA;MACA;MAEA;QACAG;QACAC;QACAnB;QACAe;MACA;IACA;IAEAK;MACA;QACA;UACA;QACA;MACA;IACA;IAEAC;MACAjD,yCACAkD,KACA;QACA;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACA;UACAM;YACAC;YACAC;UACA;UACA;UACA;UACAC;QACA;UACAH;YACAC;YACAC,OACA;UACA;QACA;MACA,aACA,CACAE;QACA;UACAV;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC,OACA;QACA;MACA;IACA;IAEAG;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA,aACAC;QAAAC;MAAA,GACAL;MACA;IACA;;IACAM;MACA;QACA;QACA;UACAC;QACA;MACA;IACA;IAEAC;MACAxE,kCACA;QACA;QACA;QACA;MACA,aACA;IACA;IAEAyE;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACA;MACA;QACA;UACA;QACA;QACAC;MACA;MACA;MACA;MACA;MACA;IACA;;IAEAC;MACA;MACA;QACA;UACA;QACA;QACAD;MACA;MACA;MACA;MACA;MACA;IACA;;IACAE;MACA;MACA5E,8BACAmD,KACA;QACA;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACA;UACAM;YACAC;YACAC;UACA;UACA;UACAC;QACA;UACAH;YACAC;YACAC;UACA;QACA;QACA;MACA,aACA,CACAE;QACA;UACAV;UACAC;UACAC;UACAC;UACAC;UACAC;YACAL;YACAA;UACA;QACA;QACAM;UACAC;UACAC;QACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;IACAiB;MACA;IACA;IAEAC;MACA5E,yBACA;QACA;QAEA;QACA;UACA;YACA;YACA;cACA2B,wCACA,0CACA;cACA;gBACAA;cACA;YACA;cACAA;YACA;YACA;cACAkD;cACAlD;YACA;UACA;QACA;QACA;QACA;QACA;QACA;MACA,aACA;IACA;IAEAmD;MACA;IACA;EACA;EAEAC;IACA9E,0CACA;MACA;IACA,aACA;IAEA;IAEA;MAAA+E;MAAAC;IAAA;IACA;MACAC;QACA;QACA;UACAf;QACA;MACA;IACA;IAEA;IACA;MACAA,+DACA;IACA;IAEAtE,oBACA;MACA;MACA;QACAoC;QACAD;QACAmD;MACA;MAEA;MAEA;QACA;QACA;UACAlD;UACAD;QACA;QACA;QACAoD;QACAC;QACAC;MACA;MACA;QACAlE;QACAmE;QACAlE;QACAC;QACAC;QACAiE;MACA;MAEA;MAEA;MAEA;IACA,aACA;EACA;EAEAC;IACA9B;EACA;EACA+B;IACA/B;EACA;EAEAgC;IACA;IACA;IACA;EAAA,CACA;EAEAC;IACAC;IACAC;IACAC;EACA;AACA","names":["VTextField","VRadioGroup","VRadio","VSlider","VCheckbox","VSwitch","VSelect","Vue","getEmpresa","getDocumento","updateEmpresa","postSubUsers","getAllSubServicio","getAllUsersEmpresa","nombre","tipoDocumento","contacto","correo","documento","rol","fechaCorte","costos","data","idSolicitud","valuesRegister","representante_legal","direccion","fechaRemision","userSearchSelected","menu","serviciosDefault","schemaRegister","id","component","placeholder","style","type","label","componentKey","costo","userSearch","servicios","costosServicios","headers","text","value","schemaRegisterUsuario","valuesRegisterUsuario","peticiones","search","dialog","dialog2","preServiciosSelected","precio","observaciones","methods","agregarPrecio","ID_SUBSERVICIO","NOMBRE_SUBSERVICIO","getNombreServicio","postUser","then","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","Toast","icon","title","window","catch","registrarUsuarioAdmin","registrarSubUsuario","seleccionarPeticion","push","path","myEventHandler","document","realizarConsulta","userSearchSelectedFunc","recargarFormulario","getCosto","totalAumentar","updateCosto","actualizarEmpresa","eliminarPrecio","consultaSubServicios","idServicio","updateForm","mounted","offsetWidth","offsetHeight","setTimeout","disabled","itemsOptionsTemplate","subTemplate","options","span","items","created","destroyed","watch","components","FullBoxVue","BlitzForm","searchUserMultipleVue"],"sourceRoot":"src/views","sources":["EmpresaView.vue"],"sourcesContent":["<template>\n  <FullBoxVue class=\"shadowHover\">\n    <div class=\"formContent\" :key=\"componentKey\">\n      <h1>Actualizar empresa</h1>\n      <br />\n      <hr />\n      <br />\n      <BlitzForm\n        :schema=\"schemaRegister\"\n        v-model=\"valuesRegister\"\n\n        gridGap=\"0\"\n        placeholderPosition=\"left\"\n      />\n\n      <!-- <div v-for=\"(servicio, index) in servicios\" :key=\"index\">\n        <v-text-field\n          @change=\"updateCosto($event, index)\"\n          v-model=\"costosServicios[index].costo\"\n          :label=\"'Costo de ' + servicio.NOMBRE_SUBSERVICIO\"\n          type=\"number\"\n          class=\"tirthyPercent\"\n        ></v-text-field>\n      </div>\n      <br /> -->\n      <h2>Costos de subservicios</h2>\n      <p>\n        Para habilitar un subservicio escriba el costo correspondiente, para\n        deshabilitarlo, deje la casilla del costo vacía o con valor 0\n      </p>\n      <v-autocomplete\n        v-model=\"preServiciosSelected\"\n        :items=\"servicios\"\n        color=\"blue-grey lighten-2\"\n        class=\"seleccionSubservicios\"\n        label=\"Seleccionar subservicio\"\n        item-text=\"NOMBRE_SUBSERVICIO\"\n        item-value=\"ID_SUBSERVICIO\"\n        chips\n        closable-chips\n      >\n        <template v-slot:selection=\"data\">\n          <v-chip\n            v-bind=\"data.attrs\"\n            :input-value=\"data.selected\"\n            close\n            @click=\"data.select\"\n            @click:close=\"remove(data.item)\"\n          >\n            {{ data.item.NOMBRE_SUBSERVICIO }}\n          </v-chip>\n        </template>\n        <template v-slot:item=\"data\">\n          <template v-if=\"typeof data.item !== 'object'\">\n            <v-list-item-content v-text=\"data.item\"></v-list-item-content>\n          </template>\n          <template v-else>\n            <v-list-item-content>\n              <v-list-item-title\n                v-html=\"data.item.NOMBRE_SUBSERVICIO\"\n              ></v-list-item-title>\n            </v-list-item-content>\n          </template>\n        </template>\n      </v-autocomplete>\n      <v-text-field\n        label=\"Precio\"\n        prefix=\"$\"\n        type=\"number\"\n        v-model=\"precio\"\n        outlined\n        class=\"campoPrecio\"\n      ></v-text-field>\n\n      <v-text-field\n        label=\"Observaciones\"\n        type=\"text\"\n        v-model=\"observaciones\"\n        outlined\n        class=\"campoObservaciones\"\n      ></v-text-field>\n\n      <v-btn\n        color=\"primary\"\n        @click=\"agregarPrecio\"\n        class=\"botonAgregarPrecio\"\n        :disabled=\"preServiciosSelected == 0 || precio == null || precio == 0\"\n      >\n        Agregar\n      </v-btn>\n    </div>\n\n    <br>\n\n    <div>\n      <h2>Costos actuales</h2>\n      <br />\n      <div v-for=\"(objeto, index) in valuesRegister.costos\" :key=\"index\">\n        <div class=\"seleccionSubservicios\">\n          {{ objeto.NOMBRE_SUBSERVICIO }}\n        </div>\n        <v-text-field\n          label=\"Precio\"\n          prefix=\"$\"\n          type=\"number\"\n          v-model=\"objeto.costo\"\n          outlined\n          class=\"campoPrecio\"\n        ></v-text-field>\n\n        <v-text-field\n          label=\"Observaciones\"\n          type=\"text\"\n          v-model=\"objeto.observaciones\"\n          outlined\n          class=\"campoObservaciones\"\n        ></v-text-field>\n\n        <v-btn\n          color=\"primary\"\n          @click=\"eliminarPrecio(index)\"\n          class=\"botonAgregarPrecio\"\n        >\n          Eliminar\n        </v-btn>\n      </div>\n    </div>\n\n    <div style=\"width: 100% !important; display: flow-root\" >\n      <v-btn color=\"primary\"  @click=\"actualizarEmpresa\">\n        Actualizar\n      </v-btn>\n    </div>\n    <br />\n\n    <h1>Usuarios de empresa</h1>\n    <div>\n      <v-dialog v-model=\"dialog\" width=\"500\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn color=\"primary\" v-bind=\"attrs\" v-on=\"on\">\n            Crear nuevo usuario principal\n          </v-btn>\n        </template>\n\n        <v-card>\n          <v-card-title class=\"text-h5 grey lighten-2\">\n            Registrar usuario principal\n          </v-card-title>\n\n          <v-card-text>\n            <BlitzForm\n              :schema=\"schemaRegisterUsuario\"\n              v-model=\"valuesRegisterUsuario\"\n              :key=\"componentKey\"\n              gridGap=\"0\"\n              labelPosition=\"left\"\n            />\n\n            <!-- <v-select\n              v-model=\"valuesRegisterUsuario.serviciosAsociados\"\n              :items=\"serviciosDefault\"\n              item-text=\"nombre\"\n              item-value=\"id\"\n              label=\"Servicios disponibles\"\n              multiple\n            ></v-select> -->\n\n            <!-- <v-menu\n              ref=\"menu\"\n              v-model=\"menu\"\n              :close-on-content-click=\"false\"\n              :return-value.sync=\"valuesRegister.fechaCorte\"\n              transition=\"scale-transition\"\n              offset-y\n              min-width=\"auto\"\n            >\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-combobox\n                  v-model=\"valuesRegister.fechaCorte\"\n                  chips\n                  small-chips\n                  label=\"Fecha de corte\"\n                  prepend-icon=\"mdi-calendar\"\n                  readonly\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                ></v-combobox>\n              </template>\n              <v-date-picker\n                v-model=\"valuesRegister.fechaCorte\"\n                no-title\n                scrollable\n              >\n                <v-spacer></v-spacer>\n                <v-btn text color=\"primary\" @click=\"menu = false\">\n                  Cancelar\n                </v-btn>\n                <v-btn\n                  text\n                  color=\"primary\"\n                  @click=\"$refs.menu.save(valuesRegister.fechaCorte)\"\n                >\n                  OK\n                </v-btn>\n              </v-date-picker>\n            </v-menu> -->\n            <v-btn color=\"primary\" dark @click=\"registrarUsuarioAdmin\">\n              Crear usuario principal\n            </v-btn>\n          </v-card-text>\n\n          <v-divider></v-divider>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n\n    <br />\n    <div>\n      <v-dialog v-model=\"dialog2\" width=\"500\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn color=\"primary\" v-bind=\"attrs\" v-on=\"on\">\n            Crear nuevo SubUsuario\n          </v-btn>\n        </template>\n\n        <v-card>\n          <v-card-title class=\"text-h5 grey lighten-2\">\n            Registrar usuario\n          </v-card-title>\n\n          <v-card-text>\n            <BlitzForm\n              :schema=\"schemaRegisterUsuario\"\n              v-model=\"valuesRegisterUsuario\"\n              :key=\"componentKey\"\n              gridGap=\"0\"\n              labelPosition=\"left\"\n            />\n\n            <!-- <v-select\n              v-model=\"valuesRegisterUsuario.serviciosAsociados\"\n              :items=\"serviciosDefault\"\n              item-text=\"nombre\"\n              item-value=\"id\"\n              label=\"Servicios disponibles\"\n              multiple\n            ></v-select> -->\n\n            <!-- <v-menu\n              ref=\"menu\"\n              v-model=\"menu\"\n              :close-on-content-click=\"false\"\n              :return-value.sync=\"valuesRegister.fechaCorte\"\n              transition=\"scale-transition\"\n              offset-y\n              min-width=\"auto\"\n            >\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-combobox\n                  v-model=\"valuesRegister.fechaCorte\"\n                  chips\n                  small-chips\n                  label=\"Fecha de corte\"\n                  prepend-icon=\"mdi-calendar\"\n                  readonly\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                ></v-combobox>\n              </template>\n              <v-date-picker\n                v-model=\"valuesRegister.fechaCorte\"\n                no-title\n                scrollable\n              >\n                <v-spacer></v-spacer>\n                <v-btn text color=\"primary\" @click=\"menu = false\">\n                  Cancelar\n                </v-btn>\n                <v-btn\n                  text\n                  color=\"primary\"\n                  @click=\"$refs.menu.save(valuesRegister.fechaCorte)\"\n                >\n                  OK\n                </v-btn>\n              </v-date-picker>\n            </v-menu> -->\n            <v-btn color=\"primary\" dark @click=\"registrarSubUsuario\">\n              Crear subusuario\n            </v-btn>\n          </v-card-text>\n\n          <v-divider></v-divider>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"peticiones\"\n      :search=\"search\"\n      @click:row=\"seleccionarPeticion\"\n    ></v-data-table>\n  </FullBoxVue>\n</template>\n\n<script>\nimport FullBoxVue from \"../components/static/FullBox.vue\";\nimport { BlitzForm } from \"blitzar\";\nimport searchUserMultipleVue from \"../components/searchUserMultiple.vue\";\nimport Vue from \"vue\";\n\nimport {\n  VTextField,\n  VRadioGroup,\n  VRadio,\n  VSlider,\n  VCheckbox,\n  VSwitch,\n  VSelect,\n} from \"vuetify/lib\";\n// All components that are used in the form need to be globally registered.\nVue.component(\"VTextField\", VTextField);\nVue.component(\"VRadioGroup\", VRadioGroup);\nVue.component(\"VRadio\", VRadio);\nVue.component(\"VSlider\", VSlider);\nVue.component(\"VCheckbox\", VCheckbox);\nVue.component(\"VSwitch\", VSwitch);\nVue.component(\"VSelect\", VSelect);\n\nimport {\n  getEmpresa,\n  getDocumento,\n  updateEmpresa,\n  postSubUsers,\n  getAllSubServicio,\n  getAllUsersEmpresa,\n} from \"@/api\";\n\nconst valuesRegisterdef = {\n  nombre: \"\",\n  tipoDocumento: \"\",\n  contacto: \"\",\n  correo: \"\",\n  documento: \"\",\n  rol: 8,\n  fechaCorte: \"\",\n  costos: [],\n};\n\nconst tenPercent = \"width: 18%;max-width: 18%;margin: 1%;\";\nconst tenPercentWFloat = \"width: 18%;max-width: 18%;margin: 1%; float: left;\";\n\nconst twentyPercent = \"width: 18%;max-width: 18%;margin: 1%;\";\nconst twentyPercentWFloat =\n  \"width: 18%;max-width: 18%;margin: 1%; float: left;\";\n\nconst thirtyPercent = \"width: 28%;max-width: 28%;margin: 1%;\";\nconst thirtyPercentWFloat =\n  \"width: 28%;max-width: 28%;margin: 1%; float: left;\";\n\nconst thirtytreePercent = \"width: 32.333%;max-width: 32.333%;margin: 1%;\";\nconst thirtytreePercentWFloat =\n  \"width: 31.333%;max-width: 31.333%;margin: 1%; float: left;\";\n\nconst fourtyPercent = \"width: 38%;max-width: 38%;margin: 1%;\";\nconst fourtyPercentWFloat =\n  \"width: 38%;max-width: 38%;margin: 1%; float: left;\";\n\nconst fiftyPercent = \"width: 48%;max-width: 48%;margin: 1%;\";\nconst fiftyPercentWFloat = \"width: 48%;max-width: 48%;margin: 1%; float: left;\";\n\nconst sixtyPercent = \"width: 58%;max-width: 58%;margin: 1%;\";\nconst sixtyPercentWFloat = \"width: 58%;max-width: 58%;margin: 1%; float: left;\";\n\nconst seventyPercent = \"width: 68%;max-width: 68%;margin: 1%;\";\nconst seventyPercentWFloat =\n  \"width: 68%;max-width: 68%;margin: 1%; float: left;\";\n\nconst hundredPercent = \"width: 98%;max-width: 98%;margin: 1%;\";\nconst hundredPercentWFloat =\n  \"width: 98%;max-width: 98%;margin: 1%; float: left;\";\n\nexport default {\n  data() {\n    return {\n      idSolicitud: this.$route.params.id,\n      valuesRegister: {\n        nombre: \"\",\n        tipoDocumento: \"\",\n        documento: \"\",\n        contacto: \"\",\n        correo: \"\",\n        representante_legal: \"\",\n        direccion: \"\",\n        fechaCorte: \"\",\n        fechaRemision: \"\",\n        rol: 8,\n        userSearchSelected: [],\n        costos: [],\n      },\n      menu: false,\n      serviciosDefault: [],\n      schemaRegister: [\n        {\n          id: \"razonsocial\",\n          component: \"VTextField\",\n          placeholder: \"Razón Social\",\n          style: fiftyPercentWFloat,\n        },\n        //Id Tipo Documento\n        {},\n        {\n          id: \"documento\",\n          component: \"VTextField\",\n          placeholder: \"No. Cedula / NIT\",\n          style: thirtyPercent,\n        },\n        {\n          id: \"direccion\",\n          component: \"VTextField\",\n          placeholder: \"Dirección de empresa\",\n          style: thirtytreePercentWFloat,\n        },\n        {\n          id: \"fechaCorte\",\n          component: \"VTextField\",\n          type: \"date\",\n          label: \"Fecha de Corte\",\n          style: thirtytreePercentWFloat,\n        },\n        {\n          id: \"fechaRemision\",\n          component: \"VTextField\",\n          type: \"date\",\n          label: \"Fecha de Remisión\",\n          style: thirtytreePercentWFloat,\n        },\n      ],\n      componentKey: 0,\n      costo: 0,\n      userSearch: [],\n      servicios: [],\n      costosServicios: [],\n      headers: [\n        { text: \"Id\", value: \"id\" },\n        { text: \"Estado Cliente\", value: \"estado\" },\n        { text: \"Nombre Cliente\", value: \"nombre\" },\n        { text: \"Rol\", value: \"rol\" },\n        { text: \"Código de cliente\", value: \"cod_cliente\" },\n        { text: \"Correo\", value: \"correo\" },\n        { text: \"Documento\", value: \"documento\" },\n        { text: \"Tipo de documento\", value: \"tipo_documento\" },\n      ],\n      schemaRegisterUsuario: [\n        {\n          id: \"nombre\",\n          component: \"VTextField\",\n          label: \"Nombre\",\n          style: hundredPercent,\n        },\n        //Id Tipo Documento\n        {},\n        {\n          id: \"documento\",\n          component: \"VTextField\",\n          label: \"Documento\",\n          style: hundredPercent,\n        },\n        {\n          id: \"contacto\",\n          component: \"VTextField\",\n          label: \"Teléfono\",\n          style: hundredPercent,\n        },\n        {\n          id: \"correo\",\n          component: \"VTextField\",\n          label: \"Correo\",\n          style: hundredPercent,\n        },\n        //Info contacto\n        {},\n        //Tipo de rol\n        {},\n      ],\n      serviciosDefault: [],\n      valuesRegisterUsuario: {\n        nombre: \"\",\n        tipoDocumento: \"\",\n        documento: \"\",\n        contacto: \"\",\n        correo: \"\",\n        representante_legal: \"\",\n        direccion: \"\",\n        fechaCorte: \"\",\n        fechaRemision: \"\",\n        userSearchSelected: [],\n        costos: [],\n      },\n      peticiones: [],\n      search: \"\",\n      dialog: false,\n      dialog2: false,\n      preServiciosSelected: 0,\n      precio: 0,\n      observaciones: \"\",\n    };\n  },\n\n  methods: {\n    agregarPrecio() {\n      for (let i in this.valuesRegister.costos) {\n        if (this.valuesRegister.costos[i].ID_SUBSERVICIO == this.preServiciosSelected) {\n          this.valuesRegister.costos[i] = {\n            ID_SUBSERVICIO: this.preServiciosSelected,\n            NOMBRE_SUBSERVICIO: this.getNombreServicio(this.preServiciosSelected),\n            costo: this.precio,\n            observaciones: this.observaciones,\n          };\n          this.recargarFormulario();\n          return;\n        }\n      }\n\n      this.valuesRegister.costos.push({\n        ID_SUBSERVICIO: this.preServiciosSelected,\n        NOMBRE_SUBSERVICIO: this.getNombreServicio(this.preServiciosSelected),\n        costo: this.precio,\n        observaciones: this.observaciones,\n      });\n    },\n\n    getNombreServicio(id) {\n      for (let i in this.servicios) {\n        if (this.servicios[i].ID_SUBSERVICIO == id) {\n          return this.servicios[i].NOMBRE_SUBSERVICIO;\n        }\n      }\n    },\n\n    postUser() {\n      postSubUsers(this.valuesRegisterUsuario)\n        .then(\n          function (response) {\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              },\n            });\n            if (response.data == \"\") {\n              Toast.fire({\n                icon: \"success\",\n                title: \"Usuario registrado exitosamente\",\n              });\n              this.valuesRegister = valuesRegisterdef;\n              this.recargarFormulario();\n              window.location.reload();\n            } else {\n              Toast.fire({\n                icon: \"error\",\n                title:\n                  \"Error al registrar el usuario, correo no válido y/o ya usado.\",\n              });\n            }\n          }.bind(this)\n        )\n        .catch(function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"error\",\n            title:\n              \"Error al registrar el usuario, correo no válido y/o ya usado.\",\n          });\n        });\n    },\n\n    registrarUsuarioAdmin() {\n      this.valuesRegisterUsuario.rol = 8;\n      this.valuesRegisterUsuario.empresa = this.idSolicitud;\n      this.postUser();\n    },\n\n    registrarSubUsuario() {\n      this.valuesRegisterUsuario.rol = 2;\n      this.valuesRegisterUsuario.empresa = this.idSolicitud;\n      this.postUser();\n    },\n\n    seleccionarPeticion(option) {\n      this.idSolicitudSeleccionada = option;\n      this.$router\n        .push({ path: \"/usuario/\" + this.idSolicitudSeleccionada.id })\n        .catch(() => {});\n      //this.$swal('Hello Vue world!!!');\n    },\n    myEventHandler(e) {\n      if (e.currentTarget.innerWidth <= 600) {\n        let classNames = document.getElementsByClassName(\"blitz-field\");\n        for (let i = 0; i < classNames.length; i++) {\n          document.getElementsByClassName(\"blitz-field\")[i].style = \"\";\n        }\n      }\n    },\n\n    realizarConsulta() {\n      getEmpresa(this.idSolicitud).then(\n        function (response) {\n          this.valuesRegister = response.data[0];\n          this.consultaSubServicios();\n          this.updateForm()\n        }.bind(this)\n      );\n    },\n\n    userSearchSelectedFunc(values) {\n      this.valuesRegister.userSearchSelected = values;\n    },\n    recargarFormulario() {\n      this.componentKey -= 1;\n    },\n\n    getCosto(index, servicioSel) {\n      let totalAumentar = 0;\n      for(let i in this.servicios){\n        if(i==servicioSel){\n          break;\n        }\n        totalAumentar += this.servicios[i].length\n      }\n      return this.costosServicios[totalAumentar+index].costo\n      // this.valuesRegister.costos = JSON.parse(\n      //   JSON.stringify(this.costosServicios)\n      // );\n    },\n\n    updateCosto(value, index, servicioSel) {\n      let totalAumentar = 0;\n      for(let i in this.servicios){\n        if(i==servicioSel){\n          break;\n        }\n        totalAumentar += this.servicios[i].length\n      }\n      this.costosServicios[totalAumentar+index].costo = Number(value);\n      // this.valuesRegister.costos = JSON.parse(\n      //   JSON.stringify(this.costosServicios)\n      // );\n    },\n    actualizarEmpresa() {\n      let datosRegistrar = this.valuesRegister\n      updateEmpresa(datosRegistrar)\n        .then(\n          function (response) {\n            const Toast = this.$swal.mixin({\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n                toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n              },\n            });\n            if (response.data == \"\") {\n              Toast.fire({\n                icon: \"success\",\n                title: \"Empresa actualizada exitosamente\",\n              });\n              this.valuesRegister = valuesRegisterdef;\n              window.location.reload();\n            } else {\n              Toast.fire({\n                icon: \"error\",\n                title: \"Error al actualizar empresa, vuélvalo a intentar.\",\n              });\n            }\n            this.updateForm()\n          }.bind(this)\n        )\n        .catch(function (response) {\n          const Toast = this.$swal.mixin({\n            toast: true,\n            position: \"top-end\",\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true,\n            didOpen: (toast) => {\n              toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n              toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n            },\n          });\n          Toast.fire({\n            icon: \"error\",\n            title: \"Error al actualizar empresa, vuélvalo a intentar.\",\n          });\n          this.updateForm()\n        });\n      // postUser(this.valuesRegister)\n      //   .then(\n      //     function (response) {\n      //       const Toast = this.$swal.mixin({\n      //         toast: true,\n      //         position: \"top-end\",\n      //         showConfirmButton: false,\n      //         timer: 3000,\n      //         timerProgressBar: true,\n      //         didOpen: (toast) => {\n      //           toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n      //           toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n      //         },\n      //       });\n      //       if (response.data == \"\") {\n      //         Toast.fire({\n      //           icon: \"success\",\n      //           title: \"Usuario registrado exitosamente\",\n      //         });\n      //         this.valuesRegister = valuesRegisterdef;\n      //         this.recargarFormulario();\n      //       } else {\n      //         Toast.fire({\n      //           icon: \"error\",\n      //           title:\n      //             \"Error al registrar el usuario, correo no válido y/o ya usado.\",\n      //         });\n      //       }\n      //     }.bind(this)\n      //   )\n      //   .catch(function (response) {\n      //     const Toast = this.$swal.mixin({\n      //       toast: true,\n      //       position: \"top-end\",\n      //       showConfirmButton: false,\n      //       timer: 3000,\n      //       timerProgressBar: true,\n      //       didOpen: (toast) => {\n      //         toast.addEventListener(\"mouseenter\", this.$swal.stopTimer);\n      //         toast.addEventListener(\"mouseleave\", this.$swal.resumeTimer);\n      //       },\n      //     });\n      //     Toast.fire({\n      //       icon: \"error\",\n      //       title:\n      //         \"Error al registrar el usuario, correo no válido y/o ya usado.\",\n      //     });\n      //   });\n    },\n    eliminarPrecio(id) {\n      this.valuesRegister.costos.splice(id, 1);\n    },\n\n    consultaSubServicios() {\n      getAllSubServicio().then(\n        function (response) {\n          this.servicios = response.data;\n\n          this.costosServicios = [];\n          for (let key in this.servicios) {\n            for (let i = 0; i < this.servicios[key].length; i++) {\n              let costo = 0\n              try{\n                costo = this.valuesRegister.costos[key][\n                    this.servicios[key][i].NOMBRE_SUBSERVICIO\n                  ]\n                if(costo == undefined){\n                  costo=0\n                }\n              } catch(error){\n                costo = 0\n              }\n              this.costosServicios.push({\n                idServicio: this.servicios[key][i].ID_SUBSERVICIO,\n                costo: costo\n              });\n            }\n          }\n          this.updateForm()\n          // this.valuesRegister.costos = JSON.parse(\n          //   JSON.stringify(this.costosServicios)\n          // );\n        }.bind(this)\n      );\n    },\n\n    updateForm(){\n      this.componentKey ++;\n    }\n  },\n\n  mounted() {\n    getAllUsersEmpresa(this.idSolicitud).then(\n      function (response) {\n        this.peticiones = response.data;\n      }.bind(this)\n    );\n\n    this.realizarConsulta();\n\n    const { offsetWidth, offsetHeight } = document.querySelector(\"#app\");\n    if (offsetWidth <= 600) {\n      setTimeout(function () {\n        let classNames = document.getElementsByClassName(\"blitz-field\");\n        for (let i = 0; i < classNames.length; i++) {\n          document.getElementsByClassName(\"blitz-field\")[i].style = \"\";\n        }\n      }, 200);\n    }\n\n    let classNames = document.getElementsByClassName(\"blitz-form__form\");\n    for (let i = 0; i < classNames.length; i++) {\n      document.getElementsByClassName(\"blitz-form__form\")[i].style =\n        \"display: block\";\n    }\n\n    getDocumento().then(\n      function (response) {\n        const indice = 1;\n        const itemsOptionsTemplate = {\n          value: \"\",\n          text: \"Tipo documento\",\n          disabled: true,\n        };\n\n        const options = [itemsOptionsTemplate];\n\n        for (let i = 0; i < response.data.length; i++) {\n          // Solución planteada así por un error de referencia de memoria\n          const itemsOptionsTemplate = {\n            value: \"\",\n            text: \"\",\n          };\n          const subTemplate = itemsOptionsTemplate;\n          itemsOptionsTemplate.value = response.data[i].ID_TIPO_DOCUMENTO;\n          subTemplate.text = response.data[i].DESC_TIPO_DOCUMENTO;\n          options.push(subTemplate);\n        }\n        let object = {\n          id: \"tipoDocumento\",\n          span: true,\n          component: \"VSelect\",\n          placeholder: \"Tipo de documento\",\n          style: tenPercentWFloat,\n          items: options,\n        };\n\n        this.schemaRegister[indice] = object;\n\n        this.schemaRegisterUsuario[1] = object;\n\n        this.recargarFormulario();\n      }.bind(this)\n    );\n  },\n\n  created() {\n    window.addEventListener(\"resize\", this.myEventHandler);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", this.myEventHandler);\n  },\n\n  watch: {\n    // valuesRegister(newValue, oldValue) {\n    //   this.valuesRegister.costos = oldValue.costos;\n    // },\n  },\n\n  components: {\n    FullBoxVue,\n    BlitzForm,\n    searchUserMultipleVue,\n  },\n};\n</script>\n\n<style>\n.tirthyPercent {\n  width: 23%;\n  max-width: 28%;\n  margin: 1%;\n  float: left;\n}\n\n.blitz-form__form {\n  display: block !important;\n}\n\n.formContent {\n  display: flow-root;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}