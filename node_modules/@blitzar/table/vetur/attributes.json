{
  "blitz-grid-list-toggle/value": {
    "type": "boolean",
    "description": "`value: true` represents \"grid mode\" so shows a \"list icon\"\n`value: false` represents \"list mode\" so shows a \"grid icon\""
  },
  "blitz-table/schemaColumns": {
    "type": "array",
    "description": "The schema for the columns you want to generate. (BlitzForm schema format)"
  },
  "blitz-table/schemaGrid": {
    "type": "array",
    "description": "The schema for the grid cards you want to generate. (BlitzForm schema format)"
  },
  "blitz-table/rows": {
    "type": "array",
    "description": "Rows of data to display. Use `rows` instead of the QTables `data`. Renamed for clarity."
  },
  "blitz-table/actionButtons": {
    "type": "array",
    "description": "Action buttons to add to the top right of the table. An array of objects just like a BlitzForm schema.\n\nThere is also one preset button to toggle between grid- and list-view. This is shown by default, or can be included in the schema array as just the string 'grid' like the example below."
  },
  "blitz-table/gridBlitzFormOptions": {
    "type": "object",
    "description": "The BlitzForm options you want to use for the grid cards. Eg. You can pass `{ actionButtons: [] }` here to include some action buttons on each grid card.\n\nPlease note:\n- The `schema` for the grid cards should be set via the `schemaGrid` prop instead of passing it here as `schema`.\n- The BlitzForm used for each grid card will automatically get the row data.\n- See the documentation of BlitzForm for more information on the props you can set."
  },
  "blitz-table/rowStyle": {
    "type": "object|array|string|function",
    "description": "Custom styling to be applied to each row. Applied like so `:style=\"rowStyle\"`"
  },
  "blitz-table/rowClasses": {
    "type": "object|array|string|function",
    "description": "Custom classes to be applied to each row. Applied like so `:class=\"rowClasses\"`"
  },
  "blitz-table/selectionComponentProps": {
    "type": "object",
    "description": "An object that represents the checkbox when the table is in \"selection\" mode. You can tell BlitzTable to use a custom checkbox component instead of the default.\nDefaults to a regular HTML5 checkbox."
  },
  "blitz-table/grid": {
    "type": "boolean"
  },
  "blitz-table/selected": {
    "type": "array"
  },
  "blitz-table/cardClass": {
    "type": "array",
    "description": "CSS classes to apply to the card (when in grid mode).\nYou can pass a function which will be evaluated just like an Evaluated Prop. The first param passed will be the entire row data. The second is `item` scoped slot object from a QTable."
  },
  "blitz-table/cardStyle": {
    "type": "array",
    "description": "CSS style to apply to the card (when in grid mode).\nYou can pass a function which will be evaluated just like an Evaluated Prop. The first param passed will be the entire row data. The second is `item` scoped slot object from a QTable."
  },
  "blitz-table/mode": {
    "type": "string",
    "description": "By default the rows show just the raw data without showing field components. If you set `mode: 'edit'` your entire table will show the actual (editable) component as per your schema."
  },
  "blitz-table/data": {
    "type": "array",
    "description": "Do not use this! Use `rows` instead of the QTables `data`. Renamed for clarity."
  },
  "blitz-table/columns": {
    "type": "",
    "description": "Do not use this! Use `schemaColumns` instead. This is the prop QTable uses to define its columns. BlitzTable uses `schemaColumns` instead."
  },
  "blitz-table/title": {
    "type": "string",
    "description": "A title to be placed above your table."
  },
  "blitz-table/rowKey": {
    "type": "",
    "description": "Do not use this! This is fixed to `id` in a BlitzTable and cannot be changed."
  }
}